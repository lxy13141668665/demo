{"ast":null,"code":"//1.导入VueRouter\nimport Vue from \"vue\";\nimport VueRouter from \"vue-router\";\n// 引入路由组件\nimport Home from \"@/pages/Home\";\n//2.使用路由\nVue.use(VueRouter);\n// 把VueRouter原型对象push，保存一份\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n\n// 重写push|replace\n// 第一个参数：告诉原来的push方法，往哪里跳转（传递哪些参数）\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(this, location, () => {}, () => {});\n  }\n};\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(this, location, () => {}, () => {});\n  }\n};\n\n//3.创建VueRouter的实例\nconst router = new VueRouter({\n  //tips:不想要 #（锚点）就添加下面代码\n  mode: \"history\",\n  //4.配置路由的path和组件\n  routes: [{\n    path: \"/home\",\n    component: Home,\n    meta: {\n      show: true\n    }\n  }, {\n    path: \"*\",\n    redirect: \"/home\"\n  }]\n});\n//5.导入路由实例\nexport default router;","map":{"version":3,"names":["Vue","VueRouter","Home","use","originPush","prototype","push","originReplace","replace","location","resolve","reject","call","router","mode","routes","path","component","meta","show","redirect"],"sources":["/Users/lixinyu/都昌第五代演示demo/vuedemo/src/router/index.js"],"sourcesContent":["//1.导入VueRouter\nimport Vue from \"vue\";\nimport VueRouter from \"vue-router\";\n// 引入路由组件\nimport Home from \"@/pages/Home\";\n//2.使用路由\nVue.use(VueRouter);\n// 把VueRouter原型对象push，保存一份\nlet originPush = VueRouter.prototype.push;\nlet originReplace = VueRouter.prototype.replace;\n\n// 重写push|replace\n// 第一个参数：告诉原来的push方法，往哪里跳转（传递哪些参数）\nVueRouter.prototype.push = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originPush.call(this, location, resolve, reject);\n  } else {\n    originPush.call(\n      this,\n      location,\n      () => {},\n      () => {}\n    );\n  }\n};\nVueRouter.prototype.replace = function (location, resolve, reject) {\n  if (resolve && reject) {\n    originReplace.call(this, location, resolve, reject);\n  } else {\n    originReplace.call(\n      this,\n      location,\n      () => {},\n      () => {}\n    );\n  }\n};\n\n//3.创建VueRouter的实例\nconst router = new VueRouter({\n  //tips:不想要 #（锚点）就添加下面代码\n  mode: \"history\",\n  //4.配置路由的path和组件\n  routes: [\n    {\n      path: \"/home\",\n      component: Home,\n      meta: { show: true },\n    },\n    {\n      path: \"*\",\n      redirect: \"/home\",\n    },\n  ],\n});\n//5.导入路由实例\nexport default router;\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,KAAK;AACrB,OAAOC,SAAS,MAAM,YAAY;AAClC;AACA,OAAOC,IAAI,MAAM,cAAc;AAC/B;AACAF,GAAG,CAACG,GAAG,CAACF,SAAS,CAAC;AAClB;AACA,IAAIG,UAAU,GAAGH,SAAS,CAACI,SAAS,CAACC,IAAI;AACzC,IAAIC,aAAa,GAAGN,SAAS,CAACI,SAAS,CAACG,OAAO;;AAE/C;AACA;AACAP,SAAS,CAACI,SAAS,CAACC,IAAI,GAAG,UAAUG,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAE;EAC9D,IAAID,OAAO,IAAIC,MAAM,EAAE;IACrBP,UAAU,CAACQ,IAAI,CAAC,IAAI,EAAEH,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC;EAClD,CAAC,MAAM;IACLP,UAAU,CAACQ,IAAI,CACb,IAAI,EACJH,QAAQ,EACR,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CAAC;EACH;AACF,CAAC;AACDR,SAAS,CAACI,SAAS,CAACG,OAAO,GAAG,UAAUC,QAAQ,EAAEC,OAAO,EAAEC,MAAM,EAAE;EACjE,IAAID,OAAO,IAAIC,MAAM,EAAE;IACrBJ,aAAa,CAACK,IAAI,CAAC,IAAI,EAAEH,QAAQ,EAAEC,OAAO,EAAEC,MAAM,CAAC;EACrD,CAAC,MAAM;IACLJ,aAAa,CAACK,IAAI,CAChB,IAAI,EACJH,QAAQ,EACR,MAAM,CAAC,CAAC,EACR,MAAM,CAAC,CACT,CAAC;EACH;AACF,CAAC;;AAED;AACA,MAAMI,MAAM,GAAG,IAAIZ,SAAS,CAAC;EAC3B;EACAa,IAAI,EAAE,SAAS;EACf;EACAC,MAAM,EAAE,CACN;IACEC,IAAI,EAAE,OAAO;IACbC,SAAS,EAAEf,IAAI;IACfgB,IAAI,EAAE;MAAEC,IAAI,EAAE;IAAK;EACrB,CAAC,EACD;IACEH,IAAI,EAAE,GAAG;IACTI,QAAQ,EAAE;EACZ,CAAC;AAEL,CAAC,CAAC;AACF;AACA,eAAeP,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}