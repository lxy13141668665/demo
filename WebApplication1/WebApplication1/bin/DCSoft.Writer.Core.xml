<?xml version="1.0"?>
<doc>
  <assembly>
    <name>DCSoft.Writer.Core</name>
  </assembly>
  <members>
    <member name="T:DCSoft.WebServerHost">
      <summary>
            WEB服务器抽象接口
            </summary>
    </member>
    <member name="F:DCSoft.WebServerHost._IsRunningInServerPageExecuter">
      <summary>
            当前代码是否运行在WebWriterControlServicePageExecuter之中
            </summary>
    </member>
    <member name="F:DCSoft.WebServerHost.HtmlGenerator">
      <summary>
            相关的HTML代码生成器
            </summary>
    </member>
    <member name="F:DCSoft.WebServerHost._CreationTime">
      <summary>
            对象创建时间
            </summary>
    </member>
    <member name="F:DCSoft.WebServerHost.IsHandledSpeedCount">
      <summary>
            是否处理了工作强度累计操作
            </summary>
    </member>
    <member name="F:DCSoft.WebServerHost.NeedAddSpeedCount">
      <summary>
            是否需要追加任务计数
            </summary>
    </member>
    <member name="M:DCSoft.WebServerHost.ClearCurrent">
      <summary>
            清空当前对象实例值
            </summary>
    </member>
    <member name="M:DCSoft.WebServerHost.EnabledBufferLicenseData">
      <summary>
            是否缓存授权数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.IsLocalServer">
      <summary>
            是否为本地服务器
            </summary>
    </member>
    <member name="M:DCSoft.WebServerHost.IsPostMethod">
      <summary>
            判断是否为POST模式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.ClientMachineName">
      <summary>
            客户端机器名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.IsEmptyRequest">
      <summary>
            是否为内容空白的请求对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.RequestQueryString(System.String)">
      <summary>
            获得WEB请求端的查询字符串
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.RqeuestFormString(System.String)">
      <summary>
            获得WEB请求端的表单数据
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.GetAllFormValues">
      <summary>
            获得所有的表单数据
            </summary>
      <returns>字段名称和值组成的字符串</returns>
    </member>
    <member name="M:DCSoft.WebServerHost.LoadRequestInputBinary">
      <summary>
            加载WEB请求端发送的POST二进制数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.SetResponseContentType(System.String)">
      <summary>
            设置WEB响应端的内容类型
            </summary>
      <param name="type">
      </param>
    </member>
    <member name="M:DCSoft.WebServerHost.GetResponseContentLength">
      <summary>
            WEB响应输出的内容长度
            </summary>
      <returns>长度</returns>
    </member>
    <member name="M:DCSoft.WebServerHost.ResponseWrite(System.String)">
      <summary>
            向WEB响应输出文本内容
            </summary>
      <param name="text">
      </param>
    </member>
    <member name="M:DCSoft.WebServerHost.ResponseWriteBinary(System.Byte[])">
      <summary>
            向WEB响应输出二进制内容
            </summary>
      <param name="bs">
      </param>
    </member>
    <member name="M:DCSoft.WebServerHost.GetRequestHeaderValue(System.String)">
      <summary>
            获得HTTP请求头信息
            </summary>
      <param name="name">名称</param>
      <returns>信息</returns>
    </member>
    <member name="M:DCSoft.WebServerHost.SetResponseHeader(System.String,System.String)">
      <summary>
            设置HTTP相应头信息
            </summary>
      <param name="name">名称</param>
      <param name="v">数值</param>
    </member>
    <member name="M:DCSoft.WebServerHost.SetSpecifyValue(System.String,System.String)">
      <summary>
            设置指定值
            </summary>
      <param name="specifyRuntimeSessionID">指定运行时编号</param>
      <param name="specifyUserAgent">指定的用户名称</param>
    </member>
    <member name="M:DCSoft.WebServerHost.SetClientCache(System.DateTime,System.Int32)">
      <summary>
            设置客户端内容缓存的小时数
            </summary>
      <param name="lastModifiedTime">最后修改时间</param>
      <param name="cacheHours">
      </param>
    </member>
    <member name="M:DCSoft.WebServerHost.GetRequestFilesContent">
      <summary>
            获得上传的文件内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.GetBrowserDebugInfo(System.Boolean)">
      <summary>
            获得浏览器调试输出文本信息
            </summary>
      <param name="addBrTag">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.GetBrowserStyle">
      <summary>
            获得浏览器的种类
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.IsMobileDevice">
      <summary>
            判断是否为移动端浏览器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.WebServerHost.SetSampleBytesForTest(System.Byte[])">
      <summary>
            为测试而对输出数据进行采样
            </summary>
      <param name="bs">原始数据</param>
    </member>
    <member name="P:DCSoft.WebServerHost.Current">
      <summary>
            当前线程使用的唯一静态实例
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.ServerName">
      <summary>
            服务器名称
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.UserName">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.IsRemoteClient">
      <summary>
            是否为远程客户端。
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.AbsoluteUri">
      <summary>
            页面绝对URL路径
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.EnabledGetResponseContentLength">
      <summary>
            判断是否启用GetResponseContentLength()函数
            </summary>
    </member>
    <member name="P:DCSoft.WebServerHost.IsTestMode">
      <summary>
            是否处于测试模式
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCConstExpressionItem">
      <summary>
            常量表达式元素。
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCConstExpressionItem.#ctor(System.Object,DCSoft.Expression.DCValueType)">
      <summary>
            初始化对象
            </summary>
      <param name="v">数值</param>
      <param name="vt">数据类型</param>
    </member>
    <member name="M:DCSoft.Expression.DCConstExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">上下文对象</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Expression.DCConstExpressionItem.ToDebugString(System.Int32,System.Text.StringBuilder)">
      <summary>
            调试输出文本
            </summary>
      <param name="indentLevel">
      </param>
      <param name="str">
      </param>
    </member>
    <member name="P:DCSoft.Expression.DCConstExpressionItem.StringValue">
      <summary>
            字符串数值
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCConstExpressionItem.BooleanValue">
      <summary>
            布尔值数值
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCConstExpressionItem.NumberValue">
      <summary>
            数字数值
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCConstExpressionItem.ValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCExpression">
      <summary>
            表达式对象，为顶级API类型。
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCExpression.isRefMode">
      <summary>
            添加一个属性，指示表达式中类似"[1234]"中的1234强制解析为对元素的引用而不是当作数值处理 伍贻超20211215
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCExpression.NaN">
      <summary>
            表示非数字的数值
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">表达式文本</param>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.EqualsContent(DCSoft.Expression.DCExpression)">
      <summary>
            比较两个表达式内容是否完全一致
            </summary>
      <param name="exp">另外一个表达式</param>
      <returns>是否完全一致</returns>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">上下文对象</param>
      <returns>运算结果</returns>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.ToDebugString">
      <summary>
            转换为调试用的文本
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.Parse(System.String)">
      <summary>
            解析表达式
            </summary>
      <param name="text">
      </param>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.ParseItem(DCSoft.Expression.DCExpressionItem,DCSoft.Expression.DCTokenList)">
      <summary>
            解析表达式项目
            </summary>
      <param name="rootItem">
      </param>
      <param name="tokens">
      </param>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.CollpaseItems(System.Collections.Generic.List{DCSoft.Expression.DCExpressionItem})">
      <summary>
            表达式元素列表的收缩
            </summary>
      <param name="items">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCExpression.ToDouble(System.Object,System.Double)">
      <summary>
            将对象转换为浮点数
            </summary>
      <param name="obj">
      </param>
      <param name="defaultValue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Expression.DCExpression.Text">
      <summary>
            表达式原始文本
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCExpressionItem">
      <summary>
            抽象的表达式元素类型。所有的表达式元素都是从这个类型派生出来的。
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCExpressionItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCExpressionItem.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Expression.DCExpressionItem.Priority">
      <summary>
            运算优先级。数值越大则优先级越高。
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCExpressionItem.Collapsed">
      <summary>
            已经收缩了的表达式
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCExpressionItemList">
      <summary>
            表达式对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCFunctionExpressionItem">
      <summary>
            函数表达式项目
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCFunctionExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Expression.DCFunctionExpressionItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCFunctionExpressionItem.Parameters">
      <summary>
            参数列表
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCFunctionType">
      <summary>
            函数类型
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCFunctionType.String">
      <summary>
            字符串函数
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCFunctionType.Number">
      <summary>
            数值函数
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCFunctionType.Group">
      <summary>
            聚合函数
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCGroupExpressionItem">
      <summary>
            表达式元素组。
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCGroupExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Expression.DCGroupExpressionItem.Items">
      <summary>
            子项目列表
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCOperatorExpressionItem">
      <summary>
            操作符元素
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCOperatorExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCOperatorExpressionItem.GetEqualResult(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            获得数值比较结果
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Expression.DCOperatorExpressionItem.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCOperatorExpressionItem.Operator">
      <summary>
            表达式类型
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCOperatorExpressionItem.Left">
      <summary>
            左边的元素
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCOperatorExpressionItem.Rigth">
      <summary>
            右边的元素
            </summary>
    </member>
    <member name="P:DCSoft.Expression.DCOperatorExpressionItem.IsLogicExpression">
      <summary>
            是否为逻辑运算
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCOperatorType">
      <summary>
            操作符类型
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.None">
      <summary>
            无效操作
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Plus">
      <summary>
            加法
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Minus">
      <summary>
            减法
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Multi">
      <summary>
            乘法
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Division">
      <summary>
            除法
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Mod">
      <summary>
            求模
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.And">
      <summary>
            逻辑与
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Or">
      <summary>
            逻辑或
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Bigger">
      <summary>
            大于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.BiggerOrEqual">
      <summary>
            大于等于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Less">
      <summary>
            小于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.LessOrEqual">
      <summary>
            小于等于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Equal">
      <summary>
            等于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Unequal">
      <summary>
            不等于
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCOperatorType.Negative">
      <summary>
            求负数
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCToken">
      <summary>
            符号对象
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCTokenList">
      <summary>
            符号对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCTokenList.Parse(System.String)">
      <summary>
            获得所有操作符字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCTokenList.ParseNumber(System.String,System.String)">
      <summary>
            文本转换为数字
            </summary>
      <param name="txt">文本</param>
      <param name="digs">数字字符</param>
      <returns>转换后的数字</returns>
    </member>
    <member name="M:DCSoft.Expression.DCTokenList.NextChar(System.String,System.Int32)">
      <summary>
            获得下一个字符
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Expression.DCTokenList.GetChartType(System.Char)">
      <summary>
            获得字符类型
            </summary>
      <param name="c">字符</param>
      <param name="isVB">是否为ＶＢ语法</param>
      <returns>字符类型</returns>
    </member>
    <member name="F:DCSoft.Expression.StringMode.None">
      <summary>
            无
            </summary>
    </member>
    <member name="F:DCSoft.Expression.StringMode.SingleQuotes">
      <summary>
            单引号字符串
            </summary>
    </member>
    <member name="F:DCSoft.Expression.StringMode.DoubleQuotes">
      <summary>
            多引号字符串
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.Symbol">
      <summary>
            标识符
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.MathOperator">
      <summary>
            数学运算符
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.LogicOperator">
      <summary>
            逻辑运算符
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.CurLeft">
      <summary>
            左边的圆括号
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.CurRight">
      <summary>
            右边的圆括号
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.SquLeft">
      <summary>
            左边的方括号
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.SquRight">
      <summary>
            右边的方括号
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.Whitespace">
      <summary>
            空白字符
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.Spliter">
      <summary>
            分隔字符
            </summary>
    </member>
    <member name="F:DCSoft.Expression.CharType.StringConst">
      <summary>
            字符串
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCValueType">
      <summary>
            数值类型
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCValueType.Number">
      <summary>
            数字
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCValueType.String">
      <summary>
            字符串
            </summary>
    </member>
    <member name="F:DCSoft.Expression.DCValueType.Boolean">
      <summary>
            布尔值
            </summary>
    </member>
    <member name="T:DCSoft.Expression.DCVariableExpressionItem">
      <summary>
            变量元素
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCVariableExpressionItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Expression.DCVariableExpressionItem.Eval(DCSoft.Expression.IDCExpressionContext)">
      <summary>
            执行表达式，根据上下文获取变量值
            </summary>
      <param name="context">上下文对象</param>
      <returns>变量值</returns>
    </member>
    <member name="M:DCSoft.Expression.DCVariableExpressionItem.ToDebugString(System.Int32,System.Text.StringBuilder)">
      <summary>
            输出调试用字符串
            </summary>
      <param name="indentLevel">层次</param>
      <param name="str">字符串对象</param>
    </member>
    <member name="M:DCSoft.Expression.DCVariableExpressionItem.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Expression.DCVariableExpressionItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="T:DCSoft.Expression.IDCExpressionContext">
      <summary>
            表达式执行上下文对象
            </summary>
    </member>
    <member name="M:DCSoft.Expression.IDCExpressionContext.ExecuteFunction(System.String,System.Object[])">
      <summary>
            执行函数
            </summary>
      <param name="name">函数名</param>
      <param name="parameters">参数列表</param>
      <returns>函数返回值</returns>
    </member>
    <member name="M:DCSoft.Expression.IDCExpressionContext.GetVariableValue(System.String)">
      <summary>
            获得变量值
            </summary>
      <param name="name">变量名</param>
      <returns>变量值</returns>
    </member>
    <member name="T:DCSoft.DCPDF.PDFBuilder">
      <summary>
            文档PDF创建器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.DCPDF.PDFBuilder._FastBuildOnce">
      <summary>
            快速创建模式
            </summary>
    </member>
    <member name="M:DCSoft.DCPDF.PDFBuilder.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.DCPDF.PDFBuilder.BuildInImageMode(System.Single,System.IO.Stream)">
      <summary>
            以图片方式生成PDF文件
            </summary>
    </member>
    <member name="M:DCSoft.DCPDF.PDFBuilder.Build(System.IO.Stream)">
      <summary>
            生成PDF文件
            </summary>
    </member>
    <member name="M:DCSoft.DCPDF.PDFBuilder.GetRuntimePages(DCSoft.Printing.PrintPageCollection)">
      <summary>
            获得运行时使用的页面对象列表
            </summary>
      <param name="allPages">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.DCPDF.PDFBuilder.Build2(System.IO.Stream)">
      <summary>
            生成PDF文件
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.PDFBuilder.Documents">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.PDFBuilder.ForeTextBlackColorOnce">
      <summary>
            只执行一次的强制所有的文本采用黑色字体
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.PDFBuilder.SpceifyPageIndexs">
      <summary>
            指定的页码列表
            </summary>
    </member>
    <member name="T:DCSoft.DCPDF.WriterPrintPDFPageEventArgs">
      <summary>
            打印PDF页面事件参数
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.PageBounds">
      <summary>
            页面边界
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.MarginBounds">
      <summary>
            内容边界
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.Graphics">
      <summary>
            画布对象
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.WriterPrintPDFPageEventArgs.PageIndex">
      <summary>
            页码
            </summary>
    </member>
    <member name="P:DCSoft.DCPDF.PDFDCGraphics.ForeTextBlackColor">
      <summary>
            强制所有的文本采用黑色字体
            </summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICanInsertObjectEventArgs">
      <summary>CanInsertObjectEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.GetData(System.String)">
      <summary>方法GetData</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.GetDataPresent(System.String)">
      <summary>方法GetDataPresent</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.GetFormats">
      <summary>方法GetFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.AccessFlags">
      <summary>属性AccessFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.AllowDataFormats">
      <summary>属性AllowDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.ContainerElement">
      <summary>属性ContainerElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.Position">
      <summary>属性Position</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.SpecifyFormat">
      <summary>属性SpecifyFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertObjectEventArgs.SpecifyPosition">
      <summary>属性SpecifyPosition</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IContentBuilder">
      <summary>ContentBuilder 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.Append(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法Append</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendDocumentContent(DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法AppendDocumentContent</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendDocumentContentByBase64String(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法AppendDocumentContentByBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendDocumentContentByFileName(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法AppendDocumentContentByFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendParagraphFlag">
      <summary>方法AppendParagraphFlag</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendParagraphFlagWithStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法AppendParagraphFlagWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendParagraphFlagWithStyleString(System.String)">
      <summary>方法AppendParagraphFlagWithStyleString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendRange(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法AppendRange</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendRangeWithStyle(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法AppendRangeWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendText(System.String)">
      <summary>方法AppendText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendTextWithStyle(System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法AppendTextWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendTextWithStyleString(System.String,System.String)">
      <summary>方法AppendTextWithStyleString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.AppendWithStyle(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法AppendWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.Insert(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法Insert</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertDocumentContent(System.Int32,DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法InsertDocumentContent</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertDocumentContentByBase64String(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法InsertDocumentContentByBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertDocumentContentByFileName(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法InsertDocumentContentByFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertParagraphFlag(System.Int32)">
      <summary>方法InsertParagraphFlag</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertParagraphFlagWithStyle(System.Int32,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法InsertParagraphFlagWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertParagraphFlagWithStyleString(System.Int32,System.String)">
      <summary>方法InsertParagraphFlagWithStyleString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertRange(System.Int32,DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法InsertRange</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertRangeWithStyle(System.Int32,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法InsertRangeWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertText(System.Int32,System.String)">
      <summary>方法InsertText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertTextWithStyle(System.Int32,System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法InsertTextWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertTextWithStyleString(System.Int32,System.String,System.String)">
      <summary>方法InsertTextWithStyleString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.InsertWithStyle(System.Int32,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法InsertWithStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.RawClear">
      <summary>方法RawClear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentBuilder.SetParagraphStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法SetParagraphStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.AppendRawMode">
      <summary>属性AppendRawMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.Container">
      <summary>属性Container</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.ContentStyle">
      <summary>属性ContentStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.EnableAddPermissionFlag">
      <summary>属性EnableAddPermissionFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentBuilder.ParagraphStyle">
      <summary>属性ParagraphStyle</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IContentChangedEventArgs">
      <summary>ContentChangedEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.DeletedElements">
      <summary>属性DeletedElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.EventSource">
      <summary>属性EventSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.InsertedElements">
      <summary>属性InsertedElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.LoadingDocument">
      <summary>属性LoadingDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.OnlyStyleChanged">
      <summary>属性OnlyStyleChanged</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangedEventArgs.Tag">
      <summary>属性Tag</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IContentChangingEventArgs">
      <summary>ContentChangingEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IContentChangingEventArgs.GetContainerNewText">
      <summary>方法GetContainerNewText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.DeletingElements">
      <summary>属性DeletingElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.InsertingElements">
      <summary>属性InsertingElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IContentChangingEventArgs.Tag">
      <summary>属性Tag</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDCStdImageList">
      <summary>DCStdImageList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDCStdImageList.SetBitmapByBase64String(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>方法SetBitmapByBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDCStdImageList.SetBitmapByFileName(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>方法SetBitmapByFileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCStdImageList.TransparentColor">
      <summary>属性TransparentColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCStdImageList.TransparentColorValue">
      <summary>属性TransparentColorValue</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentBehaviorOptions">
      <summary>DocumentBehaviorOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AcceptDataFormats">
      <summary>属性AcceptDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ActiveCheckInstallWindowsMediaPlayer">
      <summary>属性ActiveCheckInstallWindowsMediaPlayer</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AllowDeleteJumpOutOfField">
      <summary>属性AllowDeleteJumpOutOfField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AllowDragContent">
      <summary>属性AllowDragContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AppErrorHandleMode">
      <summary>属性AppErrorHandleMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoActiveSystemTaskbarBeforeShowDialog">
      <summary>属性AutoActiveSystemTaskbarBeforeShowDialog</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoAssistInsertString">
      <summary>属性AutoAssistInsertString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoAssistInsertStringDetectTextLength">
      <summary>属性AutoAssistInsertStringDetectTextLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoClearInvalidateCharacter">
      <summary>属性AutoClearInvalidateCharacter</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoClearTextFormatWhenPasteOrInsertContent">
      <summary>属性AutoClearTextFormatWhenPasteOrInsertContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoCreateInstanceInProperty">
      <summary>属性AutoCreateInstanceInProperty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoDocumentValueValidate">
      <summary>属性AutoDocumentValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoFixElementIDWhenInsertElements">
      <summary>属性AutoFixElementIDWhenInsertElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoFocusWhenOpenDocument">
      <summary>属性AutoFocusWhenOpenDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoIgnoreLastEmptyPage">
      <summary>属性AutoIgnoreLastEmptyPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoRefreshUserTrackInfos">
      <summary>属性AutoRefreshUserTrackInfos</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoSaveIntervalInSecond">
      <summary>属性AutoSaveIntervalInSecond</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoSaveScriptAssemblyToTempFile">
      <summary>属性AutoSaveScriptAssemblyToTempFile</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoScrollToCaretWhenGotFocus">
      <summary>属性AutoScrollToCaretWhenGotFocus</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoShowScriptErrorMessage">
      <summary>属性AutoShowScriptErrorMessage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoTranslateDescString">
      <summary>属性AutoTranslateDescString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoTranslateSourceString">
      <summary>属性AutoTranslateSourceString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoUpdateButtonVisible">
      <summary>属性AutoUpdateButtonVisible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.AutoUppercaseFirstCharInFirstLine">
      <summary>属性AutoUppercaseFirstCharInFirstLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CheckedValueBindingHandledForTableRow">
      <summary>属性CheckedValueBindingHandledForTableRow</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CloneSerialize">
      <summary>属性CloneSerialize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CommentEditableWhenReadonly">
      <summary>属性CommentEditableWhenReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CommentVisibility">
      <summary>属性CommentVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CompressLayoutForFieldBorder">
      <summary>属性CompressLayoutForFieldBorder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CompressXMLContent">
      <summary>属性CompressXMLContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ContinueHeaderParagrahStyle">
      <summary>属性ContinueHeaderParagrahStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CreationDataFormats">
      <summary>属性CreationDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CustomPromptForbitCheckMRID">
      <summary>属性CustomPromptForbitCheckMRID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.CustomWarringCheckMRID">
      <summary>属性CustomWarringCheckMRID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DataObjectRange">
      <summary>属性DataObjectRange</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DebugMode">
      <summary>属性DebugMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DefaultEditorActiveMode">
      <summary>属性DefaultEditorActiveMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DesignMode">
      <summary>属性DesignMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DisableCheckMRIDWhenMRIDIsEmptyForOuterDataObject">
      <summary>属性DisableCheckMRIDWhenMRIDIsEmptyForOuterDataObject</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DisplayFormatToInnerValue">
      <summary>属性DisplayFormatToInnerValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DoubleClickToEditComment">
      <summary>属性DoubleClickToEditComment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DoubleClickToSelectWord">
      <summary>属性DoubleClickToSelectWord</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.DoubleCompressHtmlWhitespace">
      <summary>属性DoubleCompressHtmlWhitespace</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableAIForSuspiciousContent">
      <summary>属性EnableAIForSuspiciousContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableCalculateControl">
      <summary>属性EnableCalculateControl</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableCheckControlLoaded">
      <summary>属性EnableCheckControlLoaded</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableChineseFontSizeName">
      <summary>属性EnableChineseFontSizeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableCollapseSection">
      <summary>属性EnableCollapseSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableCompressUserHistories">
      <summary>属性EnableCompressUserHistories</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableContentChangedEventWhenLoadDocument">
      <summary>属性EnableContentChangedEventWhenLoadDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableContentLock">
      <summary>属性EnableContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableControlHostAtDesignTime">
      <summary>属性EnableControlHostAtDesignTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableCopySource">
      <summary>属性EnableCopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableDataBinding">
      <summary>属性EnableDataBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnabledElementEvent">
      <summary>属性EnabledElementEvent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableDeleteReadonlyEmptyContainer">
      <summary>属性EnableDeleteReadonlyEmptyContainer</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnabledLicenseHardwareDog">
      <summary>属性EnabledLicenseHardwareDog</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnabledShowWinTaskBarProgress">
      <summary>属性EnabledShowWinTaskBarProgress</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableEditElementValue">
      <summary>属性EnableEditElementValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableElementEvents">
      <summary>属性EnableElementEvents</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableExpression">
      <summary>属性EnableExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableHyperLink">
      <summary>属性EnableHyperLink</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableKBEntryRangeMask">
      <summary>属性EnableKBEntryRangeMask</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableLogUndo">
      <summary>属性EnableLogUndo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableScript">
      <summary>属性EnableScript</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EnableSetJumpPrintPositionWhenPreview">
      <summary>属性EnableSetJumpPrintPositionWhenPreview</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.EncodingCodePageForWriteRTF">
      <summary>属性EncodingCodePageForWriteRTF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ExcludeKeywords">
      <summary>属性ExcludeKeywords</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ExtendingPrintDialog">
      <summary>属性ExtendingPrintDialog</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.FastInputMode">
      <summary>属性FastInputMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.FillCommentToUserTrackList">
      <summary>属性FillCommentToUserTrackList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ForceCollateWhenPrint">
      <summary>属性ForceCollateWhenPrint</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ForcePopupFormTopMost">
      <summary>属性ForcePopupFormTopMost</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ForceRaiseEventAfterFieldContentEdit">
      <summary>属性ForceRaiseEventAfterFieldContentEdit</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.FormView">
      <summary>属性FormView</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.GeneratePageContentVersion">
      <summary>属性GeneratePageContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.GlobalSpecifyDebugModeValue">
      <summary>属性GlobalSpecifyDebugModeValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.HandleCommandException">
      <summary>属性HandleCommandException</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.IgnoreDataBindingWhenMissValue">
      <summary>属性IgnoreDataBindingWhenMissValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.IgnorePrintableAreaOffset">
      <summary>属性IgnorePrintableAreaOffset</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ImageCompressSaveMode">
      <summary>属性ImageCompressSaveMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ImageShapeEditorBackgroundMenuItemConfig">
      <summary>属性ImageShapeEditorBackgroundMenuItemConfig</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.InsertCommentBindingUserTrack">
      <summary>属性InsertCommentBindingUserTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.InsertDocumentWithCheckMRID">
      <summary>属性InsertDocumentWithCheckMRID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.LicenseServicePageUrl">
      <summary>属性LicenseServicePageUrl</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.LocalAutoSaveWorkDirectory">
      <summary>属性LocalAutoSaveWorkDirectory</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.LockScrollPositionWhenStrictFormViewMode">
      <summary>属性LockScrollPositionWhenStrictFormViewMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MaximizedPrintPreviewDialog">
      <summary>属性MaximizedPrintPreviewDialog</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MaxTextLengthForPaste">
      <summary>属性MaxTextLengthForPaste</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MaxZoomRate">
      <summary>属性MaxZoomRate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MinCountForDropdownListSpellCodeArea">
      <summary>属性MinCountForDropdownListSpellCodeArea</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MinImageFileSizeForConfirmCompressSaveMode">
      <summary>属性MinImageFileSizeForConfirmCompressSaveMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MinZoomRate">
      <summary>属性MinZoomRate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MoveCaretWhenDeleteFail">
      <summary>属性MoveCaretWhenDeleteFail</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MoveFieldWhenDragWholeContent">
      <summary>属性MoveFieldWhenDragWholeContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.MoveFocusHotKey">
      <summary>属性MoveFocusHotKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.NewExpressionExecuteMode">
      <summary>属性NewExpressionExecuteMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.NotificationWorkingTimeout">
      <summary>属性NotificationWorkingTimeout</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.OutputBackgroundTextToRTF">
      <summary>属性OutputBackgroundTextToRTF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.OutputFieldBorderTextToContentText">
      <summary>属性OutputFieldBorderTextToContentText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.OutputFormatedXMLSource">
      <summary>属性OutputFormatedXMLSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PageLineUnderPageBreak">
      <summary>属性PageLineUnderPageBreak</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ParagraphFlagFollowTableOrSection">
      <summary>属性ParagraphFlagFollowTableOrSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ParseCrLfAsLineBreakElement">
      <summary>属性ParseCrLfAsLineBreakElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PowerfulCommentCommand">
      <summary>属性PowerfulCommentCommand</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PreserveClipbardDataWhenExit">
      <summary>属性PreserveClipbardDataWhenExit</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PromptForExcludeSystemClipboardRange">
      <summary>属性PromptForExcludeSystemClipboardRange</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PromptForRejectFormat">
      <summary>属性PromptForRejectFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PromptJumpBackForSearch">
      <summary>属性PromptJumpBackForSearch</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.PromptProtectedContent">
      <summary>属性PromptProtectedContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.RaiseQueryListItemsWhenUserEditText">
      <summary>属性RaiseQueryListItemsWhenUserEditText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.RemoveLastParagraphFlagWhenInsertDocument">
      <summary>属性RemoveLastParagraphFlagWhenInsertDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.SetParagraphFlagHeightUsePreElement">
      <summary>属性SetParagraphFlagHeightUsePreElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ShowDebugMessage">
      <summary>属性ShowDebugMessage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ShowNoLicenseFunctionRisk">
      <summary>属性ShowNoLicenseFunctionRisk</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ShowTooltip">
      <summary>属性ShowTooltip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.SimpleElementProperties">
      <summary>属性SimpleElementProperties</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.SmoothScrollView">
      <summary>属性SmoothScrollView</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.SpecifyDebugMode">
      <summary>属性SpecifyDebugMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.SpeedupByMultiThread">
      <summary>属性SpeedupByMultiThread</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.StdLablesForImageEditor">
      <summary>属性StdLablesForImageEditor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.TableCellOperationDetectDistance">
      <summary>属性TableCellOperationDetectDistance</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ThreeClickToSelectParagraph">
      <summary>属性ThreeClickToSelectParagraph</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.TitleForToolTip">
      <summary>属性TitleForToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.UseNewValueExpressionEngine">
      <summary>属性UseNewValueExpressionEngine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ValidateIDRepeatMode">
      <summary>属性ValidateIDRepeatMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.ValidateUserIDWhenEditDeleteComment">
      <summary>属性ValidateUserIDWhenEditDeleteComment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.WeakMode">
      <summary>属性WeakMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.WidelyRaiseFocusEvent">
      <summary>属性WidelyRaiseFocusEvent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.WordBreak">
      <summary>属性WordBreak</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentBehaviorOptions.XMLContentEncodingName">
      <summary>属性XMLContentEncodingName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentEditOptions">
      <summary>DocumentEditOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.AutoInsertTableRowWhenMoveToNextCell">
      <summary>属性AutoInsertTableRowWhenMoveToNextCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.ClearFieldValueWhenCopy">
      <summary>属性ClearFieldValueWhenCopy</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.CloneWithoutElementBorderStyle">
      <summary>属性CloneWithoutElementBorderStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.CloneWithoutLogicDeletedContent">
      <summary>属性CloneWithoutLogicDeletedContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.CopyInTextFormatOnly">
      <summary>属性CopyInTextFormatOnly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.CopyWithoutInputFieldStructure">
      <summary>属性CopyWithoutInputFieldStructure</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.FixSizeWhenInsertImage">
      <summary>属性FixSizeWhenInsertImage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.FixWidthWhenInsertImage">
      <summary>属性FixWidthWhenInsertImage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.FixWidthWhenInsertTable">
      <summary>属性FixWidthWhenInsertTable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.GridLinePreviewText">
      <summary>属性GridLinePreviewText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.KeepTableWidthWhenInsertDeleteColumn">
      <summary>属性KeepTableWidthWhenInsertDeleteColumn</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.TabKeyToFirstLineIndent">
      <summary>属性TabKeyToFirstLineIndent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.TabKeyToInsertTableRow">
      <summary>属性TabKeyToInsertTableRow</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEditOptions.ValueValidateMode">
      <summary>属性ValueValidateMode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentNavigator">
      <summary>DocumentNavigator 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentNavigator.GetNodeByID(System.String)">
      <summary>方法GetNodeByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentNavigator.GetNodeString">
      <summary>方法GetNodeString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentNavigator.Refresh">
      <summary>方法Refresh</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentNavigator.CurrentNode">
      <summary>属性CurrentNode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentNavigator.Nodes">
      <summary>属性Nodes</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentOptions">
      <summary>DocumentOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOptions.BehaviorOptions">
      <summary>属性BehaviorOptions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOptions.EditOptions">
      <summary>属性EditOptions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOptions.SecurityOptions">
      <summary>属性SecurityOptions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOptions.ViewOptions">
      <summary>属性ViewOptions</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentViewOptions">
      <summary>DocumentViewOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.AdornTextBackColor">
      <summary>属性AdornTextBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.AdornTextBackColorValue">
      <summary>属性AdornTextBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.AdornTextVisibility">
      <summary>属性AdornTextVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.AutoZoomDropdownListFontSize">
      <summary>属性AutoZoomDropdownListFontSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.BackgroundTextColor">
      <summary>属性BackgroundTextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.BackgroundTextColorValue">
      <summary>属性BackgroundTextColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.BothBlackWhenPrint">
      <summary>属性BothBlackWhenPrint</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.CommentDateFormatString">
      <summary>属性CommentDateFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.CommentFontName">
      <summary>属性CommentFontName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.CommentFontSize">
      <summary>属性CommentFontSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultAdornTextType">
      <summary>属性DefaultAdornTextType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultInputFieldHighlight">
      <summary>属性DefaultInputFieldHighlight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultInputFieldTextColor">
      <summary>属性DefaultInputFieldTextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultInputFieldTextColorValue">
      <summary>属性DefaultInputFieldTextColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultLineColorForImageEditor">
      <summary>属性DefaultLineColorForImageEditor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DefaultLineColorForImageEditorValue">
      <summary>属性DefaultLineColorForImageEditorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DropdownListFontName">
      <summary>属性DropdownListFontName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.DropdownListFontSize">
      <summary>属性DropdownListFontSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.EmphasisMarkSize">
      <summary>属性EmphasisMarkSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.EnableEncryptView">
      <summary>属性EnableEncryptView</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.EnableFieldTextColor">
      <summary>属性EnableFieldTextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.EnableRightToLeft">
      <summary>属性EnableRightToLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ExtInfoPixelWidth">
      <summary>属性ExtInfoPixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldBackColor">
      <summary>属性FieldBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldBackColorValue">
      <summary>属性FieldBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldBorderColor">
      <summary>属性FieldBorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldBorderColorValue">
      <summary>属性FieldBorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldBorderElementPixelWidth">
      <summary>属性FieldBorderElementPixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldFocusedBackColor">
      <summary>属性FieldFocusedBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldFocusedBackColorValue">
      <summary>属性FieldFocusedBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldHoverBackColor">
      <summary>属性FieldHoverBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldHoverBackColorValue">
      <summary>属性FieldHoverBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldInvalidateValueBackColor">
      <summary>属性FieldInvalidateValueBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldInvalidateValueBackColorValue">
      <summary>属性FieldInvalidateValueBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldInvalidateValueForeColor">
      <summary>属性FieldInvalidateValueForeColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldInvalidateValueForeColorValue">
      <summary>属性FieldInvalidateValueForeColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldTextColor">
      <summary>属性FieldTextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldTextColorValue">
      <summary>属性FieldTextColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldTextPrintColor">
      <summary>属性FieldTextPrintColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.FieldTextPrintColorValue">
      <summary>属性FieldTextPrintColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.GraphicsSmoothingMode">
      <summary>属性GraphicsSmoothingMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.GridLineColor">
      <summary>属性GridLineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.GridLineColorValue">
      <summary>属性GridLineColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.GridLineStyle">
      <summary>属性GridLineStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.HeaderBottomLineWidth">
      <summary>属性HeaderBottomLineWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.HiddenFieldBorderWhenLostFocus">
      <summary>属性HiddenFieldBorderWhenLostFocus</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.HiddenTableBorderJumpPrintPage">
      <summary>属性HiddenTableBorderJumpPrintPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.HighlightProtectedContent">
      <summary>属性HighlightProtectedContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.IgnoreFieldBorderWhenPrint">
      <summary>属性IgnoreFieldBorderWhenPrint</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ImageInterpolationMode">
      <summary>属性ImageInterpolationMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.LayoutDirection">
      <summary>属性LayoutDirection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.MaskColorForJumpPrint">
      <summary>属性MaskColorForJumpPrint</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.MaskColorForJumpPrintValue">
      <summary>属性MaskColorForJumpPrintValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.MinTableColumnWidth">
      <summary>属性MinTableColumnWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NewInputContentUnderlineColor">
      <summary>属性NewInputContentUnderlineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NewInputContentUnderlineColorValue">
      <summary>属性NewInputContentUnderlineColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NoneBorderColor">
      <summary>属性NoneBorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NoneBorderColorValue">
      <summary>属性NoneBorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NormalFieldBorderColor">
      <summary>属性NormalFieldBorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.NormalFieldBorderColorValue">
      <summary>属性NormalFieldBorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.OldWhitespaceWidth">
      <summary>属性OldWhitespaceWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.PageMarginLineLength">
      <summary>属性PageMarginLineLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.PreserveBackgroundTextWhenPrint">
      <summary>属性PreserveBackgroundTextWhenPrint</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.PrintBackgroundText">
      <summary>属性PrintBackgroundText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.PrintGridLine">
      <summary>属性PrintGridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.PrintImageAltText">
      <summary>属性PrintImageAltText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ProtectedContentBackColor">
      <summary>属性ProtectedContentBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ProtectedContentBackColorValue">
      <summary>属性ProtectedContentBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ReadonlyFieldBackColor">
      <summary>属性ReadonlyFieldBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ReadonlyFieldBackColorValue">
      <summary>属性ReadonlyFieldBackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ReadonlyFieldBorderColor">
      <summary>属性ReadonlyFieldBorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ReadonlyFieldBorderColorValue">
      <summary>属性ReadonlyFieldBorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.RichTextBoxCompatibility">
      <summary>属性RichTextBoxCompatibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SectionBorderVisibility">
      <summary>属性SectionBorderVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SelectionHighlight">
      <summary>属性SelectionHighlight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SelectionHightlightMaskColor">
      <summary>属性SelectionHightlightMaskColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SelectionHightlightMaskColorValue">
      <summary>属性SelectionHightlightMaskColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowBackgroundCellID">
      <summary>属性ShowBackgroundCellID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowCellNoneBorder">
      <summary>属性ShowCellNoneBorder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowExpressionFlag">
      <summary>属性ShowExpressionFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowFieldBorderElement">
      <summary>属性ShowFieldBorderElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowFormButton">
      <summary>属性ShowFormButton</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowGrayMaskOverDisableContentParty">
      <summary>属性ShowGrayMaskOverDisableContentParty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowGridLine">
      <summary>属性ShowGridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowHeaderBottomLine">
      <summary>属性ShowHeaderBottomLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowInputFieldStateTag">
      <summary>属性ShowInputFieldStateTag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowLineNumber">
      <summary>属性ShowLineNumber</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowPageBreak">
      <summary>属性ShowPageBreak</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowPageLine">
      <summary>属性ShowPageLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.ShowParagraphFlag">
      <summary>属性ShowParagraphFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SpecifyExtenGridLineStep">
      <summary>属性SpecifyExtenGridLineStep</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.SupportUG">
      <summary>属性SupportUG</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TableCellBorderVisibility">
      <summary>属性TableCellBorderVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForModifiedField">
      <summary>属性TagColorForModifiedField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForModifiedFieldValue">
      <summary>属性TagColorForModifiedFieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForNormalField">
      <summary>属性TagColorForNormalField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForNormalFieldValue">
      <summary>属性TagColorForNormalFieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForReadonlyField">
      <summary>属性TagColorForReadonlyField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForReadonlyFieldValue">
      <summary>属性TagColorForReadonlyFieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForValueInvalidateField">
      <summary>属性TagColorForValueInvalidateField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TagColorForValueInvalidateFieldValue">
      <summary>属性TagColorForValueInvalidateFieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.TextRenderStyle">
      <summary>属性TextRenderStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.UnEditableFieldBorderColor">
      <summary>属性UnEditableFieldBorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.UnEditableFieldBorderColorValue">
      <summary>属性UnEditableFieldBorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentViewOptions.UseLanguage2">
      <summary>属性UseLanguage2</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentWriterControlOptions">
      <summary>DocumentWriterControlOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.AcceptDataFormats">
      <summary>属性AcceptDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.AllowDragContent">
      <summary>属性AllowDragContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.AllowDrop">
      <summary>属性AllowDrop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.AutoSetDocumentDefaultFont">
      <summary>属性AutoSetDocumentDefaultFont</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.AutoUserLogin">
      <summary>属性AutoUserLogin</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.CommentVisibility">
      <summary>属性CommentVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.CreationDataFormats">
      <summary>属性CreationDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.EnabledElementEvent">
      <summary>属性EnabledElementEvent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.FormView">
      <summary>属性FormView</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.HeaderFooterReadonly">
      <summary>属性HeaderFooterReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.IsAdministrator">
      <summary>属性IsAdministrator</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.MoveFocusHotKey">
      <summary>属性MoveFocusHotKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.PageTitlePosition">
      <summary>属性PageTitlePosition</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.ReadViewMode">
      <summary>属性ReadViewMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentWriterControlOptions.ViewMode">
      <summary>属性ViewMode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementCancelEventArgs">
      <summary>ElementCancelEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementCancelEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementCancelEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementCancelEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementCancelEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementCancelEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementEventArgs">
      <summary>ElementEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementEventTemlateMap">
      <summary>ElementEventTemlateMap 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemlateMap.ContainsByTypeName(System.String)">
      <summary>方法ContainsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemlateMap.GetEventTemplatesByTypeName(System.String)">
      <summary>方法GetEventTemplatesByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemlateMap.SetEventTemplatesByTypeName(System.String,DCSoft.Writer.ElementEventTemplate)">
      <summary>方法SetEventTemplatesByTypeName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementEventTemplateComEvents">
      <summary>ElementEventTemplate 事件的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.AfterPaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary> AfterPaint 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.BeforeDropDown(System.Object,DCSoft.Writer.ElementCancelEventArgs)">
      <summary> BeforeDropDown 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.BeforePaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary> BeforePaint 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.ContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary> ContentChanged 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.ContentChanging(System.Object,DCSoft.Writer.ContentChangingEventArgs)">
      <summary> ContentChanging 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.Expression(System.Object,DCSoft.Writer.ElementExpressionEventArgs)">
      <summary> Expression 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.GotFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary> GotFocus 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.KeyDown(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary> KeyDown 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.KeyPress(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary> KeyPress 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.KeyUp(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary> KeyUp 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.Load(System.Object,DCSoft.Writer.ElementLoadEventArgs)">
      <summary> Load 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.LostFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary> LostFocus 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary> MouseClick 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseDblClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary> MouseDblClick 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseDown(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary> MouseDown 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseEnter(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary> MouseEnter 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseLeave(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary> MouseLeave 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseMove(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary> MouseMove 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.MouseUp(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary> MouseUp 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.QueryState(System.Object,DCSoft.Writer.ElementQueryStateEventArgs)">
      <summary> QueryState 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.Validated(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary> Validated 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateComEvents.Validating(System.Object,DCSoft.Writer.ElementValidatingEventArgs)">
      <summary> Validating 事件</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementEventTemplate">
      <summary>ElementEventTemplate 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplate.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventTemplate.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventTemplate.Name">
      <summary>属性Name</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementEventTemplateList">
      <summary>ElementEventTemplateList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateList.Add(DCSoft.Writer.ElementEventTemplate)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateList.Contains(DCSoft.Writer.ElementEventTemplate)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateList.Insert(System.Int32,DCSoft.Writer.ElementEventTemplate)">
      <summary>方法Insert</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IElementEventTemplateList.Remove(DCSoft.Writer.ElementEventTemplate)">
      <summary>方法Remove</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventTemplateList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventTemplateList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementEventTemplateList.Item(System.String)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementExpressionEventArgs">
      <summary>ElementExpressionEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementExpressionEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementExpressionEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementExpressionEventArgs.Expression">
      <summary>属性Expression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementExpressionEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementExpressionEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementKeyEventArgs">
      <summary>ElementKeyEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Alt">
      <summary>属性Alt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Control">
      <summary>属性Control</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.KeyCharValue">
      <summary>属性KeyCharValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.KeyCodeValue">
      <summary>属性KeyCodeValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementKeyEventArgs.Shift">
      <summary>属性Shift</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementLoadEventArgs">
      <summary>ElementLoadEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementLoadEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementLoadEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementLoadEventArgs.Format">
      <summary>属性Format</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementLoadEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementMouseEventArgs">
      <summary>ElementMouseEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Button">
      <summary>属性Button</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.ButtonValue">
      <summary>属性ButtonValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Clicks">
      <summary>属性Clicks</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Delta">
      <summary>属性Delta</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.DocumentX">
      <summary>属性DocumentX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.DocumentY">
      <summary>属性DocumentY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.ElementClientX">
      <summary>属性ElementClientX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.ElementClientY">
      <summary>属性ElementClientY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.HasLeftButton">
      <summary>属性HasLeftButton</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementMouseEventArgs.HasRightButton">
      <summary>属性HasRightButton</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementPaintEventArgs">
      <summary>ElementPaintEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.ForCreateImage">
      <summary>属性ForCreateImage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementPaintEventArgs.RenderMode">
      <summary>属性RenderMode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementQueryStateEventArgs">
      <summary>ElementQueryStateEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.AccessFlags">
      <summary>属性AccessFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementQueryStateEventArgs.PropertyReadonly">
      <summary>属性PropertyReadonly</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IElementValidatingEventArgs">
      <summary>ElementValidatingEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.ResultLevel">
      <summary>属性ResultLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IElementValidatingEventArgs.ResultState">
      <summary>属性ResultState</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IFieldValueDescriptor">
      <summary>FieldValueDescriptor 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.BindingPath">
      <summary>属性BindingPath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.DataSource">
      <summary>属性DataSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptor.Value">
      <summary>属性Value</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IFieldValueDescriptorList">
      <summary>FieldValueDescriptorList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptorList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFieldValueDescriptorList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IFilterValueEventArgs">
      <summary>FilterValueEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFilterValueEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFilterValueEventArgs.Source">
      <summary>属性Source</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFilterValueEventArgs.SourceName">
      <summary>属性SourceName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFilterValueEventArgs.Type">
      <summary>属性Type</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFilterValueEventArgs.Value">
      <summary>属性Value</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IGridLineSettings">
      <summary>GridLineSettings 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGridLineSettings.GridLineColor">
      <summary>属性GridLineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGridLineSettings.GridLineColorValue">
      <summary>属性GridLineColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGridLineSettings.LineStyle">
      <summary>属性LineStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGridLineSettings.PrintGridLine">
      <summary>属性PrintGridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGridLineSettings.ShowGridLine">
      <summary>属性ShowGridLine</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IInsertObjectEventArgs">
      <summary>InsertObjectEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IInsertObjectEventArgs.GetData(System.String)">
      <summary>方法GetData</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IInsertObjectEventArgs.GetDataPresent(System.String)">
      <summary>方法GetDataPresent</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IInsertObjectEventArgs.GetFormats">
      <summary>方法GetFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.AllowDataFormats">
      <summary>属性AllowDataFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.AllowedEffect">
      <summary>属性AllowedEffect</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.AutoSelectContent">
      <summary>属性AutoSelectContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.ContainerElement">
      <summary>属性ContainerElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.DragEffect">
      <summary>属性DragEffect</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.InputSource">
      <summary>属性InputSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.NewElements">
      <summary>属性NewElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.Position">
      <summary>属性Position</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.RejectFormats">
      <summary>属性RejectFormats</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.ShowUI">
      <summary>属性ShowUI</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInsertObjectEventArgs.SpecifyFormat">
      <summary>属性SpecifyFormat</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.INavigateNode">
      <summary>NavigateNode 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.EndContentIndex">
      <summary>属性EndContentIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.HasChildNode">
      <summary>属性HasChildNode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.Level">
      <summary>属性Level</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.Nodes">
      <summary>属性Nodes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.Position">
      <summary>属性Position</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.StartContentIndex">
      <summary>属性StartContentIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNode.Text">
      <summary>属性Text</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.INavigateNodeList">
      <summary>NavigateNodeList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.INavigateNodeList.Add(DCSoft.Writer.NavigateNode)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.INavigateNodeList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.INavigateNodeList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.INavigateNodeList.Contains(DCSoft.Writer.NavigateNode)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.INavigateNodeList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNodeList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.INavigateNodeList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs">
      <summary>QueryUserHistoryDisplayTextEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs.ForLogicDelete">
      <summary>属性ForLogicDelete</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs.Info">
      <summary>属性Info</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryUserHistoryDisplayTextEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISystemAlertInfo">
      <summary>SystemAlertInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISystemAlertInfo.Message">
      <summary>属性Message</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISystemAlertInfoList">
      <summary>SystemAlertInfoList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISystemAlertInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISystemAlertInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ITrackVisibleConfig">
      <summary>TrackVisibleConfig 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.BackgroundColor">
      <summary>属性BackgroundColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.BackgroundColorString">
      <summary>属性BackgroundColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.DeleteLineColor">
      <summary>属性DeleteLineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.DeleteLineColorString">
      <summary>属性DeleteLineColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.DeleteLineNum">
      <summary>属性DeleteLineNum</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.UnderLineColor">
      <summary>属性UnderLineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.UnderLineColorNum">
      <summary>属性UnderLineColorNum</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ITrackVisibleConfig.UnderLineColorString">
      <summary>属性UnderLineColorString</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IUserTrackInfo">
      <summary>UserTrackInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.CommentText">
      <summary>属性CommentText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.InfoType">
      <summary>属性InfoType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.SaveTime">
      <summary>属性SaveTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.StdTitle">
      <summary>属性StdTitle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.UserID">
      <summary>属性UserID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfo.UserName">
      <summary>属性UserName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IUserTrackInfoList">
      <summary>UserTrackInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.Add(DCSoft.Writer.UserTrackInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.Contains(DCSoft.Writer.UserTrackInfo)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.Refresh">
      <summary>方法Refresh</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.Remove(DCSoft.Writer.UserTrackInfo)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserTrackInfoList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfoList.Current">
      <summary>属性Current</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserTrackInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterAfterExecuteEventExpressionEventArgs">
      <summary>WriterAfterExecuteEventExpressionEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterExecuteEventExpressionEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterExecuteEventExpressionEventArgs.SourceElement">
      <summary>属性SourceElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterExecuteEventExpressionEventArgs.TargetElement">
      <summary>属性TargetElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterExecuteEventExpressionEventArgs.TargetPropertyName">
      <summary>属性TargetPropertyName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs">
      <summary>WriterAfterFieldContentEditEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.EditorTypeName">
      <summary>属性EditorTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.ElementID">
      <summary>属性ElementID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.ElementName">
      <summary>属性ElementName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.NewText">
      <summary>属性NewText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.NewValue">
      <summary>属性NewValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.OldText">
      <summary>属性OldText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.OldValue">
      <summary>属性OldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.SelectedIndexs">
      <summary>属性SelectedIndexs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterFieldContentEditEventArgs.SelectedItems">
      <summary>属性SelectedItems</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs">
      <summary>WriterAfterShowDialogEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs.DialogTypeName">
      <summary>属性DialogTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterAfterShowDialogEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs">
      <summary>WriterBeforeFieldContentEditEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.EditorTypeName">
      <summary>属性EditorTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.ElementID">
      <summary>属性ElementID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.ElementName">
      <summary>属性ElementName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.NewText">
      <summary>属性NewText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.NewValue">
      <summary>属性NewValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.OldText">
      <summary>属性OldText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.OldValue">
      <summary>属性OldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.SelectedIndexs">
      <summary>属性SelectedIndexs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeFieldContentEditEventArgs.SelectedItems">
      <summary>属性SelectedItems</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterBeforePlayMediaEventArgs">
      <summary>WriterBeforePlayMediaEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforePlayMediaEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforePlayMediaEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforePlayMediaEventArgs.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforePlayMediaEventArgs.MediaElement">
      <summary>属性MediaElement</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs">
      <summary>WriterBeforeUIKeyboardInputStringEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs.InputString">
      <summary>属性InputString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterBeforeUIKeyboardInputStringEventArgs.OutputString">
      <summary>属性OutputString</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterButtonClickEventArgs">
      <summary>WriterButtonClickEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterButtonClickEventArgs.ButtonElement">
      <summary>属性ButtonElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterButtonClickEventArgs.CommandName">
      <summary>属性CommandName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterButtonClickEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterButtonClickEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterButtonClickEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterCancelEventArgs">
      <summary>WriterCancelEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCancelEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCancelEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCancelEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterDocumentPrintedEventArgs">
      <summary>WriterDocumentPrintedEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterDocumentPrintedEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterDocumentPrintedEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterDocumentPrintedEventArgs.PrintResult">
      <summary>属性PrintResult</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs">
      <summary>WriterEditElementValueEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs.FieldElement">
      <summary>属性FieldElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEditElementValueEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterEventArgs">
      <summary>WriterEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs">
      <summary>WriterExpressionFunctionEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.GetParameterStringValue(System.Int32)">
      <summary>方法GetParameterStringValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.GetParameterValue(System.Int32)">
      <summary>方法GetParameterValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.FunctionName">
      <summary>属性FunctionName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ParametersCount">
      <summary>属性ParametersCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ParameterString1">
      <summary>属性ParameterString1</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ParameterString2">
      <summary>属性ParameterString2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ParameterString3">
      <summary>属性ParameterString3</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ParameterString4">
      <summary>属性ParameterString4</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterExpressionFunctionEventArgs.ResultString">
      <summary>属性ResultString</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterGetAdornTextEventArgs">
      <summary>WriterGetAdornTextEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetAdornTextEventArgs.AdornText">
      <summary>属性AdornText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetAdornTextEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetAdornTextEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs">
      <summary>WriterGetSignToolTipEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.ClientName">
      <summary>属性ClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.ContainerElement">
      <summary>属性ContainerElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.ProviderName">
      <summary>属性ProviderName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.ResultTooltip">
      <summary>属性ResultTooltip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.State">
      <summary>属性State</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.Time">
      <summary>属性Time</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.UserID">
      <summary>属性UserID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterGetSignToolTipEventArgs.UserName">
      <summary>属性UserName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterLinkEventArgs">
      <summary>WriterLinkEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterLinkEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterLinkEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterLinkEventArgs.Reference">
      <summary>属性Reference</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterLinkEventArgs.Target">
      <summary>属性Target</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterMouseEventArgs">
      <summary>WriterMouseEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.ButtonValue">
      <summary>属性ButtonValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.Clicks">
      <summary>属性Clicks</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.Delta">
      <summary>属性Delta</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.HasLeftButton">
      <summary>属性HasLeftButton</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.HasRightButton">
      <summary>属性HasRightButton</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.HoverElement">
      <summary>属性HoverElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.ScreenX">
      <summary>属性ScreenX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.ScreenY">
      <summary>属性ScreenY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.X">
      <summary>属性X</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterMouseEventArgs.Y">
      <summary>属性Y</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterPrintEventEventArgs">
      <summary>WriterPrintEventEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintEventEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintEventEventArgs.DefaultPageSettings">
      <summary>属性DefaultPageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintEventEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintEventEventArgs.PrintAction">
      <summary>属性PrintAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintEventEventArgs.PrinterSettings">
      <summary>属性PrinterSettings</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs">
      <summary>WriterPrintPageEventEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.DefaultPageSettings">
      <summary>属性DefaultPageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.Graphics">
      <summary>属性Graphics</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.HasMorePages">
      <summary>属性HasMorePages</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.MarginBounds">
      <summary>属性MarginBounds</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.PageBounds">
      <summary>属性PageBounds</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.PageSettings">
      <summary>属性PageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintPageEventEventArgs.PrinterSettings">
      <summary>属性PrinterSettings</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs">
      <summary>WriterPrintQueryPageSettingsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.DefaultPageSettings">
      <summary>属性DefaultPageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.PageSettings">
      <summary>属性PageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.PrintAction">
      <summary>属性PrintAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterPrintQueryPageSettingsEventArgs.PrinterSettings">
      <summary>属性PrinterSettings</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs">
      <summary>WriterQueryAssistInputItemsEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.AddItem(System.String)">
      <summary>方法AddItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.GetItem(System.Int32)">
      <summary>方法GetItem</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.ContainerElement">
      <summary>属性ContainerElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterQueryAssistInputItemsEventArgs.PreWord">
      <summary>属性PreWord</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs">
      <summary>WriterReadFileContentEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.GetResultBinary">
      <summary>方法GetResultBinary</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.FileExisted">
      <summary>属性FileExisted</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.FileFormat">
      <summary>属性FileFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.FileSystemName">
      <summary>属性FileSystemName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReadFileContentEventArgs.ResultBase64String">
      <summary>属性ResultBase64String</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterReportErrorEventArgs">
      <summary>WriterReportErrorEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReportErrorEventArgs.Details">
      <summary>属性Details</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReportErrorEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReportErrorEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReportErrorEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterReportErrorEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs">
      <summary>WriterSaveFileContentEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.Base64ContentToSave">
      <summary>属性Base64ContentToSave</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.FileFormat">
      <summary>属性FileFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.FileSystemName">
      <summary>属性FileSystemName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSaveFileContentEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterSectionElementCancelEventArgs">
      <summary>WriterSectionElementCancelEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSectionElementCancelEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSectionElementCancelEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSectionElementCancelEventArgs.SectionElement">
      <summary>属性SectionElement</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterSectionElementEventArgs">
      <summary>WriterSectionElementEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSectionElementEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterSectionElementEventArgs.SectionElement">
      <summary>属性SectionElement</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterShowDialogEventArgs">
      <summary>WriterShowDialogEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterShowDialogEventArgs.DialogResult">
      <summary>属性DialogResult</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterShowDialogEventArgs.DialogTypeName">
      <summary>属性DialogTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterShowDialogEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterShowDialogEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterShowDialogEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterStartEditEventArgs">
      <summary>WriterStartEditEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterStartEditEventArgs.CanDetectAgain">
      <summary>属性CanDetectAgain</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterStartEditEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterStartEditEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterStartEditEventArgs.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs">
      <summary>WriterTableRowHeightChangedEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs.NewHeight">
      <summary>属性NewHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs.OldHeight">
      <summary>属性OldHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangedEventArgs.RowElement">
      <summary>属性RowElement</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs">
      <summary>WriterTableRowHeightChangingEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.NewHeight">
      <summary>属性NewHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.OldHeight">
      <summary>属性OldHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterTableRowHeightChangingEventArgs.RowElement">
      <summary>属性RowElement</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISearchReplaceCommandArgs">
      <summary>SearchReplaceCommandArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.Backward">
      <summary>属性Backward</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.EnableReplaceString">
      <summary>属性EnableReplaceString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.IgnoreCase">
      <summary>属性IgnoreCase</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.ReplaceString">
      <summary>属性ReplaceString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.SearchID">
      <summary>属性SearchID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISearchReplaceCommandArgs.SearchString">
      <summary>属性SearchString</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterCommandEventArgs">
      <summary>WriterCommandEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Actived">
      <summary>属性Actived</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.AltKey">
      <summary>属性AltKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Checked">
      <summary>属性Checked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.CtlKey">
      <summary>属性CtlKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.KeyChar">
      <summary>属性KeyChar</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.KeyCodeValue">
      <summary>属性KeyCodeValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Mode">
      <summary>属性Mode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Parameter">
      <summary>属性Parameter</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.RaiseFromUI">
      <summary>属性RaiseFromUI</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.RefreshLevel">
      <summary>属性RefreshLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.ShiftKey">
      <summary>属性ShiftKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.ShowUI">
      <summary>属性ShowUI</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.SourceElement">
      <summary>属性SourceElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.UIElement">
      <summary>属性UIElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.UIEventArgs">
      <summary>属性UIEventArgs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterCommandEventArgs.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICollectProtectedElementsEventArgs">
      <summary>CollectProtectedElementsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICollectProtectedElementsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICollectProtectedElementsEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICollectProtectedElementsEventArgs.LimitedCount">
      <summary>属性LimitedCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICollectProtectedElementsEventArgs.RootElements">
      <summary>属性RootElements</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICommandErrorEventArgs">
      <summary>CommandErrorEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICommandErrorEventArgs.CommandName">
      <summary>属性CommandName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICommandErrorEventArgs.CommmandParameter">
      <summary>属性CommmandParameter</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICommandErrorEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICommandErrorEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICreateInstanceEventArgs">
      <summary>CreateInstanceEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateInstanceEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateInstanceEventArgs.CommandName">
      <summary>属性CommandName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateInstanceEventArgs.CreatedInstance">
      <summary>属性CreatedInstance</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateInstanceEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateInstanceEventArgs.InstanceTypeFullName">
      <summary>属性InstanceTypeFullName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICustomCommandEventArgs">
      <summary>CustomCommandEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICustomCommandEventArgs.CommandName">
      <summary>属性CommandName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICustomCommandEventArgs.Text">
      <summary>属性Text</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IFormatListItemsEventArgs">
      <summary>FormatListItemsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.FormatString">
      <summary>属性FormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.SelectedItems">
      <summary>属性SelectedItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.Separator">
      <summary>属性Separator</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.SeparatorChar">
      <summary>属性SeparatorChar</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFormatListItemsEventArgs.UnselectedItems">
      <summary>属性UnselectedItems</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs">
      <summary>ParseSelectedItemsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.FormatString">
      <summary>属性FormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Items">
      <summary>属性Items</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Separator">
      <summary>属性Separator</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.SeparatorChar">
      <summary>属性SeparatorChar</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IParseSelectedItemsEventArgs.Text">
      <summary>属性Text</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs">
      <summary>PromptProtectedContentEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPromptProtectedContentEventArgs.PromptMode">
      <summary>属性PromptMode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IQueryKBEntriesEventArgs">
      <summary>QueryKBEntriesEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryKBEntriesEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryKBEntriesEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryKBEntriesEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryKBEntriesEventArgs.SpellCode">
      <summary>属性SpellCode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IQueryListItemsEventArgs">
      <summary>QueryListItemsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.BufferItems">
      <summary>属性BufferItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.KBEntry">
      <summary>属性KBEntry</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.ListSourceName">
      <summary>属性ListSourceName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.PreText">
      <summary>属性PreText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IQueryListItemsEventArgs.SpellCode">
      <summary>属性SpellCode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IStatusTextChangedEventArgs">
      <summary>StatusTextChangedEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IStatusTextChangedEventArgs.StatusText">
      <summary>属性StatusText</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWriterControlEventMessage">
      <summary>WriterControlEventMessage 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.AltKey">
      <summary>属性AltKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.AltLeft">
      <summary>属性AltLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.Button">
      <summary>属性Button</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.CancelBubble">
      <summary>属性CancelBubble</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ClientX">
      <summary>属性ClientX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ClientY">
      <summary>属性ClientY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ContextText">
      <summary>属性ContextText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.CtrlKey">
      <summary>属性CtrlKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.CtrlLeft">
      <summary>属性CtrlLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.FromElement">
      <summary>属性FromElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.KeyCode">
      <summary>属性KeyCode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.OffsetX">
      <summary>属性OffsetX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.OffsetY">
      <summary>属性OffsetY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ReturnValue">
      <summary>属性ReturnValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ScreenX">
      <summary>属性ScreenX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ScreenY">
      <summary>属性ScreenY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ShiftKey">
      <summary>属性ShiftKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ShiftLeft">
      <summary>属性ShiftLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcElement">
      <summary>属性SrcElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcElementID">
      <summary>属性SrcElementID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcElementName">
      <summary>属性SrcElementName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcElementTypeName">
      <summary>属性SrcElementTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcElementValue">
      <summary>属性SrcElementValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcInputFieldElement">
      <summary>属性SrcInputFieldElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcSectionElement">
      <summary>属性SrcSectionElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcTableCellElement">
      <summary>属性SrcTableCellElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcTableElement">
      <summary>属性SrcTableElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.SrcTableRowElement">
      <summary>属性SrcTableRowElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.StringReturnValue">
      <summary>属性StringReturnValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.ToElement">
      <summary>属性ToElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.Type">
      <summary>属性Type</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.WheelDelta">
      <summary>属性WheelDelta</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.X">
      <summary>属性X</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWriterControlEventMessage.Y">
      <summary>属性Y</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs">
      <summary>CreateElementsByKBEntryEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs.InputSource">
      <summary>属性InputSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs.KBEntry">
      <summary>属性KBEntry</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICreateElementsByKBEntryEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICurrentDepartmentInfo">
      <summary>CurrentDepartmentInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentDepartmentInfo.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentDepartmentInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICurrentUserInfo">
      <summary>CurrentUserInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentUserInfo.ClientName">
      <summary>属性ClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentUserInfo.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentUserInfo.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentUserInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentUserInfo.PermissionLevel">
      <summary>属性PermissionLevel</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDataFeedbackInfo">
      <summary>DataFeedbackInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.FieldName">
      <summary>属性FieldName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.FieldValue">
      <summary>属性FieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.KeyFeildDataSourcePath">
      <summary>属性KeyFeildDataSourcePath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.KeyFieldName">
      <summary>属性KeyFieldName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.KeyFieldValue">
      <summary>属性KeyFieldValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataFeedbackInfo.TableName">
      <summary>属性TableName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs">
      <summary>GetLinkListItemsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.CurrentBinding">
      <summary>属性CurrentBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.CurrentElement">
      <summary>属性CurrentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.CurrentLevelBase0">
      <summary>属性CurrentLevelBase0</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.EffectElements">
      <summary>属性EffectElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.Items">
      <summary>属性Items</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.ParentBinding">
      <summary>属性ParentBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.ParentElement">
      <summary>属性ParentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.ParentValue">
      <summary>属性ParentValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IGetLinkListItemsEventArgs.ProviderName">
      <summary>属性ProviderName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IKBEntry">
      <summary>KBEntry 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.EntryTemplateContent">
      <summary>属性EntryTemplateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.ListIndex">
      <summary>属性ListIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.ListItems">
      <summary>属性ListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.ListItemsSource">
      <summary>属性ListItemsSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.OwnerID">
      <summary>属性OwnerID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.OwnerLevel">
      <summary>属性OwnerLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.ParentID">
      <summary>属性ParentID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.RangeMask">
      <summary>属性RangeMask</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.SpellCode">
      <summary>属性SpellCode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.SpellCode2">
      <summary>属性SpellCode2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.SpellCode3">
      <summary>属性SpellCode3</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.SubEntries">
      <summary>属性SubEntries</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Text2">
      <summary>属性Text2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Value">
      <summary>属性Value</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntry.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IKBEntryList">
      <summary>KBEntryList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBEntryList.Add(DCSoft.Writer.Data.KBEntry)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBEntryList.Contains(DCSoft.Writer.Data.KBEntry)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBEntryList.Insert(System.Int32,DCSoft.Writer.Data.KBEntry)">
      <summary>方法Insert</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBEntryList.Remove(DCSoft.Writer.Data.KBEntry)">
      <summary>方法Remove</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs">
      <summary>KBEntryLoadTemplateContentEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs.Content">
      <summary>属性Content</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs.Entry">
      <summary>属性Entry</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs.Format">
      <summary>属性Format</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs.Library">
      <summary>属性Library</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBEntryLoadTemplateContentEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IKBLibrary">
      <summary>KBLibrary 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBLibrary.Load(System.String)">
      <summary>方法Load</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IKBLibrary.Save(System.String)">
      <summary>方法Save</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.BaseURL">
      <summary>属性BaseURL</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.KBEntries">
      <summary>属性KBEntries</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.ListItemsSourceFormatString">
      <summary>属性ListItemsSourceFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.TemplateFileFormat">
      <summary>属性TemplateFileFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.TemplateFileSystemName">
      <summary>属性TemplateFileSystemName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.TemplateSourceFormatString">
      <summary>属性TemplateSourceFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.UseLanguage2">
      <summary>属性UseLanguage2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IKBLibrary.Version">
      <summary>属性Version</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ILinkListBindingInfo">
      <summary>LinkListBindingInfo 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListBindingInfo.Clone">
      <summary>方法Clone</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.AutoSetFirstItems">
      <summary>属性AutoSetFirstItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.AutoUpdateTargetElement">
      <summary>属性AutoUpdateTargetElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.DataBoundItem">
      <summary>属性DataBoundItem</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.IsRoot">
      <summary>属性IsRoot</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.NextTarget">
      <summary>属性NextTarget</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.NextTargetID">
      <summary>属性NextTargetID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.ProviderName">
      <summary>属性ProviderName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListBindingInfo.UserFlag">
      <summary>属性UserFlag</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ILinkListProvider">
      <summary>LinkListProvider 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProvider.GetListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>方法GetListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListProvider.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListProvider.Name">
      <summary>属性Name</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ILinkListProviderList">
      <summary>LinkListProviderList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.Add(DCSoft.Writer.Data.LinkListProvider)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.Contains(DCSoft.Writer.Data.LinkListProvider)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.ContainsName(System.String)">
      <summary>方法ContainsName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.GetEnabledProvider(System.String)">
      <summary>方法GetEnabledProvider</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.Insert(System.Int32,DCSoft.Writer.Data.LinkListProvider)">
      <summary>方法Insert</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.Remove(DCSoft.Writer.Data.LinkListProvider)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ILinkListProviderList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListProviderList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListProviderList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILinkListProviderList.Names">
      <summary>属性Names</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IListItem">
      <summary>ListItem 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.EntryID">
      <summary>属性EntryID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.Group">
      <summary>属性Group</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.ListIndex">
      <summary>属性ListIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.SpellCode">
      <summary>属性SpellCode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.SpellCode2">
      <summary>属性SpellCode2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.SpellCode3">
      <summary>属性SpellCode3</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.Tag">
      <summary>属性Tag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.Text2">
      <summary>属性Text2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.TextInList">
      <summary>属性TextInList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItem.Value">
      <summary>属性Value</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IListItemCollection">
      <summary>ListItemCollection 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.Add(DCSoft.Writer.Data.ListItem)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.AddByTextValue(System.String,System.String)">
      <summary>方法AddByTextValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.AddByTextValueSpellCode(System.String,System.String,System.String)">
      <summary>方法AddByTextValueSpellCode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.AddByTextValueTextInList(System.String,System.String,System.String)">
      <summary>方法AddByTextValueTextInList</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.ComSetItem(System.Int32,DCSoft.Writer.Data.ListItem)">
      <summary>方法ComSetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.Contains(DCSoft.Writer.Data.ListItem)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IListItemCollection.Remove(DCSoft.Writer.Data.ListItem)">
      <summary>方法Remove</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItemCollection.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItemCollection.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IListItemsEventArgs">
      <summary>ListItemsEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItemsEventArgs.KBEntry">
      <summary>属性KBEntry</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListItemsEventArgs.SourceName">
      <summary>属性SourceName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IListSourceEventArgs">
      <summary>ListSourceEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceEventArgs.Info">
      <summary>属性Info</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceEventArgs.Value">
      <summary>属性Value</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IListSourceInfo">
      <summary>ListSourceInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.DisplayPath">
      <summary>属性DisplayPath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.Items">
      <summary>属性Items</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.RuntimeItems">
      <summary>属性RuntimeItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.SourceName">
      <summary>属性SourceName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IListSourceInfo.ValuePath">
      <summary>属性ValuePath</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXDataBinding">
      <summary>XDataBinding 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.AutoUpdate">
      <summary>属性AutoUpdate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.BindingPath">
      <summary>属性BindingPath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.BindingPathForText">
      <summary>属性BindingPathForText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.DataSource">
      <summary>属性DataSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.FormatString">
      <summary>属性FormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.IsEmptyBinding">
      <summary>属性IsEmptyBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.ProcessState">
      <summary>属性ProcessState</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.ValueBindingPath">
      <summary>属性ValueBindingPath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXDataBinding.WriteTextBindingPath">
      <summary>属性WriteTextBindingPath</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXMLLinkListProvider">
      <summary>XMLLinkListProvider 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXMLLinkListProvider.GetListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>方法GetListItems</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXMLLinkListProvider.LoadXMLDocument(System.String)">
      <summary>方法LoadXMLDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXMLLinkListProvider.LoadXMLString(System.String)">
      <summary>方法LoadXMLString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXMLLinkListProvider.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXMLLinkListProvider.Name">
      <summary>属性Name</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICanInsertElementEventArgs">
      <summary>CanInsertElementEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Container">
      <summary>属性Container</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.ElementType">
      <summary>属性ElementType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Flags">
      <summary>属性Flags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Index">
      <summary>属性Index</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.Result">
      <summary>属性Result</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICanInsertElementEventArgs.SetMessage">
      <summary>属性SetMessage</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICopySourceInfo">
      <summary>CopySourceInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICopySourceInfo.DescPropertyName">
      <summary>属性DescPropertyName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICopySourceInfo.IgnoreChildElements">
      <summary>属性IgnoreChildElements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICopySourceInfo.SourceID">
      <summary>属性SourceID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICopySourceInfo.SourcePropertyName">
      <summary>属性SourcePropertyName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ICurrentContentStyleInfo">
      <summary>CurrentContentStyleInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentContentStyleInfo.Cell">
      <summary>属性Cell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentContentStyleInfo.Content">
      <summary>属性Content</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentContentStyleInfo.ContentStyleForNewString">
      <summary>属性ContentStyleForNewString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ICurrentContentStyleInfo.Paragraph">
      <summary>属性Paragraph</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDataSourceBindingDescription">
      <summary>DataSourceBindingDescription 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.AutoUpdate">
      <summary>属性AutoUpdate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.BindingPath">
      <summary>属性BindingPath</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.DataSource">
      <summary>属性DataSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.ElementID">
      <summary>属性ElementID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.FormatString">
      <summary>属性FormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescription.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDataSourceBindingDescriptionList">
      <summary>DataSourceBindingDescriptionList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescriptionList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDataSourceBindingDescriptionList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDCContentLockInfo">
      <summary>DCContentLockInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCContentLockInfo.AuthorisedUserIDList">
      <summary>属性AuthorisedUserIDList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCContentLockInfo.CreationTime">
      <summary>属性CreationTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCContentLockInfo.OwnerUserID">
      <summary>属性OwnerUserID</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDetectResultForValueBindingModified">
      <summary>DetectResultForValueBindingModified 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModified.Binding">
      <summary>属性Binding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModified.CurrentValue">
      <summary>属性CurrentValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModified.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModified.NewValue">
      <summary>属性NewValue</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDetectResultForValueBindingModifiedList">
      <summary>DetectResultForValueBindingModifiedList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModifiedList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDetectResultForValueBindingModifiedList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentComment">
      <summary>DocumentComment 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentComment.AnchorElementFocus">
      <summary>方法AnchorElementFocus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentComment.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentComment.Select">
      <summary>方法Select</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.AnchorElement">
      <summary>属性AnchorElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.AnchorElementText">
      <summary>属性AnchorElementText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Author">
      <summary>属性Author</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.AuthorID">
      <summary>属性AuthorID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.BackColor">
      <summary>属性BackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.BindingUserTrack">
      <summary>属性BindingUserTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.BorderColor">
      <summary>属性BorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.CreationTime">
      <summary>属性CreationTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.CreatorIndex">
      <summary>属性CreatorIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.ForeColor">
      <summary>属性ForeColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Index">
      <summary>属性Index</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.OwnerPage">
      <summary>属性OwnerPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentComment.Title">
      <summary>属性Title</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentCommentList">
      <summary>DocumentCommentList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.Add(DCSoft.Writer.Dom.DocumentComment)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.ComSetItem(System.Int32,DCSoft.Writer.Dom.DocumentComment)">
      <summary>方法ComSetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.Remove(DCSoft.Writer.Dom.DocumentComment)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentCommentList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentCommentList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentCommentList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentContentStyle">
      <summary>DocumentContentStyle 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Align">
      <summary>属性Align</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BackgroundColor">
      <summary>属性BackgroundColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BackgroundColor2">
      <summary>属性BackgroundColor2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BackgroundColorString">
      <summary>属性BackgroundColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BackgroundRepeat">
      <summary>属性BackgroundRepeat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BackgroundStyle">
      <summary>属性BackgroundStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Bold">
      <summary>属性Bold</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderBottom">
      <summary>属性BorderBottom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderBottomColor">
      <summary>属性BorderBottomColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderBottomColorString">
      <summary>属性BorderBottomColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderColor">
      <summary>属性BorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderLeft">
      <summary>属性BorderLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderLeftColor">
      <summary>属性BorderLeftColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderLeftColorString">
      <summary>属性BorderLeftColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderRight">
      <summary>属性BorderRight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderRightColor">
      <summary>属性BorderRightColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderRightColorString">
      <summary>属性BorderRightColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderSpacing">
      <summary>属性BorderSpacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderStyle">
      <summary>属性BorderStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderTop">
      <summary>属性BorderTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderTopColor">
      <summary>属性BorderTopColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderTopColorString">
      <summary>属性BorderTopColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BorderWidth">
      <summary>属性BorderWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.BulletedString">
      <summary>属性BulletedString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.CharacterCircle">
      <summary>属性CharacterCircle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Color">
      <summary>属性Color</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ColorString">
      <summary>属性ColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.CommentIndex">
      <summary>属性CommentIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.CreatorIndex">
      <summary>属性CreatorIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.DeleterIndex">
      <summary>属性DeleterIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.DisableDefaultValue">
      <summary>属性DisableDefaultValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.EmphasisMark">
      <summary>属性EmphasisMark</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.FirstLineIndent">
      <summary>属性FirstLineIndent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.FixedSpacing">
      <summary>属性FixedSpacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Font">
      <summary>属性Font</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.FontName">
      <summary>属性FontName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.FontSize">
      <summary>属性FontSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.FontStyle">
      <summary>属性FontStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.GridLineColor">
      <summary>属性GridLineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.GridLineColorString">
      <summary>属性GridLineColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.GridLineOffsetY">
      <summary>属性GridLineOffsetY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.GridLineStyle">
      <summary>属性GridLineStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.GridLineType">
      <summary>属性GridLineType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Italic">
      <summary>属性Italic</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LayoutAlign">
      <summary>属性LayoutAlign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LayoutDirection">
      <summary>属性LayoutDirection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LayoutGridHeight">
      <summary>属性LayoutGridHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LeftIndent">
      <summary>属性LeftIndent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LetterSpacing">
      <summary>属性LetterSpacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LineSpacing">
      <summary>属性LineSpacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.LineSpacingStyle">
      <summary>属性LineSpacingStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Link">
      <summary>属性Link</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.MarginBottom">
      <summary>属性MarginBottom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.MarginLeft">
      <summary>属性MarginLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.MarginRight">
      <summary>属性MarginRight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.MarginTop">
      <summary>属性MarginTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Multiline">
      <summary>属性Multiline</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PaddingBottom">
      <summary>属性PaddingBottom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PaddingLeft">
      <summary>属性PaddingLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PaddingRight">
      <summary>属性PaddingRight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PaddingTop">
      <summary>属性PaddingTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PageBreakAfter">
      <summary>属性PageBreakAfter</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PageBreakBefore">
      <summary>属性PageBreakBefore</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ParagraphListStyle">
      <summary>属性ParagraphListStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ParagraphMultiLevel">
      <summary>属性ParagraphMultiLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ParagraphOutlineLevel">
      <summary>属性ParagraphOutlineLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PrintBackColor">
      <summary>属性PrintBackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PrintBackColorString">
      <summary>属性PrintBackColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PrintColor">
      <summary>属性PrintColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.PrintColorString">
      <summary>属性PrintColorString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ProtectType">
      <summary>属性ProtectType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.RightToLeft">
      <summary>属性RightToLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Rotate">
      <summary>属性Rotate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Spacing">
      <summary>属性Spacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.SpacingAfterParagraph">
      <summary>属性SpacingAfterParagraph</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.SpacingBeforeParagraph">
      <summary>属性SpacingBeforeParagraph</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Strikeout">
      <summary>属性Strikeout</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Subscript">
      <summary>属性Subscript</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Superscript">
      <summary>属性Superscript</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.TitleLevel">
      <summary>属性TitleLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Top">
      <summary>属性Top</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Underline">
      <summary>属性Underline</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.UnderlineColor">
      <summary>属性UnderlineColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.UnderlineStyle">
      <summary>属性UnderlineStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.ValueLocked">
      <summary>属性ValueLocked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.VertialText">
      <summary>属性VertialText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.VerticalAlign">
      <summary>属性VerticalAlign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Visibility">
      <summary>属性Visibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyle.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentContentStyleContainer">
      <summary>DocumentContentStyleContainer 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyleContainer.Default">
      <summary>属性Default</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentContentStyleContainer.Styles">
      <summary>属性Styles</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentEventArgs">
      <summary>DocumentEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.AltKey">
      <summary>属性AltKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ButtonValue">
      <summary>属性ButtonValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ClientX">
      <summary>属性ClientX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ClientY">
      <summary>属性ClientY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.CtlKey">
      <summary>属性CtlKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Handled">
      <summary>属性Handled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.KeyCharValue">
      <summary>属性KeyCharValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.KeyCodeValue">
      <summary>属性KeyCodeValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.MouseClicks">
      <summary>属性MouseClicks</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ReturnValue">
      <summary>属性ReturnValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ShiftKey">
      <summary>属性ShiftKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.StrictMatch">
      <summary>属性StrictMatch</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Tooltip">
      <summary>属性Tooltip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ViewX">
      <summary>属性ViewX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.ViewY">
      <summary>属性ViewY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.WheelDelta">
      <summary>属性WheelDelta</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.X">
      <summary>属性X</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentEventArgs.Y">
      <summary>属性Y</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentInfo">
      <summary>DocumentInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Author">
      <summary>属性Author</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.AuthorName">
      <summary>属性AuthorName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.AuthorPermissionLevel">
      <summary>属性AuthorPermissionLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Comment">
      <summary>属性Comment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.CreationTime">
      <summary>属性CreationTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DepartmentID">
      <summary>属性DepartmentID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DepartmentName">
      <summary>属性DepartmentName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DocumentEditState">
      <summary>属性DocumentEditState</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DocumentFormat">
      <summary>属性DocumentFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DocumentProcessState">
      <summary>属性DocumentProcessState</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.DocumentType">
      <summary>属性DocumentType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.EditMinute">
      <summary>属性EditMinute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.FieldBorderElementWidth">
      <summary>属性FieldBorderElementWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.HeightInPrintJob">
      <summary>属性HeightInPrintJob</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.IsTemplate">
      <summary>属性IsTemplate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.KBEntryRangeMask">
      <summary>属性KBEntryRangeMask</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.LastModifiedTime">
      <summary>属性LastModifiedTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.LastPrintTime">
      <summary>属性LastPrintTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.MRID">
      <summary>属性MRID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.NumOfPage">
      <summary>属性NumOfPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Operator">
      <summary>属性Operator</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.ShowHeaderBottomLine">
      <summary>属性ShowHeaderBottomLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.StartPositionInPringJob">
      <summary>属性StartPositionInPringJob</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.SubDocumentSettings">
      <summary>属性SubDocumentSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.TimeoutHours">
      <summary>属性TimeoutHours</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.UseLanguage2">
      <summary>属性UseLanguage2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentInfo.Version">
      <summary>属性Version</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentOutlineNode">
      <summary>DocumentOutlineNode 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentOutlineNode.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.ChildNodes">
      <summary>属性ChildNodes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.Level">
      <summary>属性Level</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.LevelText">
      <summary>属性LevelText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.ParagraphFlag">
      <summary>属性ParagraphFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.StartElement">
      <summary>属性StartElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNode.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentOutlineNodeList">
      <summary>DocumentOutlineNodeList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNodeList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentOutlineNodeList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentPaintEventArgs">
      <summary>DocumentPaintEventArgs 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMARGB2Integer</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDisposeImage(System.Int32)">
      <summary>方法COMDisposeImage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDrawDrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMDrawDrawEllipse</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMDrawImage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMDrawLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMDrawRectangle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMDrawString(System.String,System.String,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMDrawString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMFillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMFillEllipse</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMFillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMFillRectangle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMGetFontHeight(System.String,System.Single)">
      <summary>方法COMGetFontHeight</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMLastErrorMessage">
      <summary>方法COMLastErrorMessage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>方法COMLoadImageFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>方法COMLoadImageFromBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>方法COMLoadImageFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMMeasureStringHeight(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>方法COMMeasureStringHeight</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMMeasureStringWidth(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>方法COMMeasureStringWidth</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMViewBoundsHeight">
      <summary>方法COMViewBoundsHeight</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMViewBoundsLeft">
      <summary>方法COMViewBoundsLeft</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMViewBoundsTop">
      <summary>方法COMViewBoundsTop</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDocumentPaintEventArgs.COMViewBoundsWidth">
      <summary>方法COMViewBoundsWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.JumpPrintMode">
      <summary>属性JumpPrintMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.Page">
      <summary>属性Page</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.PageCount">
      <summary>属性PageCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentPaintEventArgs.RenderMode">
      <summary>属性RenderMode</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IFileContentSource">
      <summary>FileContentSource 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.FileSystemName">
      <summary>属性FileSystemName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.Format">
      <summary>属性Format</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.Range">
      <summary>属性Range</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.RuntimeFileName">
      <summary>属性RuntimeFileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IFileContentSource.RuntimeFormat">
      <summary>属性RuntimeFormat</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IInputFieldSettings">
      <summary>InputFieldSettings 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.DynamicListItems">
      <summary>属性DynamicListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.EditStyle">
      <summary>属性EditStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.EnableCustomListItems">
      <summary>属性EnableCustomListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.GetValueOrderByTime">
      <summary>属性GetValueOrderByTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.ListSource">
      <summary>属性ListSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.ListValueFormatString">
      <summary>属性ListValueFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.ListValueSeparatorChar">
      <summary>属性ListValueSeparatorChar</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.MultiColumn">
      <summary>属性MultiColumn</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.MultiSelect">
      <summary>属性MultiSelect</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IInputFieldSettings.RepulsionForGroup">
      <summary>属性RepulsionForGroup</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ILocalConfig">
      <summary>LocalConfig 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ILocalConfig.OldWhitespaceWidth">
      <summary>属性OldWhitespaceWidth</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IMotherTemplateInfo">
      <summary>MotherTemplateInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.FileSystemName">
      <summary>属性FileSystemName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.Format">
      <summary>属性Format</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.ImportFooter">
      <summary>属性ImportFooter</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.ImportHeader">
      <summary>属性ImportHeader</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IMotherTemplateInfo.ImportPageSettings">
      <summary>属性ImportPageSettings</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageContentVersionInfo">
      <summary>PageContentVersionInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageContentVersionInfo.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageContentVersionInfo.Version">
      <summary>属性Version</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageContentVersionInfoList">
      <summary>PageContentVersionInfoList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageContentVersionInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageContentVersionInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageImageInfo">
      <summary>PageImageInfo 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageImageInfo.Clone">
      <summary>方法Clone</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageImageInfo.Image">
      <summary>属性Image</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageImageInfo.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageImageInfoList">
      <summary>PageImageInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageImageInfoList.Add(DCSoft.Writer.Dom.PageImageInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageImageInfoList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageImageInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageImageInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageLabelText">
      <summary>PageLabelText 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageLabelText.Clone">
      <summary>方法Clone</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageLabelText.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageLabelText.Text">
      <summary>属性Text</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPageLabelTextList">
      <summary>PageLabelTextList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageLabelTextList.Add(DCSoft.Writer.Dom.PageLabelText)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPageLabelTextList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageLabelTextList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPageLabelTextList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPropertyExpressionInfo">
      <summary>PropertyExpressionInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPropertyExpressionInfo.AllowChainReaction">
      <summary>属性AllowChainReaction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPropertyExpressionInfo.Expression">
      <summary>属性Expression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPropertyExpressionInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IPropertyExpressionInfoList">
      <summary>PropertyExpressionInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPropertyExpressionInfoList.Add(DCSoft.Writer.Dom.PropertyExpressionInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPropertyExpressionInfoList.GetValue(System.String)">
      <summary>方法GetValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPropertyExpressionInfoList.SetValue(System.String,System.String)">
      <summary>方法SetValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IPropertyExpressionInfoList.SetValueExt(System.String,System.String,System.Boolean)">
      <summary>方法SetValueExt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPropertyExpressionInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IPropertyExpressionInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISelectionChangingEventArgs">
      <summary>SelectionChangingEventArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.Cancel">
      <summary>属性Cancel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.Documnent">
      <summary>属性Documnent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.NewLineEndFlag">
      <summary>属性NewLineEndFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.NewSelectionIndex">
      <summary>属性NewSelectionIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.NewSelectionLength">
      <summary>属性NewSelectionLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.OldLineEndFlag">
      <summary>属性OldLineEndFlag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.OldSelectionIndex">
      <summary>属性OldSelectionIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISelectionChangingEventArgs.OldSelectionLength">
      <summary>属性OldSelectionLength</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISetContainerTextArgs">
      <summary>SetContainerTextArgs 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.AccessFlags">
      <summary>属性AccessFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.DisablePermission">
      <summary>属性DisablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.LogUndo">
      <summary>属性LogUndo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.NewText">
      <summary>属性NewText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.NewTextStyle">
      <summary>属性NewTextStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.RaiseEvent">
      <summary>属性RaiseEvent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISetContainerTextArgs.UpdateContent">
      <summary>属性UpdateContent</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISpecifyPageIndexInfo">
      <summary>SpecifyPageIndexInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISpecifyPageIndexInfo.RawPageIndex">
      <summary>属性RawPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISpecifyPageIndexInfo.SpecifyPageIndex">
      <summary>属性SpecifyPageIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList">
      <summary>SpecifyPageIndexInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.Add(DCSoft.Writer.Dom.SpecifyPageIndexInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.Remove(DCSoft.Writer.Dom.SpecifyPageIndexInfo)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISpecifyPageIndexInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.ISubDocumentSettings">
      <summary>SubDocumentSettings 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.ISubDocumentSettings.Clone">
      <summary>方法Clone</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.AllowSave">
      <summary>属性AllowSave</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.BackColor">
      <summary>属性BackColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.BackColorValue">
      <summary>属性BackColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.BorderColor">
      <summary>属性BorderColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.BorderColorValue">
      <summary>属性BorderColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.Locked">
      <summary>属性Locked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.NewPage">
      <summary>属性NewPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.ISubDocumentSettings.SubDocumentSpacing">
      <summary>属性SubDocumentSpacing</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IValueValidateResult">
      <summary>ValueValidateResult 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResult.Selet">
      <summary>方法Selet</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResult.Element">
      <summary>属性Element</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResult.ExcludeKeywordText">
      <summary>属性ExcludeKeywordText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResult.Level">
      <summary>属性Level</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResult.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResult.Type">
      <summary>属性Type</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IValueValidateResultList">
      <summary>ValueValidateResultList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.Add(DCSoft.Writer.Dom.ValueValidateResult)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.ComSetItem(System.Int32,DCSoft.Writer.Dom.ValueValidateResult)">
      <summary>方法ComSetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.Contains(DCSoft.Writer.Dom.ValueValidateResult)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IValueValidateResultList.Remove(DCSoft.Writer.Dom.ValueValidateResult)">
      <summary>方法Remove</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResultList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IValueValidateResultList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IWordCountResult">
      <summary>WordCountResult 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Chars">
      <summary>属性Chars</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.CharsNoWhitespace">
      <summary>属性CharsNoWhitespace</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Images">
      <summary>属性Images</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Lines">
      <summary>属性Lines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Pages">
      <summary>属性Pages</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Paragraphs">
      <summary>属性Paragraphs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IWordCountResult.Words">
      <summary>属性Words</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXAttribute">
      <summary>XAttribute 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXAttribute.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXAttribute.Value">
      <summary>属性Value</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXAttributeList">
      <summary>XAttributeList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.Add(DCSoft.Writer.Dom.XAttribute)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.Contains(DCSoft.Writer.Dom.XAttribute)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.ContainsByName(System.String)">
      <summary>方法ContainsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.GetValue(System.String)">
      <summary>方法GetValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.Remove(DCSoft.Writer.Dom.XAttribute)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.RemoveByName(System.String)">
      <summary>方法RemoveByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXAttributeList.SetValue(System.String,System.String)">
      <summary>方法SetValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXAttributeList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXAttributeList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXAttributeList.Item(System.String)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextButtonElement">
      <summary>XTextButtonElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageForDownFromBase64String(System.String)">
      <summary>方法LoadImageForDownFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageForDownFromFile(System.String)">
      <summary>方法LoadImageForDownFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageForMouseOverFromBase64String(System.String)">
      <summary>方法LoadImageForMouseOverFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageForMouseOverFromFile(System.String)">
      <summary>方法LoadImageForMouseOverFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageFromBase64String(System.String)">
      <summary>方法LoadImageFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.LoadImageFromFile(System.String)">
      <summary>方法LoadImageFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextButtonElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.AutoSize">
      <summary>属性AutoSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.CommandName">
      <summary>属性CommandName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.FormulaValue">
      <summary>属性FormulaValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Image">
      <summary>属性Image</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.ImageForDown">
      <summary>属性ImageForDown</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.ImageForMouseOver">
      <summary>属性ImageForMouseOver</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.PixelHeight">
      <summary>属性PixelHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.PixelWidth">
      <summary>属性PixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.ScriptTextForClick">
      <summary>属性ScriptTextForClick</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextButtonElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextCharElement">
      <summary>XTextCharElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCharElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCharElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCharElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.CharValue">
      <summary>属性CharValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCharElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextCheckBoxElement">
      <summary>XTextCheckBoxElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCheckBoxElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Caption">
      <summary>属性Caption</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.CaptionAlign">
      <summary>属性CaptionAlign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.CaptionFlowLayout">
      <summary>属性CaptionFlowLayout</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.CheckAlignLeft">
      <summary>属性CheckAlignLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.CheckboxVisibility">
      <summary>属性CheckboxVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Checked">
      <summary>属性Checked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.CheckedValue">
      <summary>属性CheckedValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ControlStyle">
      <summary>属性ControlStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.DataName">
      <summary>属性DataName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.EditorChecked">
      <summary>属性EditorChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.EventExpressions">
      <summary>属性EventExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.GroupName">
      <summary>属性GroupName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.LinkInfo">
      <summary>属性LinkInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Multiline">
      <summary>属性Multiline</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OuterText">
      <summary>属性OuterText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerParagraphEOF">
      <summary>属性OwnerParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PrintBoxOnlyChecked">
      <summary>属性PrintBoxOnlyChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PrintTextForChecked">
      <summary>属性PrintTextForChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PrintTextForUnChecked">
      <summary>属性PrintTextForUnChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PrintVisibilityWhenUnchecked">
      <summary>属性PrintVisibilityWhenUnchecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.PropertyExpressions">
      <summary>属性PropertyExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.StringTag">
      <summary>属性StringTag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.UnCheckedValue">
      <summary>属性UnCheckedValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Value">
      <summary>属性Value</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ValueBinding">
      <summary>属性ValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.VisualStyle">
      <summary>属性VisualStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCheckBoxElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextContainerElement">
      <summary>XTextContainerElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContainerElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.CopySource">
      <summary>属性CopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.EditorText">
      <summary>属性EditorText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.EditorTextExt">
      <summary>属性EditorTextExt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.HasSelection">
      <summary>属性HasSelection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerParagraphEOF">
      <summary>属性OwnerParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.RuntimeContentReadonly">
      <summary>属性RuntimeContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContainerElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextContent">
      <summary>XTextContent 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.MoveStep(System.Single)">
      <summary>方法MoveStep</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.MoveToElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法MoveToElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.MoveToPoint(System.Single,System.Single)">
      <summary>方法MoveToPoint</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.MoveToPosition(System.Int32)">
      <summary>方法MoveToPosition</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.MoveToTarget(DCSoft.Writer.MoveTarget)">
      <summary>方法MoveToTarget</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.SelectParagraph">
      <summary>方法SelectParagraph</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContent.SelectWord">
      <summary>方法SelectWord</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.CurrentElement">
      <summary>属性CurrentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.CurrentLine">
      <summary>属性CurrentLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.CurrentParagraphEOF">
      <summary>属性CurrentParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.CurrentSelectElement">
      <summary>属性CurrentSelectElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.FirstContentElement">
      <summary>属性FirstContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.FirstElement">
      <summary>属性FirstElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.LastContentElement">
      <summary>属性LastContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.LastElement">
      <summary>属性LastElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.Selection">
      <summary>属性Selection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.SelectionLength">
      <summary>属性SelectionLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContent.SelectionStartIndex">
      <summary>属性SelectionStartIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextContentLinkFieldElement">
      <summary>XTextContentLinkFieldElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.ContentSource">
      <summary>属性ContentSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.CopySource">
      <summary>属性CopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.ReplaceUpdateMode">
      <summary>属性ReplaceUpdateMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.SaveLinkedContent">
      <summary>属性SaveLinkedContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextContentLinkFieldElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextControlHostElement">
      <summary>XTextControlHostElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>方法EditorSetSize</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextControlHostElement.SetNativeHostedControlHandle(System.IntPtr)">
      <summary>方法SetNativeHostedControlHandle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.ControlType">
      <summary>属性ControlType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.HostedInstance">
      <summary>属性HostedInstance</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.PixelHeight">
      <summary>属性PixelHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.PixelWidth">
      <summary>属性PixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Resizeable">
      <summary>属性Resizeable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.TypeFullName">
      <summary>属性TypeFullName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextControlHostElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextCustomShapeElement">
      <summary>XTextCustomShapeElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCustomShapeElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCustomShapeElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextCustomShapeElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextCustomShapeElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDirectoryFieldElement">
      <summary>XTextDirectoryFieldElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.Alignment">
      <summary>属性Alignment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDirectoryFieldElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentComEvents">
      <summary>XTextDocument 事件的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.DocumentContentChanged(System.Object,System.EventArgs)">
      <summary> DocumentContentChanged 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.DocumentLoad(System.Object,System.EventArgs)">
      <summary> DocumentLoad 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventAfterPaintElement(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary> EventAfterPaintElement 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventAfterPrintPage(System.Object,DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary> EventAfterPrintPage 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventBeforePaintElement(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary> EventBeforePaintElement 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventBeginPrint(System.Object,DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary> EventBeginPrint 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventDrawPageFrameContent(System.Object,DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary> EventDrawPageFrameContent 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventElementValidating(System.Object,DCSoft.Writer.ElementValidatingEventArgs)">
      <summary> EventElementValidating 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventEndPrint(System.Object,DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary> EventEndPrint 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventExpressionFunction(System.Object,DCSoft.Writer.WriterExpressionFunctionEventArgs)">
      <summary> EventExpressionFunction 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventPrintPage(System.Object,DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary> EventPrintPage 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.EventPrintQueryPageSettings(System.Object,DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs)">
      <summary> EventPrintQueryPageSettings 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.SelectionChanged(System.Object,System.EventArgs)">
      <summary> SelectionChanged 事件</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentComEvents.SelectionChanging(System.Object,DCSoft.Writer.Dom.SelectionChangingEventArgs)">
      <summary> SelectionChanging 事件</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocument">
      <summary>XTextDocument 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.AllocElementID(System.String,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AllocElementID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.AppendSubDocument(DCSoft.Writer.Dom.XTextSubDocumentElement)">
      <summary>方法AppendSubDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.Clone(System.Boolean)">
      <summary>方法Clone</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>方法COMARGB2Integer</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.COMDisposeImage(System.Int32)">
      <summary>方法COMDisposeImage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>方法COMLoadImageFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>方法COMLoadImageFromBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>方法COMLoadImageFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateComment">
      <summary>方法CreateComment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateContentSearchReplacer">
      <summary>方法CreateContentSearchReplacer</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateDocumentFragment">
      <summary>方法CreateDocumentFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateElement(System.String)">
      <summary>方法CreateElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateElementByXMLFragment(System.String)">
      <summary>方法CreateElementByXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateTextElements(System.String,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法CreateTextElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.CreateTextElementsExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法CreateTextElementsExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.DetectValueBindingModified">
      <summary>方法DetectValueBindingModified</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteLayout">
      <summary>方法ExecuteLayout</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethod(System.String)">
      <summary>方法ExecuteScriptMethod</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodExt(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>方法ExecuteScriptMethodExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodExtReturnBoolean(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>方法ExecuteScriptMethodExtReturnBoolean</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodExtReturnDouble(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>方法ExecuteScriptMethodExtReturnDouble</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodExtReturnInt32(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>方法ExecuteScriptMethodExtReturnInt32</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodExtReturnString(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>方法ExecuteScriptMethodExtReturnString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodReturnBoolean(System.String)">
      <summary>方法ExecuteScriptMethodReturnBoolean</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodReturnDouble(System.String)">
      <summary>方法ExecuteScriptMethodReturnDouble</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodReturnInt32(System.String)">
      <summary>方法ExecuteScriptMethodReturnInt32</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteScriptMethodReturnString(System.String)">
      <summary>方法ExecuteScriptMethodReturnString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExecuteTableSubfield(System.Boolean)">
      <summary>方法ExecuteTableSubfield</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.FillDataSource(System.Boolean)">
      <summary>方法FillDataSource</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetBindingDataSources">
      <summary>方法GetBindingDataSources</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetCheckBoxElementsSpecifyName(System.String)">
      <summary>方法GetCheckBoxElementsSpecifyName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetCheckedValueList(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法GetCheckedValueList</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetCurrentElementByTypeName(System.String)">
      <summary>方法GetCurrentElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetDataSourceBindingDescriptions">
      <summary>方法GetDataSourceBindingDescriptions</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetDataSourceBindingDescriptionsXML">
      <summary>方法GetDataSourceBindingDescriptionsXML</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetDetectValueBindingModifiedMessage">
      <summary>方法GetDetectValueBindingModifiedMessage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetDocumentParameterValueXml(System.String)">
      <summary>方法GetDocumentParameterValueXml</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetDocumnetParameterValue(System.String)">
      <summary>方法GetDocumnetParameterValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementAt(System.Single,System.Single,System.Boolean)">
      <summary>方法GetElementAt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementAttribute(System.String,System.String)">
      <summary>方法GetElementAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementInnerXmlByID(System.String)">
      <summary>方法GetElementInnerXmlByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementOuterXmlByID(System.String)">
      <summary>方法GetElementOuterXmlByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementProperty(System.String,System.String)">
      <summary>方法GetElementProperty</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementsById(System.String)">
      <summary>方法GetElementsById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementTextByID(System.String)">
      <summary>方法GetElementTextByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementVisible(System.String)">
      <summary>方法GetElementVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetElementXMLFragmentByID(System.String)">
      <summary>方法GetElementXMLFragmentByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetFormValue(System.String)">
      <summary>方法GetFormValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetInputFieldInnerValue(System.String)">
      <summary>方法GetInputFieldInnerValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetNextElementByTypeName(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>方法GetNextElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetNowDateTime">
      <summary>方法GetNowDateTime</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetParameterEnabled(System.String)">
      <summary>方法GetParameterEnabled</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetParameterValue(System.String)">
      <summary>方法GetParameterValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetRTFText(System.Boolean)">
      <summary>方法GetRTFText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetStyleIndexByString(System.String)">
      <summary>方法GetStyleIndexByString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetSubDoumentContentXmlByID(System.String)">
      <summary>方法GetSubDoumentContentXmlByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetTableCell(System.String,System.Int32,System.Int32)">
      <summary>方法GetTableCell</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetTableCellText(System.String,System.Int32,System.Int32)">
      <summary>方法GetTableCellText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ImportElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法ImportElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.InsertSubDocuentAtCurrentPosition(DCSoft.Writer.Dom.XTextSubDocumentElement,System.Boolean)">
      <summary>方法InsertSubDocuentAtCurrentPosition</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadDocumentInstance(System.String,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>方法LoadDocumentInstance</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromBase64String(System.String,System.String)">
      <summary>方法LoadFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromBase64StringFastMode(System.String,System.String)">
      <summary>方法LoadFromBase64StringFastMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromBinary(System.Byte[],System.String)">
      <summary>方法LoadFromBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromCompressBinary(System.Byte[],System.String)">
      <summary>方法LoadFromCompressBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromFile(System.String,System.String)">
      <summary>方法LoadFromFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromFileFastMode(System.String,System.String)">
      <summary>方法LoadFromFileFastMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromString(System.String,System.String)">
      <summary>方法LoadFromString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadFromStringFastMode(System.String,System.String)">
      <summary>方法LoadFromStringFastMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadUseAppendModeFromBase64String(System.String,System.String)">
      <summary>方法LoadUseAppendModeFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadUseAppendModeFromFileName(System.String,System.String)">
      <summary>方法LoadUseAppendModeFromFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LoadUseAppendModeFromString(System.String,System.String)">
      <summary>方法LoadUseAppendModeFromString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LockContentByElement(DCSoft.Writer.Dom.XTextContainerElement,System.String,System.String,System.Boolean)">
      <summary>方法LockContentByElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LockContentByElementID(System.String,System.String,System.String,System.Boolean)">
      <summary>方法LockContentByElementID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.LockContentByTableRow(System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary>方法LockContentByTableRow</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBGetElementById(System.String@)">
      <summary>方法PBGetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBGetElementsById(System.String@)">
      <summary>方法PBGetElementsById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBGetElementsByName(System.String@)">
      <summary>方法PBGetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBGetElementsByTypeName(System.String@)">
      <summary>方法PBGetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBLoadFromString(System.String@,System.String@)">
      <summary>方法PBLoadFromString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBSaveToString(System.String@)">
      <summary>方法PBSaveToString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBSetElementTextByID(System.String@,System.String@)">
      <summary>方法PBSetElementTextByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.PBSetTableCellText(System.String@,System.Int32@,System.Int32@,System.String@)">
      <summary>方法PBSetTableCellText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RefreshDocument">
      <summary>方法RefreshDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RefreshDocumentExt(System.Boolean,System.Boolean)">
      <summary>方法RefreshDocumentExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RefreshPages">
      <summary>方法RefreshPages</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RefreshSize_2">
      <summary>方法RefreshSize_2</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RefreshSizeWithoutParamter">
      <summary>方法RefreshSizeWithoutParamter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.RejectUserTrace">
      <summary>方法RejectUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ResetFormValue">
      <summary>方法ResetFormValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.Save(System.String,System.String)">
      <summary>方法Save</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveLongImageFile(System.String)">
      <summary>方法SaveLongImageFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveLongImageFileZoom(System.String,System.Single)">
      <summary>方法SaveLongImageFileZoom</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveLongImageToBase64String(System.String)">
      <summary>方法SaveLongImageToBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveLongImageToBase64StringZoom(System.String,System.Single)">
      <summary>方法SaveLongImageToBase64StringZoom</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SavePageImageFile(System.Int32,System.String)">
      <summary>方法SavePageImageFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SavePageImageFileZoom(System.Int32,System.String,System.Single)">
      <summary>方法SavePageImageFileZoom</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SavePageImageToBase64String(System.Int32,System.String)">
      <summary>方法SavePageImageToBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SavePageImageToBase64StringZoom(System.Int32,System.String,System.Single)">
      <summary>方法SavePageImageToBase64StringZoom</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToBase64String(System.String)">
      <summary>方法SaveToBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToBinary(System.String)">
      <summary>方法SaveToBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToCompressBinary(System.String)">
      <summary>方法SaveToCompressBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToFile(System.String,System.String)">
      <summary>方法SaveToFile</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToFileFast(System.String,System.String)">
      <summary>方法SaveToFileFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SaveToString(System.String)">
      <summary>方法SaveToString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetDocumentParameterValue(System.String,System.Object)">
      <summary>方法SetDocumentParameterValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetDocumentParameterValueXml(System.String,System.String)">
      <summary>方法SetDocumentParameterValueXml</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetElementAttribute(System.String,System.String,System.String)">
      <summary>方法SetElementAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetElementProperty(System.String,System.String,System.String)">
      <summary>方法SetElementProperty</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetElementTextByID(System.String,System.String)">
      <summary>方法SetElementTextByID</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetElementVisible(System.String,System.Boolean)">
      <summary>方法SetElementVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetFormValue(System.String,System.String)">
      <summary>方法SetFormValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetInputFieldInnerValue(System.String,System.String)">
      <summary>方法SetInputFieldInnerValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetInputFieldSelectedIndexs(System.String,System.String)">
      <summary>方法SetInputFieldSelectedIndexs</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetParameterEnabled(System.String,System.Boolean)">
      <summary>方法SetParameterEnabled</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetParameterValue(System.String,System.Object)">
      <summary>方法SetParameterValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetTableCellText(System.String,System.Int32,System.Int32,System.String)">
      <summary>方法SetTableCellText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.SetVisibleForElementMarkAutoHide(System.Boolean,System.Boolean)">
      <summary>方法SetVisibleForElementMarkAutoHide</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.UpdateUserInfoSaveTime(System.Boolean)">
      <summary>方法UpdateUserInfoSaveTime</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.UpdateViewForDataSource">
      <summary>方法UpdateViewForDataSource</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ValueValidate">
      <summary>方法ValueValidate</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.ValueValidateWithCreateDocumentComments">
      <summary>方法ValueValidateWithCreateDocumentComments</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.WriteDataFromDataSourceToDocument">
      <summary>方法WriteDataFromDataSourceToDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.WriteDataFromDataSourceToDocumentSpecifyParameterNames(System.String)">
      <summary>方法WriteDataFromDataSourceToDocumentSpecifyParameterNames</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.WriteDataFromDocumentToDataSource">
      <summary>方法WriteDataFromDocumentToDataSource</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocument.WriteDataSource">
      <summary>方法WriteDataSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.BaseUrl">
      <summary>属性BaseUrl</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Body">
      <summary>属性Body</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.BodyText">
      <summary>属性BodyText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Bottom">
      <summary>属性Bottom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CheckBoxes">
      <summary>属性CheckBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Comments">
      <summary>属性Comments</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Content">
      <summary>属性Content</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ContentStyles">
      <summary>属性ContentStyles</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentContentPartyStyle">
      <summary>属性CurrentContentPartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentElement">
      <summary>属性CurrentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentInputField">
      <summary>属性CurrentInputField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentOutlineNode">
      <summary>属性CurrentOutlineNode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentPage">
      <summary>属性CurrentPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentParagraphEOF">
      <summary>属性CurrentParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentSection">
      <summary>属性CurrentSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentStyleInfo">
      <summary>属性CurrentStyleInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentSubDocument">
      <summary>属性CurrentSubDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentTableCell">
      <summary>属性CurrentTableCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.CurrentUser">
      <summary>属性CurrentUser</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.DefaultFont">
      <summary>属性DefaultFont</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.DefaultStyle">
      <summary>属性DefaultStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.DomImageList">
      <summary>属性DomImageList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.EditorVersionString">
      <summary>属性EditorVersionString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Fields">
      <summary>属性Fields</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.FileFormat">
      <summary>属性FileFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Footer">
      <summary>属性Footer</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.FooterForFirstPage">
      <summary>属性FooterForFirstPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.FormValuesXml">
      <summary>属性FormValuesXml</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.GlobalPageIndex">
      <summary>属性GlobalPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.GlobalPages">
      <summary>属性GlobalPages</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Header">
      <summary>属性Header</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.HeaderForFirstPage">
      <summary>属性HeaderForFirstPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.HoverElement">
      <summary>属性HoverElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Images">
      <summary>属性Images</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Info">
      <summary>属性Info</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.InputFields">
      <summary>属性InputFields</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.LastAlertInfos">
      <summary>属性LastAlertInfos</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.LastPrintResult">
      <summary>属性LastPrintResult</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.LocalConfig">
      <summary>属性LocalConfig</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.LocalExcludeKeywords">
      <summary>属性LocalExcludeKeywords</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ModifiedInputFields">
      <summary>属性ModifiedInputFields</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Options">
      <summary>属性Options</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.OutlineNodes">
      <summary>属性OutlineNodes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.PageIndex">
      <summary>属性PageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.PageIndexfix">
      <summary>属性PageIndexfix</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Pages">
      <summary>属性Pages</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.PageSettings">
      <summary>属性PageSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.PageViewMode">
      <summary>属性PageViewMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.RadioBoxes">
      <summary>属性RadioBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ReadyState">
      <summary>属性ReadyState</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.RegisterCode">
      <summary>属性RegisterCode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.RTFText">
      <summary>属性RTFText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.SaveDocumentOptionsToFile">
      <summary>属性SaveDocumentOptionsToFile</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ScriptLanguage">
      <summary>属性ScriptLanguage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ScriptText">
      <summary>属性ScriptText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Sections">
      <summary>属性Sections</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Selection">
      <summary>属性Selection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.ServerObject">
      <summary>属性ServerObject</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.SingleSelectedElement">
      <summary>属性SingleSelectedElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.SpecialTag">
      <summary>属性SpecialTag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.SubDocuments">
      <summary>属性SubDocuments</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Tables">
      <summary>属性Tables</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.TagValue">
      <summary>属性TagValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.UserHistories">
      <summary>属性UserHistories</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.WebClientHtmlText">
      <summary>属性WebClientHtmlText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.Width">
      <summary>属性Width</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.XMLText">
      <summary>属性XMLText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocument.XMLTextUnFormatted">
      <summary>属性XMLTextUnFormatted</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentBodyElement">
      <summary>XTextDocumentBodyElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetAllLines">
      <summary>方法GetAllLines</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetLinesInPage(DCSoft.Printing.PrintPage)">
      <summary>方法GetLinesInPage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetLinesInPageIndex(System.Int32)">
      <summary>方法GetLinesInPageIndex</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.GetRemainSpacingInLastPage">
      <summary>方法GetRemainSpacingInLastPage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetSelection(System.Int32,System.Int32)">
      <summary>方法SetSelection</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetSelectionRange(System.Int32,System.Int32)">
      <summary>方法SetSelectionRange</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentBodyElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>方法SetTextRawDOM</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Content">
      <summary>属性Content</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentEditable">
      <summary>属性ContentEditable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentPartyStyle">
      <summary>属性ContentPartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.CurrentLine">
      <summary>属性CurrentLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.CurrentParagraphEOF">
      <summary>属性CurrentParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Lines">
      <summary>属性Lines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.PrivateContent">
      <summary>属性PrivateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.PrivateLines">
      <summary>属性PrivateLines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Sections">
      <summary>属性Sections</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Selection">
      <summary>属性Selection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.TagValue">
      <summary>属性TagValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentBodyElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentFooterElement">
      <summary>XTextDocumentFooterElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.AppendContentElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendContentElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.AppendContentElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法AppendContentElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.GetElementsById(System.String)">
      <summary>方法GetElementsById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>方法SetEditorTextExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.SetSelection(System.Int32,System.Int32)">
      <summary>方法SetSelection</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterElement.SetSelectionRange(System.Int32,System.Int32)">
      <summary>方法SetSelectionRange</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Content">
      <summary>属性Content</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Lines">
      <summary>属性Lines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.PrivateContent">
      <summary>属性PrivateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.PrivateLines">
      <summary>属性PrivateLines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement">
      <summary>XTextDocumentFooterForFirstPageElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentFooterForFirstPageElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentHeaderElement">
      <summary>XTextDocumentHeaderElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.AppendContentElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendContentElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.AppendContentElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法AppendContentElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>方法SetEditorTextExt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.CurrentLine">
      <summary>属性CurrentLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Lines">
      <summary>属性Lines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.PrivateContent">
      <summary>属性PrivateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.PrivateLines">
      <summary>属性PrivateLines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Selection">
      <summary>属性Selection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement">
      <summary>XTextDocumentHeaderForFirstPageElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.AppendContentElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendContentElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.AppendContentElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法AppendContentElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.DataName">
      <summary>属性DataName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentHeaderForFirstPageElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextDocumentList">
      <summary>XTextDocumentList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.Add(DCSoft.Writer.Dom.XTextDocument)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.ComSetItem(System.Int32,DCSoft.Writer.Dom.XTextDocument)">
      <summary>方法ComSetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.Contains(DCSoft.Writer.Dom.XTextDocument)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.GetItem(System.Int32)">
      <summary>方法GetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.PrintDocument(System.Boolean,System.Int32)">
      <summary>方法PrintDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextDocumentList.Remove(DCSoft.Writer.Dom.XTextDocument)">
      <summary>方法Remove</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentList.FirstDocument">
      <summary>属性FirstDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentList.LastDocument">
      <summary>属性LastDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextDocumentList.Title">
      <summary>属性Title</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextElement">
      <summary>XTextElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.Clone(System.Boolean)">
      <summary>方法Clone</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>方法EditorSetSize</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.AbsLeft">
      <summary>属性AbsLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.FirstContentElement">
      <summary>属性FirstContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.LastContentElement">
      <summary>属性LastContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OuterText">
      <summary>属性OuterText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerParagraphEOF">
      <summary>属性OwnerParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.PixelHeight">
      <summary>属性PixelHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.PixelWidth">
      <summary>属性PixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextElementList">
      <summary>XTextElementList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.AddRangeRaw(DCSoft.Writer.Dom.XTextElementList)">
      <summary>方法AddRangeRaw</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.CloneDeeply">
      <summary>方法CloneDeeply</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.ComAddItem(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法ComAddItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.ComSetItem(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法ComSetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.GetItem(System.Int32)">
      <summary>方法GetItem</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextElementList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElementList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextElementList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextFieldBorderElement">
      <summary>XTextFieldBorderElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFieldBorderElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFieldBorderElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.Position">
      <summary>属性Position</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFieldBorderElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextFileBlockElement">
      <summary>XTextFileBlockElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextFileBlockElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.ContentSource">
      <summary>属性ContentSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.ContentSourceValue">
      <summary>属性ContentSourceValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextFileBlockElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextHorizontalLineElement">
      <summary>XTextHorizontalLineElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextHorizontalLineElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.LineLengthInCM">
      <summary>属性LineLengthInCM</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextHorizontalLineElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextImageElement">
      <summary>XTextImageElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>方法EditorSetSize</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.LoadImage(System.String,System.Boolean)">
      <summary>方法LoadImage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.LoadImageFromBase64String(System.String,System.Boolean)">
      <summary>方法LoadImageFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.LoadImageFromBinary(System.Byte[],System.Boolean)">
      <summary>方法LoadImageFromBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.SetPageImage(System.Int32,System.Drawing.Image)">
      <summary>方法SetPageImage</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.SetPageImageByBase64String(System.Int32,System.String)">
      <summary>方法SetPageImageByBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.SetPageImageByFileName(System.Int32,System.String)">
      <summary>方法SetPageImageByFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.SetPageImageByImageValue(System.Int32,DCSoft.Drawing.XImageValue)">
      <summary>方法SetPageImageByImageValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextImageElement.UpdateImageContent">
      <summary>方法UpdateImageContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.AbsLeft">
      <summary>属性AbsLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.AdditionShapeContent">
      <summary>属性AdditionShapeContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.AdditionShapeFixSize">
      <summary>属性AdditionShapeFixSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Alt">
      <summary>属性Alt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.CompressSaveMode">
      <summary>属性CompressSaveMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.EnableRepeatedImage">
      <summary>属性EnableRepeatedImage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Image">
      <summary>属性Image</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ImageData">
      <summary>属性ImageData</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.LinkInfo">
      <summary>属性LinkInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OffsetX">
      <summary>属性OffsetX</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OffsetY">
      <summary>属性OffsetY</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.PageImages">
      <summary>属性PageImages</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.PixelHeight">
      <summary>属性PixelHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.PixelWidth">
      <summary>属性PixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Printable">
      <summary>属性Printable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Resizeable">
      <summary>属性Resizeable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.SaveContentInFile">
      <summary>属性SaveContentInFile</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.SmoothZoom">
      <summary>属性SmoothZoom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Source">
      <summary>属性Source</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.TransparentColor">
      <summary>属性TransparentColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.TransparentColorValue">
      <summary>属性TransparentColorValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.VAlign">
      <summary>属性VAlign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextImageElement.ZOrderStyle">
      <summary>属性ZOrderStyle</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextInputFieldElement">
      <summary>XTextInputFieldElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.BeginEditValue">
      <summary>方法BeginEditValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.BelongToDocumentDom(DCSoft.Writer.Dom.XTextDocument,System.Boolean)">
      <summary>方法BelongToDocumentDom</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.Clone(System.Boolean)">
      <summary>方法Clone</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetSelectedIndexs(System.String)">
      <summary>方法EditorSetSelectedIndexs</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetStyleDeeply(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyleDeeply</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EndSetStyleDeeply">
      <summary>方法EndSetStyleDeeply</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EndSetStyleWithLogUndo">
      <summary>方法EndSetStyleWithLogUndo</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.EnsureHasListItemsInstance">
      <summary>方法EnsureHasListItemsInstance</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.FocusWithoutActiveEditor">
      <summary>方法FocusWithoutActiveEditor</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SelectWithoutBorderElement">
      <summary>方法SelectWithoutBorderElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>方法SetEditorTextExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetInnerTextFast(System.String)">
      <summary>方法SetInnerTextFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>方法SetTextRawDOM</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextInputFieldElement.UpdateInnerValue(System.Boolean)">
      <summary>方法UpdateInnerValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.AbsLeft">
      <summary>属性AbsLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.AcceptChildElementTypes2">
      <summary>属性AcceptChildElementTypes2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.AcceptTab">
      <summary>属性AcceptTab</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Alignment">
      <summary>属性Alignment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.AutoSetSpellCodeInDropdownList">
      <summary>属性AutoSetSpellCodeInDropdownList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BackgroundText">
      <summary>属性BackgroundText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BackgroundTextColor">
      <summary>属性BackgroundTextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BackgroundTextItalic">
      <summary>属性BackgroundTextItalic</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BorderElementColor">
      <summary>属性BorderElementColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BorderTextPosition">
      <summary>属性BorderTextPosition</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.BorderVisible">
      <summary>属性BorderVisible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ContentEditable">
      <summary>属性ContentEditable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.CopySource">
      <summary>属性CopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.CustomValueEditorTypeName">
      <summary>属性CustomValueEditorTypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DataName">
      <summary>属性DataName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DefaultEventExpression">
      <summary>属性DefaultEventExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DefaultSelectedIndexs">
      <summary>属性DefaultSelectedIndexs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DefaultValueForValueBinding">
      <summary>属性DefaultValueForValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DefaultValueType">
      <summary>属性DefaultValueType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DisplayFormat">
      <summary>属性DisplayFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.DisplayName">
      <summary>属性DisplayName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorActiveMode">
      <summary>属性EditorActiveMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorText">
      <summary>属性EditorText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EditorTextExt">
      <summary>属性EditorTextExt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ElementIDForEditableDependent">
      <summary>属性ElementIDForEditableDependent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EnableHighlight">
      <summary>属性EnableHighlight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EnableLastSelectedListItems">
      <summary>属性EnableLastSelectedListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EnableUserEditInnerValue">
      <summary>属性EnableUserEditInnerValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EndBorderText">
      <summary>属性EndBorderText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EndElement">
      <summary>属性EndElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EventExpressions">
      <summary>属性EventExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.FastInputMode">
      <summary>属性FastInputMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.FieldSettings">
      <summary>属性FieldSettings</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.FirstContentElement">
      <summary>属性FirstContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.HasSelection">
      <summary>属性HasSelection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.InnerText">
      <summary>属性InnerText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.InnerValue">
      <summary>属性InnerValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.IsLogicDeleted">
      <summary>属性IsLogicDeleted</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.IsTopLevelField">
      <summary>属性IsTopLevelField</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LabelText">
      <summary>属性LabelText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LastContentElement">
      <summary>属性LastContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LastSelectedListItems">
      <summary>属性LastSelectedListItems</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LeftInOwnerPage">
      <summary>属性LeftInOwnerPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.LinkListBinding">
      <summary>属性LinkListBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.MaxInputLength">
      <summary>属性MaxInputLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.MoveFocusHotKey">
      <summary>属性MoveFocusHotKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OuterText">
      <summary>属性OuterText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerParagraphEOF">
      <summary>属性OwnerParagraphEOF</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.PropertyExpressions">
      <summary>属性PropertyExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.RuntimeContentReadonly">
      <summary>属性RuntimeContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.SelectedIndex">
      <summary>属性SelectedIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.SelectedSpellCode">
      <summary>属性SelectedSpellCode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ShowInputFieldStateTag">
      <summary>属性ShowInputFieldStateTag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.SpecifyWidth">
      <summary>属性SpecifyWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.StartBorderText">
      <summary>属性StartBorderText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.StartElement">
      <summary>属性StartElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.StartElementAbsLeft">
      <summary>属性StartElementAbsLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.StartElementAbsTop">
      <summary>属性StartElementAbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TabIndex">
      <summary>属性TabIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TabStop">
      <summary>属性TabStop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TagValue">
      <summary>属性TagValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TextColor">
      <summary>属性TextColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TextInlcudeHidden">
      <summary>属性TextInlcudeHidden</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TopInOwnerPage">
      <summary>属性TopInOwnerPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.UnitText">
      <summary>属性UnitText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.UserEditable">
      <summary>属性UserEditable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ValidateStyle">
      <summary>属性ValidateStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ValueBinding">
      <summary>属性ValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ViewEncryptType">
      <summary>属性ViewEncryptType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.VisibleExpression">
      <summary>属性VisibleExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextInputFieldElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextLabelElement">
      <summary>XTextLabelElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>方法EditorSetSize</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.GetDisplayText(System.Int32)">
      <summary>方法GetDisplayText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.SetPageLabelText(System.Int32,System.String)">
      <summary>方法SetPageLabelText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLabelElement.UpdateContactAction">
      <summary>方法UpdateContactAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Alignment">
      <summary>属性Alignment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.AttributeNameForContactAction">
      <summary>属性AttributeNameForContactAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.AutoSize">
      <summary>属性AutoSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.ContactAction">
      <summary>属性ContactAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.EditorSize">
      <summary>属性EditorSize</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.LinkInfo">
      <summary>属性LinkInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.LinkTextForContactAction">
      <summary>属性LinkTextForContactAction</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Multiline">
      <summary>属性Multiline</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PageTexts">
      <summary>属性PageTexts</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PixelHeight">
      <summary>属性PixelHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PixelWidth">
      <summary>属性PixelWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.PropertyExpressions">
      <summary>属性PropertyExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.StrictMatchPageIndex">
      <summary>属性StrictMatchPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLabelElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextLine">
      <summary>XTextLine 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLine.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLine.GetItem(System.Int32)">
      <summary>方法GetItem</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.AbsBounds">
      <summary>属性AbsBounds</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.AbsLeft">
      <summary>属性AbsLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Bottom">
      <summary>属性Bottom</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.IndexInPage">
      <summary>属性IndexInPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.IndexInParagraph">
      <summary>属性IndexInParagraph</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Left">
      <summary>属性Left</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.NextLine">
      <summary>属性NextLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.PreLine">
      <summary>属性PreLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Top">
      <summary>属性Top</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLine.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextLineBreakElement">
      <summary>XTextLineBreakElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextLineBreakElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineBreakElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextLineList">
      <summary>XTextLineList 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextLineList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextPageBreakElement">
      <summary>XTextPageBreakElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageBreakElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageBreakElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextPageInfoElement">
      <summary>XTextPageInfoElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextPageInfoElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.AutoHeight">
      <summary>属性AutoHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.DisplayFormat">
      <summary>属性DisplayFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.FormatString">
      <summary>属性FormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.PageIndexFix">
      <summary>属性PageIndexFix</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.SpecifyPageIndexs">
      <summary>属性SpecifyPageIndexs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.SpecifyPageIndexTextList">
      <summary>属性SpecifyPageIndexTextList</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.ValueType">
      <summary>属性ValueType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextPageInfoElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextParagraphFlagElement">
      <summary>XTextParagraphFlagElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.GetParagraphElements">
      <summary>方法GetParagraphElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextParagraphFlagElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.ParagraphText">
      <summary>属性ParagraphText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextParagraphFlagElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextRadioBoxElement">
      <summary>XTextRadioBoxElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextRadioBoxElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Caption">
      <summary>属性Caption</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.CaptionAlign">
      <summary>属性CaptionAlign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.CaptionFlowLayout">
      <summary>属性CaptionFlowLayout</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.CheckAlignLeft">
      <summary>属性CheckAlignLeft</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.CheckboxVisibility">
      <summary>属性CheckboxVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Checked">
      <summary>属性Checked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.CheckedValue">
      <summary>属性CheckedValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.DataName">
      <summary>属性DataName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.EventExpressions">
      <summary>属性EventExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.LinkInfo">
      <summary>属性LinkInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Multiline">
      <summary>属性Multiline</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.OuterText">
      <summary>属性OuterText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PrintBoxOnlyChecked">
      <summary>属性PrintBoxOnlyChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PrintTextForChecked">
      <summary>属性PrintTextForChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PrintTextForUnChecked">
      <summary>属性PrintTextForUnChecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.PrintVisibilityWhenUnchecked">
      <summary>属性PrintVisibilityWhenUnchecked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Readonly">
      <summary>属性Readonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.StringTag">
      <summary>属性StringTag</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.UnCheckedValue">
      <summary>属性UnCheckedValue</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.ValueBinding">
      <summary>属性ValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.VisualStyle">
      <summary>属性VisualStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextRadioBoxElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextSectionElement">
      <summary>XTextSectionElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Collapse">
      <summary>方法Collapse</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Expand">
      <summary>方法Expand</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetElementByIdExt(System.String,System.Boolean)">
      <summary>方法GetElementByIdExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>方法SetEditorTextExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>方法SetTextRawDOM</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSectionElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.AcceptChildElementTypes2">
      <summary>属性AcceptChildElementTypes2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.CheckBoxes">
      <summary>属性CheckBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ContentEditable">
      <summary>属性ContentEditable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ContentPartyStyle">
      <summary>属性ContentPartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.CopySource">
      <summary>属性CopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.EnableCollapse">
      <summary>属性EnableCollapse</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.GridLine">
      <summary>属性GridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.HasSelection">
      <summary>属性HasSelection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.IsCollapsed">
      <summary>属性IsCollapsed</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ParagraphsEOFs">
      <summary>属性ParagraphsEOFs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.PrivateContent">
      <summary>属性PrivateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.PrivateLines">
      <summary>属性PrivateLines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.RadioBoxes">
      <summary>属性RadioBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.RuntimeContentReadonly">
      <summary>属性RuntimeContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.SpecifyFixedLineHeight">
      <summary>属性SpecifyFixedLineHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.SpecifyHeight">
      <summary>属性SpecifyHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.VisibleExpression">
      <summary>属性VisibleExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSectionElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextSelection">
      <summary>XTextSelection 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSelection.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法Contains</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSelection.GetContentText(System.String)">
      <summary>方法GetContentText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.AbsEndIndex">
      <summary>属性AbsEndIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.AbsLength">
      <summary>属性AbsLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.AbsStartIndex">
      <summary>属性AbsStartIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.Cells">
      <summary>属性Cells</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.CellsWithoutOverried">
      <summary>属性CellsWithoutOverried</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.Document">
      <summary>属性Document</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.FirstElement">
      <summary>属性FirstElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.LastElement">
      <summary>属性LastElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.Length">
      <summary>属性Length</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.Mode">
      <summary>属性Mode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.ParagraphsEOFs">
      <summary>属性ParagraphsEOFs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.RTFText">
      <summary>属性RTFText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.SelectionParagraphFlags">
      <summary>属性SelectionParagraphFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.SelectionVersion">
      <summary>属性SelectionVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.StartIndex">
      <summary>属性StartIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSelection.XMLText">
      <summary>属性XMLText</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextSignElement">
      <summary>XTextSignElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.ViewIndex">
      <summary>属性ViewIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextSignImageElement">
      <summary>XTextSignImageElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.GetSignContainerElement">
      <summary>方法GetSignContainerElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.HasAttributes">
      <summary>方法HasAttributes</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.LoadImageBase64(System.String)">
      <summary>方法LoadImageBase64</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.LoadImageBase64UseTransparentColor(System.String,System.Drawing.Color)">
      <summary>方法LoadImageBase64UseTransparentColor</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.LoadImageData(System.Byte[])">
      <summary>方法LoadImageData</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.LoadImageDataUseTransparentColor(System.Byte[],System.Drawing.Color)">
      <summary>方法LoadImageDataUseTransparentColor</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.Resign">
      <summary>方法Resign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSignImageElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.Enabled">
      <summary>属性Enabled</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.ImageData">
      <summary>属性ImageData</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignClientName">
      <summary>属性SignClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignErrorMessage">
      <summary>属性SignErrorMessage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignMessage">
      <summary>属性SignMessage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignProviderName">
      <summary>属性SignProviderName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignRange">
      <summary>属性SignRange</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignState">
      <summary>属性SignState</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignTime">
      <summary>属性SignTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignUserID">
      <summary>属性SignUserID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.SignUserName">
      <summary>属性SignUserName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSignImageElement.UseInnerSignProvider">
      <summary>属性UseInnerSignProvider</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextSubDocumentElement">
      <summary>XTextSubDocumentElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.Collapse">
      <summary>方法Collapse</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorSetState(System.Boolean,System.Drawing.Color,System.Drawing.Color)">
      <summary>方法EditorSetState</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.EditorSetStateCOM(System.Boolean,System.String,System.String)">
      <summary>方法EditorSetStateCOM</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.Expand">
      <summary>方法Expand</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.LoadDocumentFromBase64String(System.String,System.String)">
      <summary>方法LoadDocumentFromBase64String</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.LoadDocumentFromBinary(System.Byte[],System.String)">
      <summary>方法LoadDocumentFromBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.LoadDocumentFromCompressBinary(System.Byte[],System.String)">
      <summary>方法LoadDocumentFromCompressBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.LoadDocumentFromFileName(System.String,System.String)">
      <summary>方法LoadDocumentFromFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.LoadDocumentFromString(System.String,System.String)">
      <summary>方法LoadDocumentFromString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SaveDocumentToBinary(System.String)">
      <summary>方法SaveDocumentToBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SaveDocumentToCompressBinary(System.String)">
      <summary>方法SaveDocumentToCompressBinary</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SaveDocumentToFileName(System.String,System.String)">
      <summary>方法SaveDocumentToFileName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SaveDocumentToString(System.String)">
      <summary>方法SaveDocumentToString</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>方法SetTextRawDOM</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextSubDocumentElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.CheckBoxes">
      <summary>属性CheckBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ClientHeight">
      <summary>属性ClientHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ClientWidth">
      <summary>属性ClientWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.CompressOwnerLineSpacing">
      <summary>属性CompressOwnerLineSpacing</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.DelayLoadWhenExpand">
      <summary>属性DelayLoadWhenExpand</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.DocumentID">
      <summary>属性DocumentID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.DocumentInfo">
      <summary>属性DocumentInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.EnableCollapse">
      <summary>属性EnableCollapse</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.FileFormat">
      <summary>属性FileFormat</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.FileName">
      <summary>属性FileName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.GridLine">
      <summary>属性GridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ImportUserTrack">
      <summary>属性ImportUserTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.InnerText">
      <summary>属性InnerText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.IsCollapsed">
      <summary>属性IsCollapsed</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Locked">
      <summary>属性Locked</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.NewPage">
      <summary>属性NewPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OuterText">
      <summary>属性OuterText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Printed">
      <summary>属性Printed</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.RadioBoxes">
      <summary>属性RadioBoxes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextSubDocumentElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextTableCellElement">
      <summary>XTextTableCellElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法AppendChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetBorderColor(DCSoft.Drawing.DCDirection,System.Boolean,System.Drawing.Color)">
      <summary>方法EditorSetBorderColor</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetCellWidthSingle(System.Single,System.Boolean)">
      <summary>方法EditorSetCellWidthSingle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetStyleDeeply(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyleDeeply</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.FixElements">
      <summary>方法FixElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetElementByIdExt(System.String,System.Boolean)">
      <summary>方法GetElementByIdExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.GetXMLFragment">
      <summary>方法GetXMLFragment</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertAfter</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertBefore</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>方法InsertChildElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>方法RemoveChild</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SelectFirstLine">
      <summary>方法SelectFirstLine</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>方法SetEditorText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>方法SetEditorTextExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetInnerTextFast(System.String)">
      <summary>方法SetInnerTextFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>方法SetTextRawDOM</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableCellElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.AcceptChildElementTypes2">
      <summary>属性AcceptChildElementTypes2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.AutoFixFontSizeMode">
      <summary>属性AutoFixFontSizeMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.BottomVisibleCell">
      <summary>属性BottomVisibleCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.CellID">
      <summary>属性CellID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ColIndex">
      <summary>属性ColIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ColSpan">
      <summary>属性ColSpan</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ColumnIndex">
      <summary>属性ColumnIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ContentBuilder">
      <summary>属性ContentBuilder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ContentPartyStyle">
      <summary>属性ContentPartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.CopySource">
      <summary>属性CopySource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.EditorText">
      <summary>属性EditorText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.EditorTextExt">
      <summary>属性EditorTextExt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Elements">
      <summary>属性Elements</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Events">
      <summary>属性Events</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Expression">
      <summary>属性Expression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.GridLine">
      <summary>属性GridLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.HasContentElement">
      <summary>属性HasContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.HasSelection">
      <summary>属性HasSelection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.IsOverrided">
      <summary>属性IsOverrided</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.LeftVisibleCell">
      <summary>属性LeftVisibleCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.LimitedInputChars">
      <summary>属性LimitedInputChars</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.MaxInputLength">
      <summary>属性MaxInputLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.MirrorViewForCrossPage">
      <summary>属性MirrorViewForCrossPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.MoveFocusHotKey">
      <summary>属性MoveFocusHotKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OverrideCell">
      <summary>属性OverrideCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerColumn">
      <summary>属性OwnerColumn</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerLastPageIndex">
      <summary>属性OwnerLastPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerRow">
      <summary>属性OwnerRow</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.OwnerTable">
      <summary>属性OwnerTable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ParagraphsEOFs">
      <summary>属性ParagraphsEOFs</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.PrivateContent">
      <summary>属性PrivateContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.PrivateLines">
      <summary>属性PrivateLines</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.PropertyExpressions">
      <summary>属性PropertyExpressions</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.RightVisibleCell">
      <summary>属性RightVisibleCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.RowIndex">
      <summary>属性RowIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.RowSpan">
      <summary>属性RowSpan</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.SlantSplitLineStyle">
      <summary>属性SlantSplitLineStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.SpecifyFixedLineHeight">
      <summary>属性SpecifyFixedLineHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.StressBorder">
      <summary>属性StressBorder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Title">
      <summary>属性Title</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.TopVisibleCell">
      <summary>属性TopVisibleCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ValueBinding">
      <summary>属性ValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.ValueExpression">
      <summary>属性ValueExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableCellElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextTableColumnElement">
      <summary>XTextTableColumnElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableColumnElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.Cells">
      <summary>属性Cells</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.Left">
      <summary>属性Left</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.OwnerTable">
      <summary>属性OwnerTable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableColumnElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextTableElement">
      <summary>XTextTableElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetStyleDeeply(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetStyleDeeply</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetCellByCellIndex(System.String,System.Boolean)">
      <summary>方法GetCellByCellIndex</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetCellText(System.Int32,System.Int32,System.Boolean)">
      <summary>方法GetCellText</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetCellTextByCellIndex(System.String,System.Boolean)">
      <summary>方法GetCellTextByCellIndex</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetElementById(System.String)">
      <summary>方法GetElementById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetElementsById(System.String)">
      <summary>方法GetElementsById</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetElementsByName(System.String)">
      <summary>方法GetElementsByName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.Subfield(System.Boolean)">
      <summary>方法Subfield</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableElement.SubfieldSpecify(DCSoft.Writer.Dom.TableSubfieldMode,System.Int32,System.Boolean)">
      <summary>方法SubfieldSpecify</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Alignment">
      <summary>属性Alignment</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AllowUserDeleteRow">
      <summary>属性AllowUserDeleteRow</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AllowUserInsertRow">
      <summary>属性AllowUserInsertRow</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AllowUserToResizeColumns">
      <summary>属性AllowUserToResizeColumns</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AllowUserToResizeEvenInFormViewMode">
      <summary>属性AllowUserToResizeEvenInFormViewMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.AllowUserToResizeRows">
      <summary>属性AllowUserToResizeRows</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Cells">
      <summary>属性Cells</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Columns">
      <summary>属性Columns</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Deleteable">
      <summary>属性Deleteable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ElementIndex">
      <summary>属性ElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.FirstCell">
      <summary>属性FirstCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.FirstContentElement">
      <summary>属性FirstContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Focused">
      <summary>属性Focused</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.HasSelection">
      <summary>属性HasSelection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.InnerXMLWithoutTrack">
      <summary>属性InnerXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.LastCell">
      <summary>属性LastCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.LastContentElement">
      <summary>属性LastContentElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.LastVisibleCell">
      <summary>属性LastVisibleCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.NeastLevel">
      <summary>属性NeastLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.NextElement">
      <summary>属性NextElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.NumOfColumns">
      <summary>属性NumOfColumns</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.NumOfRows">
      <summary>属性NumOfRows</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OuterXMLWithoutTrack">
      <summary>属性OuterXMLWithoutTrack</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerCell">
      <summary>属性OwnerCell</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerLine">
      <summary>属性OwnerLine</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerPagePartyStyle">
      <summary>属性OwnerPagePartyStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Rows">
      <summary>属性Rows</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.RowsCount">
      <summary>属性RowsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ShowCellNoneBorder">
      <summary>属性ShowCellNoneBorder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.SubfieldMode">
      <summary>属性SubfieldMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.SubfieldNumber">
      <summary>属性SubfieldNumber</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.TableWidth">
      <summary>属性TableWidth</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.VisibleExpression">
      <summary>属性VisibleExpression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextTableRowElement">
      <summary>XTextTableRowElement 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.BeginSetStyle">
      <summary>方法BeginSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.CanResign">
      <summary>方法CanResign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.ClearSign">
      <summary>方法ClearSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.Clone(System.Boolean)">
      <summary>方法Clone</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.CommitUserTrace">
      <summary>方法CommitUserTrace</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.CreateContentDocument(System.Boolean)">
      <summary>方法CreateContentDocument</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.DeleteAllSign">
      <summary>方法DeleteAllSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorClone">
      <summary>方法EditorClone</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorCloneSpecifyCloneType(DCSoft.Writer.Dom.TableRowCloneType)">
      <summary>方法EditorCloneSpecifyCloneType</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorDelete(System.Boolean)">
      <summary>方法EditorDelete</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorRefreshView">
      <summary>方法EditorRefreshView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>方法EditorSetContentStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>方法EditorSetContentStyleFast</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorSetVisible(System.Boolean)">
      <summary>方法EditorSetVisible</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>方法EditorSetVisibleExt</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.EndSetStyle">
      <summary>方法EndSetStyle</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.ExtGetPropertyValue(System.String)">
      <summary>方法ExtGetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>方法ExtSetPropertyValue</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.Focus">
      <summary>方法Focus</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.GetAllElements">
      <summary>方法GetAllElements</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.GetAllElementsWithoutCharElement">
      <summary>方法GetAllElementsWithoutCharElement</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.GetElementsByTypeName(System.String)">
      <summary>方法GetElementsByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.GetFirstElementByTypeName(System.String)">
      <summary>方法GetFirstElementByTypeName</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.HasAttribute(System.String)">
      <summary>方法HasAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.InvalidateView">
      <summary>方法InvalidateView</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.PBGetAttribute(System.String@)">
      <summary>方法PBGetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.PBSetAttribute(System.String@,System.String@)">
      <summary>方法PBSetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.ReSign">
      <summary>方法ReSign</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>方法ReSignSpecifyMode</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.Select">
      <summary>方法Select</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>方法SetContentLock</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.SetContentLockByCurrentUser">
      <summary>方法SetContentLockByCurrentUser</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IXTextTableRowElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>方法Sign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.AbsTop">
      <summary>属性AbsTop</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.AllowInsertRowDownUseHotKey">
      <summary>属性AllowInsertRowDownUseHotKey</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.AllowUserPressTabKeyToInsertRowDown">
      <summary>属性AllowUserPressTabKeyToInsertRowDown</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.AllowUserToResizeHeight">
      <summary>属性AllowUserToResizeHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Attributes">
      <summary>属性Attributes</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Cells">
      <summary>属性Cells</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.CloneMultipleBaseForBindingDataSource">
      <summary>属性CloneMultipleBaseForBindingDataSource</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.CloneType">
      <summary>属性CloneType</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ContentLock">
      <summary>属性ContentLock</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ContentReadonly">
      <summary>属性ContentReadonly</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.DataSourceRowSpan">
      <summary>属性DataSourceRowSpan</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ElementsCount">
      <summary>属性ElementsCount</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.EnableValueValidate">
      <summary>属性EnableValueValidate</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.EventTemplateName">
      <summary>属性EventTemplateName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ExpendForDataBinding">
      <summary>属性ExpendForDataBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.FirstChild">
      <summary>属性FirstChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.HeaderStyle">
      <summary>属性HeaderStyle</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Index">
      <summary>属性Index</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.InnerXML">
      <summary>属性InnerXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.LastChild">
      <summary>属性LastChild</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.MaxInputLength">
      <summary>属性MaxInputLength</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Modified">
      <summary>属性Modified</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.NewPage">
      <summary>属性NewPage</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OuterXML">
      <summary>属性OuterXML</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OwnerDocument">
      <summary>属性OwnerDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OwnerLastPageIndex">
      <summary>属性OwnerLastPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OwnerPageIndex">
      <summary>属性OwnerPageIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OwnerSection">
      <summary>属性OwnerSection</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.OwnerTable">
      <summary>属性OwnerTable</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Parent">
      <summary>属性Parent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.PreviousElement">
      <summary>属性PreviousElement</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.PrintCellBackground">
      <summary>属性PrintCellBackground</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.PrintCellBorder">
      <summary>属性PrintCellBorder</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.PrintVisibility">
      <summary>属性PrintVisibility</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.RowIndex">
      <summary>属性RowIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.SpecifyHeight">
      <summary>属性SpecifyHeight</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ToolTip">
      <summary>属性ToolTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.UserFlags">
      <summary>属性UserFlags</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.ValueBinding">
      <summary>属性ValueBinding</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Visible">
      <summary>属性Visible</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTableRowElement.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IXTextTextElement">
      <summary>XTextTextElement 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTextElement.Style">
      <summary>属性Style</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTextElement.StyleIndex">
      <summary>属性StyleIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTextElement.Text">
      <summary>属性Text</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IXTextTextElement.TypeName">
      <summary>属性TypeName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IEventExpressionInfo">
      <summary>EventExpressionInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfo.CustomTargetName">
      <summary>属性CustomTargetName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfo.EventName">
      <summary>属性EventName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfo.Expression">
      <summary>属性Expression</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfo.Target">
      <summary>属性Target</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfo.TargetPropertyName">
      <summary>属性TargetPropertyName</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IEventExpressionInfoList">
      <summary>EventExpressionInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IEventExpressionInfoList.Add(DCSoft.Writer.Expression.EventExpressionInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IEventExpressionInfoList.Clear">
      <summary>方法Clear</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IEventExpressionInfoList.Remove(DCSoft.Writer.Expression.EventExpressionInfo)">
      <summary>方法Remove</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IEventExpressionInfoList.RemoveAt(System.Int32)">
      <summary>方法RemoveAt</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IEventExpressionInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDCSignInputInfo">
      <summary>DCSignInputInfo 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDCSignInputInfo.GetAttribute(System.String)">
      <summary>方法GetAttribute</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IDCSignInputInfo.SetAttribute(System.String,System.String)">
      <summary>方法SetAttribute</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ClientName">
      <summary>属性ClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ElementID">
      <summary>属性ElementID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.Height">
      <summary>属性Height</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ImageData">
      <summary>属性ImageData</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ImageInFrontOfText">
      <summary>属性ImageInFrontOfText</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ImageTransparentColor">
      <summary>属性ImageTransparentColor</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.InsertSignImageAtCaret">
      <summary>属性InsertSignImageAtCaret</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.ProviderName">
      <summary>属性ProviderName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.RecordID">
      <summary>属性RecordID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.SpecifyInsertElementIndex">
      <summary>属性SpecifyInsertElementIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.Time">
      <summary>属性Time</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.UserID">
      <summary>属性UserID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.UserName">
      <summary>属性UserName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDCSignInputInfo.Width">
      <summary>属性Width</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IDocumentSecurityOptions">
      <summary>DocumentSecurityOptions 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.AutoEnablePermissionWhenUserLogin">
      <summary>属性AutoEnablePermissionWhenUserLogin</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.CAMode">
      <summary>属性CAMode</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.CanModifyDeleteSameLevelContent">
      <summary>属性CanModifyDeleteSameLevelContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.CAServerIP">
      <summary>属性CAServerIP</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.CAServerPort">
      <summary>属性CAServerPort</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.CreatorTipFormatString">
      <summary>属性CreatorTipFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.DeleterTipFormatString">
      <summary>属性DeleterTipFormatString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.EnableLogicDelete">
      <summary>属性EnableLogicDelete</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.EnablePermission">
      <summary>属性EnablePermission</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.PowerfulSignDocument">
      <summary>属性PowerfulSignDocument</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.RealDeleteOwnerContent">
      <summary>属性RealDeleteOwnerContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.ShowFlagForOnlySoftwareSign">
      <summary>属性ShowFlagForOnlySoftwareSign</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.ShowLogicDeletedContent">
      <summary>属性ShowLogicDeletedContent</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.ShowPermissionMark">
      <summary>属性ShowPermissionMark</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.ShowPermissionTip">
      <summary>属性ShowPermissionTip</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.TrackVisibleLevel0">
      <summary>属性TrackVisibleLevel0</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.TrackVisibleLevel1">
      <summary>属性TrackVisibleLevel1</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.TrackVisibleLevel2">
      <summary>属性TrackVisibleLevel2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IDocumentSecurityOptions.TrackVisibleLevel3">
      <summary>属性TrackVisibleLevel3</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IUserHistoryInfo">
      <summary>UserHistoryInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.ClientName">
      <summary>属性ClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.DisplaySavedTime">
      <summary>属性DisplaySavedTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.Index">
      <summary>属性Index</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.IsEmptySaveTime">
      <summary>属性IsEmptySaveTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.Name2">
      <summary>属性Name2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.PermissionLevel">
      <summary>属性PermissionLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.SavedTime">
      <summary>属性SavedTime</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.SaveTimeString">
      <summary>属性SaveTimeString</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfo.Tag">
      <summary>属性Tag</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IUserHistoryInfoList">
      <summary>UserHistoryInfoList 的COM接口</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserHistoryInfoList.Add(DCSoft.Writer.Security.UserHistoryInfo)">
      <summary>方法Add</summary>
    </member>
    <member name="M:DCSoft.ComInterfaces.IUserHistoryInfoList.ComGetItem(System.Int32)">
      <summary>方法ComGetItem</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfoList.Count">
      <summary>属性Count</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfoList.CurrentIndex">
      <summary>属性CurrentIndex</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfoList.CurrentInfo">
      <summary>属性CurrentInfo</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfoList.CurrentPermissionLevel">
      <summary>属性CurrentPermissionLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserHistoryInfoList.Item(System.Int32)">
      <summary>属性Item</summary>
    </member>
    <member name="T:DCSoft.ComInterfaces.IUserLoginInfo">
      <summary>UserLoginInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.ClientName">
      <summary>属性ClientName</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.Description">
      <summary>属性Description</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.ID">
      <summary>属性ID</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.Name">
      <summary>属性Name</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.Name2">
      <summary>属性Name2</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.PermissionLevel">
      <summary>属性PermissionLevel</summary>
    </member>
    <member name="P:DCSoft.ComInterfaces.IUserLoginInfo.Tag">
      <summary>属性Tag</summary>
    </member>
    <member name="T:DCSoft.Writer.AdornTextManager">
      <summary> 
            扩展文字管理器
            </summary>
      <remarks>袁永福到此一游</remarks>
    </member>
    <member name="F:DCSoft.Writer.AdornTextManager._Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.AdornTextManager.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.AdornTextManager.ResetState">
      <summary>
            重置状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.AdornTextManager.GetLastAdornTextBounds(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得最后一次绘制的扩展文本的边界
            </summary>
      <param name="element">文档元素</param>
      <returns>获得的边界</returns>
    </member>
    <member name="M:DCSoft.Writer.AdornTextManager.GetAdornTextInfo(DCSoft.Drawing.DCGraphics,DCSoft.Writer.Dom.XTextElement,System.Drawing.RectangleF,System.String)">
      <summary>
            获得扩展标记文字边界
            </summary>
      <param name="g">画布对象</param>
      <param name="element">文档元素对象</param>
      <param name="pageClipBounds">页面边界对象</param>
      <param name="txt">文本</param>
      <returns>获得的标记文字边界</returns>
    </member>
    <member name="P:DCSoft.Writer.AdornTextManager.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.AdornTextManager.Font">
      <summary>
            绘制文字使用的字体
            </summary>
    </member>
    <member name="T:DCSoft.Writer.AppErrorHandleModeConsts">
      <summary>
            应用程序错误处理模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.AppErrorHandleModeConsts.None">
      <summary>
            不做处理
            </summary>
    </member>
    <member name="F:DCSoft.Writer.AppErrorHandleModeConsts.ThrowException">
      <summary>
            抛出异常
            </summary>
    </member>
    <member name="F:DCSoft.Writer.AppErrorHandleModeConsts.Ignore">
      <summary>
            忽略错误。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.AppErrorHandleModeConsts.ShowMessge">
      <summary>
            显示消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.AppErrorHandleModeConsts.ShowDetailMessage">
      <summary>
            显示详细信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.AppErrorInfo">
      <summary>
            应用程序错误信息 
            </summary>
    </member>
    <member name="T:DCSoft.Writer.CanInsertObjectEventHandler">
      <summary>
            判断能否插入对象事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.CanInsertObjectEventArgs">
      <summary>
            判断能否插入对象事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.CanInsertObjectEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.CanInsertObjectEventArgs.GetFormats">
      <summary>
            获得所有可用的数据格式名称
            </summary>
      <returns>数据格式名称数组</returns>
    </member>
    <member name="M:DCSoft.Writer.CanInsertObjectEventArgs.GetData(System.String)">
      <summary>
            获得指定格式的数据
            </summary>
      <param name="format">数据格式</param>
      <returns>获得的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.CanInsertObjectEventArgs.GetDataPresent(System.String)">
      <summary>
            判断是否包含指定格式的数据
            </summary>
      <param name="format">数据格式</param>
      <returns>是否存在</returns>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.DocumentControler">
      <summary>
            文档控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.AllowDataFormats">
      <summary>
            允许接收的数据格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.ContainerElement">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.Position">
      <summary>
            插入的位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.Services">
      <summary>
            服务对象容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.SpecifyPosition">
      <summary>
            文档中指定的位置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.DataObject">
      <summary>
            要插入的数据对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.SpecifyFormat">
      <summary>
            用户指定的数据格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.AccessFlags">
      <summary>
            访问标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.Handled">
      <summary>
            事件已经被处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CanInsertObjectEventArgs.Result">
      <summary>
            判断结果,true为可以插入对象数据；false不可插入对象数据。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.CharacterCounter">
      <summary>
            字符出现次数累积器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CharacterCounter.CharInfo.TotalSampleSize">
      <summary>
            总的样本数量
            </summary>
    </member>
    <member name="T:DCSoft.Writer.CharacterCounter.CharFlag">
      <summary>
            特定标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CharacterCounter.HeaderFlags">
      <summary>
            文件头标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CharacterCounter.CurrentVersion">
      <summary>
            当前版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CharacterCounter.DefaultFileName">
      <summary>
            默认的本地数据文件名
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CharacterCounter._TotalSampleSize">
      <summary>
            总的样本数量
            </summary>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.SaveFile(System.String)">
      <summary>
            保存到文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.Save(System.IO.Stream)">
      <summary>
            保存到数据流
            </summary>
      <param name="stream">流对象</param>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.CheckReadDefaultFile">
      <summary>
            检查是否加载了默认的数据文件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.ReadFile(System.String)">
      <summary>
            读取文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.Read(System.IO.Stream)">
      <summary>
            读取数据流
            </summary>
      <param name="stream">数据流对象</param>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.IsPunctuation(System.Char)">
      <summary>
            判断是否为标点符号字符
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.GetRate(System.Char,System.Char)">
      <summary>
            获得字符出现概率
            </summary>
      <param name="c1">字符</param>
      <param name="nextChar">后续字符</param>
      <returns>后续字符出现的概率</returns>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.GetMinRate">
      <summary>
            获得最小出现概率的
            </summary>
      <returns>概率值</returns>
    </member>
    <member name="M:DCSoft.Writer.CharacterCounter.Clear(System.Boolean)">
      <summary>
            清空所有的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CharacterCounter.Enabled">
      <summary>
            是否启用本功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CharacterCounter.InnerEnabled">
      <summary>
            内部的是否启用本功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CharacterCounter.Modified">
      <summary>
            对象数据是否修改了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.CharacterCounter.HasReadDataFile">
      <summary>
            判断是否读取了数据文件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentBuilder">
      <summary>
            文档内容创建者
            </summary>
      <remarks>编制 袁永福 2012-8-23</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.#ctor(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            初始化对象
            </summary>
      <param name="container">容器对象</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.Clear">
      <summary>
            清空内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.RawClear">
      <summary>
            底层的清空内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.SetParagraphStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            设置当前段落样式
            </summary>
      <param name="style">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendTextWithStyle(System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加文本内容
            </summary>
      <param name="text">文本内容</param>
      <param name="style">样式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendTextWithStyle2(System.String,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加文本内容
            </summary>
      <param name="text">文本内容</param>
      <param name="paragraphStyle">段落样式</param>
      <param name="textStyle">文本样式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertTextWithStyle(System.Int32,System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            插入文本内容
            </summary>
      <param name="index">序号</param>
      <param name="text">文本内容</param>
      <param name="style">样式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendTextWithStyleString(System.String,System.String)">
      <summary>
            添加文本内容
            </summary>
      <param name="text">文本内容</param>
      <param name="styleString">表示样式的字符串</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertTextWithStyleString(System.Int32,System.String,System.String)">
      <summary>
            添加文本内容
            </summary>
      <param name="index">要插入的位置序号</param>
      <param name="text">文本内容</param>
      <param name="styleString">样式字符串</param>
      <returns>操作生成的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendText(System.String)">
      <summary>
            使用默认样式添加文本内容
            </summary>
      <param name="text">文本内容</param>
      <returns>产生的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertText(System.Int32,System.String)">
      <summary>
            使用默认样式插入文本内容
            </summary>
      <param name="index">插入的文本</param>
      <param name="text">文本内容</param>
      <returns>产生的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendParagraphFlagWithStyleString(System.String)">
      <summary>
            添加段落符号
            </summary>
      <param name="styleString">段落样式</param>
      <returns>生成的段落符号元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertParagraphFlagWithStyleString(System.Int32,System.String)">
      <summary>
            插入段落符号
            </summary>
      <param name="index">序号</param>
      <param name="styleString">段落样式</param>
      <returns>生成的段落符号元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendParagraphFlagWithStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加段落
            </summary>
      <param name="style">段落样式</param>
      <returns>新增的段落标记元素</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertParagraphFlagWithStyle(System.Int32,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加段落
            </summary>
      <param name="index">序号</param>
      <param name="style">段落样式</param>
      <returns>新增的段落标记元素</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendParagraphFlag">
      <summary>
            添加段落符号
            </summary>
      <returns>创建的段落符号</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertParagraphFlag(System.Int32)">
      <summary>
            添加段落符号
            </summary>
      <returns>创建的段落符号</returns>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.Append(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加文档元素
            </summary>
      <param name="element">要添加的内容</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.Insert(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            插入文档元素
            </summary>
      <param name="index">序号</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendWithStyle(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加文档元素
            </summary>
      <param name="element">要添加的内容</param>
      <param name="style">新文档元素的样式</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertWithStyle(System.Int32,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加文档元素
            </summary>
      <param name="index">序号</param>
      <param name="element">要添加的内容</param>
      <param name="style">新文档元素的样式</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendRange(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            添加多个文档元素
            </summary>
      <param name="elements">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertRange(System.Int32,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            插入多个文档元素
            </summary>
      <param name="index">插入的位置</param>
      <param name="elements">文档元素对象列表</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendRangeWithStyle(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加多个文档元素
            </summary>
      <param name="elements">文档元素对象</param>
      <param name="style">元素的样式</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertRangeWithStyle(System.Int32,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            添加多个文档元素
            </summary>
      <param name="index">序号</param>
      <param name="elements">文档元素对象</param>
      <param name="style">样式</param>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendDocumentContentByBase64String(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            追加其他文档的正文内容
            </summary>
      <param name="base64String">BASE64格式的字符串</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendDocumentContentByStream(System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            追加其他文档的正文内容
            </summary>
      <param name="stream">文件流</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendDocumentContentByFileName(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            追加其他文档的正文内容
            </summary>
      <param name="fileName">文件名</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendDocumentContent(DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            追加其他文档的正文内容，本操作会破坏作为参数的文档对象的内容
            </summary>
      <param name="document">文档对象</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.AppendDocumentContentByString(System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容
            </summary>
      <param name="index">要插入的序号</param>
      <param name="text">文档内容</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertDocumentContentByBase64String(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容
            </summary>
      <param name="index">要插入的序号</param>
      <param name="base64String">BASE64格式的字符串</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertDocumentContentByString(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容
            </summary>
      <param name="index">要插入的序号</param>
      <param name="text">文档内容</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertDocumentContentByStream(System.Int32,System.IO.Stream,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容
            </summary>
      <param name="index">要插入的序号</param>
      <param name="stream">文件流</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertDocumentContentByFileName(System.Int32,System.String,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容
            </summary>
      <param name="index">要插入的位置</param>
      <param name="fileName">文件名</param>
      <param name="fileFormat">文件格式</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentBuilder.InsertDocumentContent(System.Int32,DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            插入其他文档的正文内容，本操作会破坏作为参数的文档对象的内容
            </summary>
      <param name="index">要插入的区域的序号</param>
      <param name="document">文档对象</param>
      <param name="removeLogicDeletedContent">删除被标记为逻辑删除的内容</param>
      <param name="clearUserTrack">清除用户痕迹</param>
      <param name="removeComments">清除批注</param>
      <param name="deleteRedundant">是否删除末尾的空白内容</param>
      <remarks>导入的文档元素个数</remarks>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.Container">
      <summary>
            容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.ContentStyle">
      <summary>
            文档内容样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.ParagraphStyle">
      <summary>
            段落样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.EnableAddPermissionFlag">
      <summary>
            新增的文档内容添加授权标志信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentBuilder.AppendRawMode">
      <summary>
            原生态添加模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentChangedEventArgs">
      <summary>
            文档内容发生改变事件参数
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentChangedEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ContentChangedEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ContentChangedEventSource)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="src">事件来源</param>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.EventSource">
      <summary>
            事件来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.OnlyStyleChanged">
      <summary>
            只是样式发生了改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.UndoRedoCause">
      <summary>
            由于进行重做/撤销操作而引发了该事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.LoadingDocument">
      <summary>
            正在加载文档标志
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.Tag">
      <summary>
            额外的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.Element">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.ElementIndex">
      <summary>
            发生操作时的元素位置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.DeletedElements">
      <summary>
            正要删除的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.InsertedElements">
      <summary>
            准备新增的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.CancelBubble">
      <summary>
            取消事件向上层元素冒泡传递
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangedEventArgs.Handled">
      <summary>
            事件已经被处理了，无需后续处理
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentChangingEventArgs">
      <summary>
            文档内容正在发生改变事件参数
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.ContentChangingEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ContentChangingEventArgs.GetContainerNewText">
      <summary>
            获得操作完成后容器元素的预计文本内容
            </summary>
      <returns>预计的文本</returns>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.Element">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.Tag">
      <summary>
            额外的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.ElementIndex">
      <summary>
            发生操作时的元素位置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.DeletingElements">
      <summary>
            正要删除的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.InsertingElements">
      <summary>
            准备新增的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.CancelBubble">
      <summary>
            取消事件向上层元素冒泡传递
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ContentChangingEventArgs.Handled">
      <summary>
            事件已经被处理掉了，无需后续处理
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCStdImageList">
      <summary>
            标准图标图片对象列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.DCStdImageList.InnerGetAllImages">
      <summary>
            获得所有的图片对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.DCStdImageList.SetBitmapByBase64String(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>
            根据BASE64字符串加载图标
            </summary>
      <param name="key">关键字</param>
      <param name="base64String">包含图标内容的BASE64字符串</param>
    </member>
    <member name="M:DCSoft.Writer.DCStdImageList.SetBitmapByFileName(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>
            根据文件名设置图标
            </summary>
      <param name="key">关键字</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.DCStdImageList.SetBitmape(DCSoft.Writer.DCStdImageKey,System.Drawing.Bitmap)">
      <summary>
            设置图片
            </summary>
      <param name="key">关键字</param>
      <param name="bmp">图片对象</param>
    </member>
    <member name="M:DCSoft.Writer.DCStdImageList.GetBitmap(DCSoft.Writer.DCStdImageKey)">
      <summary>
            获得图标对象
            </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.Instance">
      <summary>
            对象唯一静态实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.TransparentColor">
      <summary>
            透明色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpSystemCheckBoxChecked">
      <summary>
            操作系统使用的勾选状态的复选框。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpSystemCheckBoxUnchecked">
      <summary>
            操作系统使用的勾选状态的复选框。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpSystemRadioBoxChecked">
      <summary>
            操作系统使用的勾选状态的复选框。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpSystemRadioBoxUnchecked">
      <summary>
            操作系统使用的勾选状态的复选框。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpCheckBoxChecked">
      <summary>
            勾选状态的复选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpCheckBoxUnchecked">
      <summary>
            不是勾选状态的复选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpRadioBoxChecked">
      <summary>
            勾选状态的单选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpRadioBoxUnchecked">
      <summary>
            不是勾选状态的单选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpParagraphFlagLeftToRight">
      <summary>
            从左到右时的段落符号，必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpParagraphFlagRightToLeft">
      <summary>
            从右到左时的段落符号,必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpLinebreak">
      <summary>
            换行符号,必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpDragHandle">
      <summary>
            拖拽内容使用的把柄,必须为13*13的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpCollapse">
      <summary>
            收缩内容的图标,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.BmpExpand">
      <summary>
            展开内容的图标,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCStdImageList.TransparentColorValue">
      <summary>
            透明色值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentBehaviorOptions">
      <summary>
            文档行为设置
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.DocumentBehaviorOptions._LicenseServicePageUrl">
      <summary>
            授权服务器页面地址.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentBehaviorOptions._AutoUppercaseFirstCharInFirstLine">
      <summary>
            自动首行字母大写
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentBehaviorOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentBehaviorOptions.GetLogFileDirectoryForCatchError">
      <summary>
            获得捕获错误的日志文件输出目录
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentBehaviorOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ExecuteValueExpressionWhenLoadDocument">
      <summary>
            加载文档的时候是否执行数值表达式，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DocumentTextOutputMode">
      <summary>
            文档文本输出选项,本选项影响XTextDocument.Text属性的返回值和以TXT格式保存的文件内容。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ResetTextFormatWhenCreateNewLine">
      <summary>
            创建新行时是否重置文本样式（设置字体为默认字体，去除边框和颜色）。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SelectionTextIncludeBackgroundText">
      <summary>
            选择区域的文本是否包含输入域背景文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.IgnoreTopBottomPaddingWhenGridLineLayout">
      <summary>
            在使用文档网格线排版时忽略掉容器元素的上下内边距设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SaveBodyTextToXml">
      <summary>
            保存文档对象的BodyText到XML文件中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.LogFileDirectoryForCatchError">
      <summary>
            捕获错误的日志文件输出目录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableLicenseDog">
      <summary>
            是否检测硬件授权加密狗。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnabledCache100KBImageData">
      <summary>
             是否缓存单个文件不超过100KB大小的图片数据,如果缓存，能加快一些图片对象的加载速度。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.IgnoreDataBindingWhenMissValue">
      <summary>
            数据源数值为空时是否忽略关联的数据源绑定操作。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.WordBreak">
      <summary>
            单词断开模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ForceRaiseEventAfterFieldContentEdit">
      <summary>
            在弹出输入域下拉列表时，用户确认操作，即使没有修改输入域的内容，仍然强制触发编辑器控件的EventAfterFieldContentEdit事件。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.LicenseServicePageUrl">
      <summary>
            授权服务器页面地址.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnabledLicenseHardwareDog">
      <summary>
            是否启用注册码硬件加密狗。默认为true。检测硬件加密狗是一个有点耗时的工作，为了提高性能，在确认不使用硬件加密狗时可以设置本属性为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SetParagraphFlagHeightUsePreElement">
      <summary>
            根据紧靠前面的元素设置段落符号元素的高度，默认为true。这是一个保持排版结果兼容性的设置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ParseCrLfAsLineBreakElement">
      <summary>
            将字符串中的CrLf字符解释为LineBreakElement元素，否则解释成ParagraphFlag元素。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.UseNewValueExpressionEngine">
      <summary>
            使用新的数值表达式引擎
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoClearInvalidateCharacter">
      <summary>
            加载文件的时候是否自动将Ascii码小于等于8的字符转换为空格。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ShowNoLicenseFunctionRisk">
      <summary>
            是否显示功能无授权风险提示,默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableAIForSuspiciousContent">
      <summary>
            启动判断可疑文本的AI功能。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EncodingCodePageForWriteRTF">
      <summary>
            输出RTF文档时使用的文本编码格式,默认是936（GB2312简体中文）
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoSaveScriptAssemblyToTempFile">
      <summary>
            自动保存脚本引擎生成的程序集内容到临时文件中。默认true。
            </summary>
      <remarks>
            当文档中嵌入VBA/JScript脚本时，编辑器加载文档会动态编译脚本内容。此时会导致文档加载缓慢。
            而启用该选项时，编辑器会将动态编辑脚本生成的临时程序集内容保存到本地的临时目录下，下次
            首先试图从临时文件中加载脚本程序集内容而避免动态编译，优化编辑器打开文档的性能。
            这个临时文件目录一般为C:\Users\[username]\AppData\Local\Temp\DCSoftScriptAssemblyBuffer.
            而且是保存最近5天生成的临时文件，5天前生成的临时文件会自动删除。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnabledShowWinTaskBarProgress">
      <summary>
            是否启用Windows状态栏等待信息。默认false。
            </summary>
      <remarks>
            当启用该选项时，对于Windows7或者更高版本的系统，当编辑器加载较大的文档时，会在Windows
            状态栏中设置表示等待操作的动画效果。提示用户系统正在操作。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CompressXMLContent">
      <summary>
            压缩XML内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SpeedupByMultiThread">
      <summary>
            使用多线程来提速。默认为true。
            </summary>
      <remarks>
            若设置该选项，当文档中含有大型表格时将启用多线程来加速表格内容的排版。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.LocalAutoSaveWorkDirectory">
      <summary>
            本地的自动保存用的工作目录，如果为空则不启用本地自动保存，如果不为空，则该目录会自动创建
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.NewExpressionExecuteMode">
      <summary>
            新的表达式运行模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoFocusWhenOpenDocument">
      <summary>
            在打开文档时编辑器自动获取输入焦点，默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.LockScrollPositionWhenStrictFormViewMode">
      <summary>
            在严格表单视图模式下锁定滚动位置。默认为false，也就是允许滚动视图。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CheckedValueBindingHandledForTableRow">
      <summary>
            在对表格行绑定数据源的时候检查ValueBinding.Handled值，也就是判断表格行是否已经绑定过了数据源。
            如果检查了已经绑定过了数据源则不处理该表格行。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableContentChangedEventWhenLoadDocument">
      <summary>
            在加载文档时是否允许触发ContentChanged事件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableCollapseSection">
      <summary>
            文档节能否被收缩
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MaxTextLengthForPaste">
      <summary>
            粘贴操作中的最大文本长度的限制。若大于0则要粘帖的文本长度超过该值则禁止操作；为负数表示部分粘帖；等于0表示无限制。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.OutputFieldBorderTextToContentText">
      <summary>
            是否将输入域的边界文本输出到内容文本中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoShowScriptErrorMessage">
      <summary>
            自动显示每个脚本错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoClearTextFormatWhenPasteOrInsertContent">
      <summary>
            在粘贴或插入对象时自动清除文件格式，设置为插入点所在的当前格式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoDocumentValueValidate">
      <summary>
            加载文档时自动进行文档内容校验。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoSaveIntervalInSecond">
      <summary>
            自动保存时间隔的秒数。如果小于等于0则不自动保存。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableContentLock">
      <summary>
            是否启用文档内容锁定机制
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MinCountForDropdownListSpellCodeArea">
      <summary>
            显示下拉列表中拼音码区域的最小项目个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoFixElementIDWhenInsertElements">
      <summary>
            插入文档元素时自动修正文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MaxZoomRate">
      <summary>
            最大视图缩放比率。默认为5。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MinZoomRate">
      <summary>
            最小视图缩放比率。默认为0.2。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.RemoveLastParagraphFlagWhenInsertDocument">
      <summary>
            在插入文档时删除要插入的文档的最后一个段落符号。默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MoveCaretWhenDeleteFail">
      <summary>
            删除内容失败后仍然移动光标。默认true。
            </summary>
      <remarks>
            若设置本属性值为true，则使用Delete键删除内容失败后光标往后移动一位。
            使用Backspace键删除失败后光标往前移动一位。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DoubleCompressHtmlWhitespace">
      <summary>
            输入输出HTML文档时双倍压缩空格字符.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AllowDeleteJumpOutOfField">
      <summary>
            允许跳出输入域来删除内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ContinueHeaderParagrahStyle">
      <summary>
            敲回车键新建段落时是否延续标题头段落样式，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ActiveCheckInstallWindowsMediaPlayer">
      <summary>
            主动检测是否安装了Windows Media Player组件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableChineseFontSizeName">
      <summary>
            是否使用中文字体大小名称
            </summary>
      <remarks>
            如果设置为false，则字体下拉列表中不会出现"三号、小三、四号、小四"之类的中文字体名称。
            本属性必须在创建控件对象实例后立即设置，否则无效。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MaximizedPrintPreviewDialog">
      <summary>
            最大化显示打印预览对话框
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.RaiseQueryListItemsWhenUserEditText">
      <summary>
            用户编辑器文本或者执行数据源绑定时是否触发QueryListItems事件，默认值为false。
            </summary>
      <remarks>
            当启用QueryListItems事件查询下拉列表的列表项目时，当用户直接
            编辑输入域的文本值，若本属性值为true，则触发QueryListItems事件
            来获得列表项目，根据用户输入的文本值来进行列表内容匹配，获得设置
            输入域元素的InnerValue值。
            <br />如果本属性值为false，则用户直接编辑输入域的内容或者执行数据源绑定时则不会触发QueryListItems事件。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AppErrorHandleMode">
      <summary>
            应用程序错误处理模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.XMLContentEncodingName">
      <summary>
            输出的XML内容的编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoAssistInsertString">
      <summary>
            自动启用辅助输入字符串功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoAssistInsertStringDetectTextLength">
      <summary>
            启用自动辅助输入文本时的检测长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoTranslateSourceString">
      <summary>
            自动转换功能中的原始字符组成的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoTranslateDescString">
      <summary>
            自动转换功能中的目标字符组成的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoScrollToCaretWhenGotFocus">
      <summary>
            当控件获得焦点时自动滚动到光标处
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键。该属性在WinForm版和WEB版中有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnabledElementEvent">
      <summary>
            是否允许触发文档元素级事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ShowTooltip">
      <summary>
            是否显示提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DoubleClickToEditComment">
      <summary>
            鼠标双击来编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DataObjectRange">
      <summary>
            数据对象应用范围
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CommentEditableWhenReadonly">
      <summary>
            即使在只读状态下是否能编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CommentVisibility">
      <summary>
            是否显示文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AllowDragContent">
      <summary>
            能否直接拖拽文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AcceptDataFormats">
      <summary>
            编辑器控件能接受的数据格式，包括粘贴操作和OLE拖拽操作获得的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CreationDataFormats">
      <summary>
            编辑器控件能创建的数据格式，这些数据将用于复制操作和OLE拖拽操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.FormView">
      <summary>
            表单视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PreserveClipbardDataWhenExit">
      <summary>
            退出应用程序后保留系统剪切板中的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.FastInputMode">
      <summary>
            快速录入模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CompressLayoutForFieldBorder">
      <summary>
            对于输入域边框元素采用紧凑排版
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SmoothScrollView">
      <summary>
            是否启用平滑滚动效果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoActiveSystemTaskbarBeforeShowDialog">
      <summary>
            在显示对话框前自动激活系统任务条
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableCalculateControl">
      <summary>
            是否允许使用计算器控件(数字小键盘)
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableEditElementValue">
      <summary>
            是否允许编辑文档元素内容值操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.TitleForToolTip">
      <summary>
            提示信息的标题文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoUppercaseFirstCharInFirstLine">
      <summary>
            自动首行字母大写
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoRefreshUserTrackInfos">
      <summary>
            自动刷新用户痕迹信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ValidateIDRepeatMode">
      <summary>
            ID重复性校验模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.IgnorePrintableAreaOffset">
      <summary>
            打印时忽略掉可打印区域偏移量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PageLineUnderPageBreak">
      <summary>
            分页线在分页符的下面,如果为true，则分页线在分页符的上面,也就是分页符在上一页的最下面。本属性默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ParagraphFlagFollowTableOrSection">
      <summary>
            排版时段落符号紧跟在表格或文档节后面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.NotificationWorkingTimeout">
      <summary>
            通知系统忙状态的超时时间，单位毫秒
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.HandleCommandException">
      <summary>
            是否处理编辑器命令过程的异常
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.GeneratePageContentVersion">
      <summary>
            生成页面内容版本号
            </summary>
      <remarks>
            生成页面内容版本号是个比较耗时的操作，非必要不要启用改选项。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DisplayFormatToInnerValue">
      <summary>
            是否对输入域的InnerValue启用DisplayFormat设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoUpdateButtonVisible">
      <summary>
            自动更新绑定了命令的按钮等UI元素的可见性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.StdLablesForImageEditor">
      <summary>
            图片编辑器中使用的标准文本标签列表，各个项目中间用半角逗号分开。
            </summary>
      <remarks>
            比如"左眼,右眼,左手,右手,可以切,必须切,袁永福到此一游"。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableCheckControlLoaded">
      <summary>
            执行编辑器命令前是否检查控件已经加载
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableDeleteReadonlyEmptyContainer">
      <summary>
            能否删除内容空白而且只读的容器元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SimpleElementProperties">
      <summary>
            简洁的编辑元素属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableHyperLink">
      <summary>
            允许使用超链接
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MinImageFileSizeForConfirmCompressSaveMode">
      <summary>
            提示压缩存储图片数据的图片文件最小大小，如果为0表示不进行判断，不压缩存储图片数据。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ImageCompressSaveMode">
      <summary>
            插入的图片的压缩存储模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.FillCommentToUserTrackList">
      <summary>
            将文档批注添加到用户痕迹列表中
            </summary>
      <remarks>
            本选项默认为false，如果为true，则文档中的批注将作为痕迹信息显示的用户痕迹列表中。也就是
            编辑器控件WriterControl.UserTrackInfos列表中。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PromptJumpBackForSearch">
      <summary>
            是否提示跳回去继续搜索文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableSetJumpPrintPositionWhenPreview">
      <summary>
            允许在打印预览的时候设置续打位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ExtendingPrintDialog">
      <summary>
            是否扩展打印机设置对话框
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ImageShapeEditorBackgroundMenuItemConfig">
      <summary>
            图片编辑器的背景菜单项目配置
            </summary>
      <remarks>
            默认的配置为“空白=Disabled;触觉减退=BackImage1;触觉消失=BackImage2;触觉过敏或异常=BackImage3;痛觉减退=BackImage4;痛觉消失=BackImage5;痛觉过敏或异常=BackImage6;震动觉减退或异常=BackImage7;位置觉减退或消失=BackImage8;浅感觉全部消失=BackImage9;深浅感觉全部消失=BackImage10;I度=BackImage11;II度=BackImage12;深II度=BackImage13;III三度=Black;vvv=GradientForwardDiagonal”。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.MoveFieldWhenDragWholeContent">
      <summary>
            拖拽所有内容时移动整个输入域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableLogUndo">
      <summary>
            是否记录撤销操作信息
            </summary>
      <remarks>
            如果为false，则系统不记录文档操作的信息，用户操作就不能撤销或重做。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ShowDebugMessage">
      <summary>
            显示内部调试消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableCompressUserHistories">
      <summary>
            是否启用压缩用户历史修改记录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableElementEvents">
      <summary>
            是否启用文档元素事件,本属性等价于 EnabledElementEvent。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CloneSerialize">
      <summary>
            复制序列化模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.WeakMode">
      <summary>
            脆弱模式，默认为false。
            </summary>
      <remarks>
            当处于脆弱模式时，DCWriter中很多系统异常不经处理而直接抛出，这有利于暴露出错误的根源。但会造成系统不稳定。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ForceCollateWhenPrint">
      <summary>
            打印的时候强制自动分页，默认为false。
            </summary>
      <remarks>
            .NET框架的一个BUG，导致有时打印多份的时候无法自动分页，此处强制设置自动分页。
            而不管在打印机设置中是否使用自动分页。这是在没有修正系统BUG时的临时扑救措施。
            该系统BUG说明可见http://support.microsoft.com/kb/2744968。不建议设置该属性。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ThreeClickToSelectParagraph">
      <summary>
            鼠标连续三击选中段落，默认为true.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DoubleClickToSelectWord">
      <summary>
            双击选中文字,默认为true.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableKBEntryRangeMask">
      <summary>
            启用知识库节点范围掩码,默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PromptForExcludeSystemClipboardRange">
      <summary>
            遇到未包含系统剪切板时进行提示
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PromptForRejectFormat">
      <summary>
            遇到拒绝的数据格式进行提示
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoIgnoreLastEmptyPage">
      <summary>
            打印和打印预览时自动忽略掉最后一个空白页
            </summary>
      <remarks>
            在少数情况下，最后一页只有一个段落符号，可以认为最后一页就没有任何实际内容。
            本选项来让编辑器打印的时候自动忽略掉最后一页。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ValidateUserIDWhenEditDeleteComment">
      <summary>
            在编辑和删除文档批注时是否检查当前用户ID是否等于批注的创建者ID
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.InsertCommentBindingUserTrack">
      <summary>
            插入文档批注时是否设置用户痕迹，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PowerfulCommentCommand">
      <summary>
            批注编辑操作是否是强大的。如果是强大的则不受授权控制及内容保护的限制。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.StaticAutoCreateInstanceInProperty">
      <summary>
            静态的设置在属性中自动创建变量对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.AutoCreateInstanceInProperty">
      <summary>
            在属性中自动创建变量对象实例，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.GlobalSpecifyDebugMode">
      <summary>
            全局性的特别调试模式，内部使用，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.GlobalSpecifyDebugModeValue">
      <summary>
            全局性的特别调试模式值，内部使用，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.SpecifyDebugMode">
      <summary>
            特别的调试模式，内部使用，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableDataBinding">
      <summary>
            是否启用数据源绑定，如果为false，则编辑器不执行数据源绑定。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ForcePopupFormTopMost">
      <summary>
            强制弹出式数据输入框为TopMost模式，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.OutputFormatedXMLSource">
      <summary>
            是否输出格式化的XML文本，默认为true。
            </summary>
      <remarks>格式化的XML文本带有缩进控制，阅读方便，但文档比较大。</remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.TableCellOperationDetectDistance">
      <summary>
            表格单元格操作检测时使用的距离长度，单位为屏幕像素，默认为3。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.WidelyRaiseFocusEvent">
      <summary>
            宽范围的触发焦点事件,都昌内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.ExcludeKeywords">
      <summary>
            全文违禁关键字列表，可包含多个违禁关键字，各个关键字之间用半角逗号分开。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.InsertDocumentWithCheckMRID">
      <summary>
            插入文档内容时MRID值的检测模式。默认为None。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DisableCheckMRIDWhenMRIDIsEmptyForOuterDataObject">
      <summary>
            在获得外部数据源时如果MRID为空则不检查MRID设置。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CustomWarringCheckMRID">
      <summary>
            自定义的检查病历编号不通过的警告提示信息，可以设置为“警告：当前文档关联的编号为“{0}”，而要粘贴的内容关联的编号为“{1}”，根据规范，不建议执行本次操作，是否继续？”。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.CustomPromptForbitCheckMRID">
      <summary>
            自定义的检查病历编号不通过的禁止提示信息，可以设置为“警告：当前文档关联的编号为“{0}”，而要粘贴的内容关联的编号为“{1}”，根据规范，禁止执行本次操作。”
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DesignMode">
      <summary>
            编辑器是否处于设计模式。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableControlHostAtDesignTime">
      <summary>
            编辑器在设计模式下仍然允许承载控件，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DebugMode">
      <summary>
            系统是否处于调试模式。若为true，则系统处于调试模式，系统会输出一些调试文本信息。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableCopySource">
      <summary>
            允许执行内容复制,默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableExpression">
      <summary>
            是否允许表达式。如果为false，则系统不执行表达式，级联模板功能也无法运行。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.Printable">
      <summary>
            文档能否打印。若为false则文档不能打印。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.OutputBackgroundTextToRTF">
      <summary>
            在导出RTF文档时是否导出文本输入域的背景文本。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.EnableScript">
      <summary>
            允许VBA宏脚本。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.DefaultEditorActiveMode">
      <summary>
            默认的数值编辑器激活模式，默认为None。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentBehaviorOptions.PromptProtectedContent">
      <summary>
            当视图删除无法删除的内容时的提示方式，默认为Details。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentEditOptions">
      <summary>
            编辑器选项控制
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.DocumentEditOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentEditOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.CopyWithoutInputFieldStructure">
      <summary>
            复制时去掉输入域层次结构
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.CopyInTextFormatOnly">
      <summary>
            仅仅采用纯文本格式复制内容,若为true，则只复制纯文本内容，而且忽略掉控件的CreationDataFormats属性设置.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.CloneWithoutElementBorderStyle">
      <summary>
            复制文档时清掉文档元素的边框样式，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.CloneWithoutLogicDeletedContent">
      <summary>
            复制文档的时候不复制已经被逻辑删除的内容，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.GridLinePreviewText">
      <summary>
            预览内容网格线功能时使用的预览文字。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.ClearFieldValueWhenCopy">
      <summary>
            在复制内容时清空输入域的内容，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.KeepTableWidthWhenInsertDeleteColumn">
      <summary>
            在插入和删除表格列时是否保持表格的总宽度不变。默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.FixSizeWhenInsertImage">
      <summary>
            在插入图片时自动修正图片的宽度，使得图片元素的宽度不会超过容器客户区宽度，而且高度不超过标准页高。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.FixWidthWhenInsertImage">
      <summary>
            在插入图片时为容器元素修正图片的宽度，使得图片元素的宽度不会超过容器客户区宽度。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.FixWidthWhenInsertTable">
      <summary>
            在插入表格时为容器元素修正表格的宽度，使得表格元素的宽度不会超过容器客户区宽度，默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.TabKeyToFirstLineIndent">
      <summary>
            是否使用Tab键来设置段落首行缩进，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.AutoInsertTableRowWhenMoveToNextCell">
      <summary>
            在移动到下一个单元格时根据需要自动插入表格行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.TabKeyToInsertTableRow">
      <summary>
            是否允许在表格中最后一个单元格中使用Tab键来新增表格行，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentEditOptions.ValueValidateMode">
      <summary>
            文档数据校验模式，默认为LostFocus。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentNavigator">
      <summary>
            文档导航者
            </summary>
      <remarks>袁永福到此一游</remarks>
    </member>
    <member name="M:DCSoft.Writer.DocumentNavigator.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentNavigator.GetNodeString">
      <summary>
            获得节点字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentNavigator.GetNodeByID(System.String)">
      <summary>
            获得指定编号的节点对象
            </summary>
      <param name="id">节点编号</param>
      <returns>节点对象</returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentNavigator.Refresh">
      <summary>
            刷新导航信息结构
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentNavigator.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentNavigator.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentNavigator.Nodes">
      <summary>
            根节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentNavigator.CurrentNode">
      <summary>
            根据文档当前插入点的位置获得导航节点对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentOptions">
      <summary>
            文档选项对象
            </summary>
      <remarks>
            编写 袁永福
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.SetWriterControl(DCSoft.Writer.Controls.WriterViewControl)">
      <summary>
            设置对象所属的编辑器控件
            </summary>
      <param name="ctl">
      </param>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.SaveState">
      <summary>
            保存对象状态。
            </summary>
      <remarks>
            有时程序完成一个操作时需要临时修改文档选项，操作完毕后需要恢复文档选项。则可以使用该方法。
            <br />该方法返回一个IDisposable对象，然后可以任意修改文档选项，当调用这个IDisposalbe.Dispose()
            时，则所有的文档选项立刻恢复原状。
            </remarks>
      <example>
            using (IDisposable res = this.myEditControl.DocumentOptions.SaveState())
            {
               myEditControl.DocumentOptions.ViewOptions.ShowCellNoneBorder = false;
               myEditControl.DocumentOptions.ViewOptions.ShowParagraphFlag = false;
               myEditControl.DocumentOptions.ViewOptions.ShowFieldBorderElement = false;
               //执行各种其他功能
            }//using
            // 这里自动恢复DocumentOptions中的各种配置选项。
            </example>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.RestoreState(System.Object)">
      <summary>
            和SaveState()函数配对使用。恢复DocumentOptions中的各种配置选项。
            </summary>
      <param name="state">SaveState()的返回值。</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.SetOptionValue(System.String,System.String)">
      <summary>
            设置选项值,选项名称为“选项组名.选项名称”的格式，比如“ViewOptions.ShowParagraphFlag”。
            </summary>
      <remarks>
            比如
            obj.SetOptionValue("ViewOptions.ShowParagraphFlag","true");
            <br />obj.SetOptionValue("ViewOptions.TagColorForNormalField","#AAAAAA");
            </remarks>
      <param name="name">选项名称</param>
      <param name="Value">新的选项值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.GetOptionValue(System.String)">
      <summary>
            获得指定名称的选项数值,选项名称为“选项组名.选项名称”的格式，比如“ViewOptions.ShowParagraphFlag”。
            </summary>
      <remarks>
            比如
            string v = obj.GetOptionValue("ViewOptions.ShowParagraphFlag" ); // 返回 "true"或"false"。
            <br />string v2 = obj.GetOptionValue("ViewOptions.TagColorForNormalField");// 返回类似"#AAAAAA"等表示颜色值的字符串。
            </remarks>
      <param name="name">选项名称</param>
      <returns>选项数值</returns>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.LoadLocalFile(System.String)">
      <summary>
            加载独立配置文件
            </summary>
      <param name="fileName">
      </param>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.SaveLocalFile(System.String)">
      <summary>
            保存到本地的独立文件
            </summary>
      <param name="fileName">
      </param>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.LoadFromAppSettings">
      <summary>
            从.config配置文件中的AppSettings区域加载系统配置
            </summary>
      <remarks>
            例如app.config具有以下内容
            [configuration]
               [appSettings]
                  [add key = "othername" value="Main"/]
                  [add key = "DCSoft.Writer.Options.ViewOptions.ShowLineNumber" value="true"/]
                  [add key = "DCSoft.Writer.Options.BehaviorOptions.CommentVisibility" value="Visible"/]
               [/appSettings]
            [/configuration]
            则编辑器控件加载后会自动设置DocumentOptions.ViewOptions.ShowLineNumber=true以及
            DocumentOptions.BehaviorOptions.CommentVisibility = Controls.FunctionControlVisibility.Visible。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.WriteName">
      <summary>
            内部使用
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.DocumentOptions.SecurityOptions">
      <summary>
            安全和权限方面的设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentOptions.ViewOptions">
      <summary>
            文档视图方面的选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentOptions.BehaviorOptions">
      <summary>
            编辑器行为方面的选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentOptions.EditOptions">
      <summary>
            编辑方面的选项
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentViewOptions">
      <summary>
            文档视图相关选项
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.DocumentViewOptions.intTextRenderStyle">
      <summary>
            文本展现样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentViewOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentViewOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowRedErrorMessageForPaint">
      <summary>
            在绘制文档发生错误时是否绘制红色错误文本信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowGlobalGridLineInTableAndSection">
      <summary>
            在表格和文档节中显示全局网格线，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ExtInfoPixelWidth">
      <summary>
            扩展标题像素宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBorderElementPixelWidth">
      <summary>
            输入域边框元素像素宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NewInputContentUnderlineColor">
      <summary>
            表示新输入的内容的下划线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NewInputContentUnderlineColorValue">
      <summary>
            NewInputContentUnderlineColor属性的颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SupportUG">
      <summary>
            是否启用维文功能。启用维文功能会降低编辑器运行性能，而大多数情况下是无需启用维文功能。在此添加这个选项。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.HiddenTableBorderJumpPrintPage">
      <summary>
            在打印发生续打时的页面时隐藏表格边框线，但对于其他页面则正常打印。默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ImageInterpolationMode">
      <summary>
            绘制图片时的呈现质量，默认High。
            </summary>
      <remarks>
            对于COM接口，可以直接设置该属性值为整数，其值可以为
            <br />Default = 0,
            <br />Low = 1,
            <br />High = 2,
            <br />Bilinear = 3,
            <br />Bicubic = 4,
            <br />NearestNeighbor = 5,
            <br />HighQualityBilinear = 6,
            <br />HighQualityBicubic = 7,
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.EmphasisMarkSize">
      <summary>
            着重号的直径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.MaskColorForJumpPrint">
      <summary>
            续打时使用的遮盖色，可以是半透明颜色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.MaskColorForJumpPrintValue">
      <summary>
            续打时使用的遮盖色，可以是半透明颜色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.BothBlackWhenPrint">
      <summary>
            打印的时候前景色全部强制为黑色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ProtectedContentBackColor">
      <summary>
            受保护内容背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ProtectedContentBackColorValue">
      <summary>
            受保护内容背景色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultLineColorForImageEditor">
      <summary>
            图片编辑器使用的默认线条颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultLineColorForImageEditorValue">
      <summary>
            图片编辑器使用的默认线条颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowInputFieldStateTag">
      <summary>
            是否显示输入域状态标签.本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SectionBorderVisibility">
      <summary>
            文档节边框线可见性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TableCellBorderVisibility">
      <summary>
            表格单元格边框线可见性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowPageBreak">
      <summary>
            显示分页符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultAdornTextType">
      <summary>
            默认的输入域的扩展标记文字类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.AdornTextVisibility">
      <summary>
            文档元素扩展文本显示方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.AdornTextBackColor">
      <summary>
            扩展文字背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.AdornTextBackColorValue">
      <summary>
            扩展文字背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowGrayMaskOverDisableContentParty">
      <summary>
            在禁用的文档部分上面显示灰色遮盖
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowFormButton">
      <summary>
            是否显示表单按钮
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.PageMarginLineLength">
      <summary>
            表示页面边界的线条长度,
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultInputFieldHighlight">
      <summary>
            默认的输入域高亮度显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.HighlightProtectedContent">
      <summary>
            高亮度显示受保护的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowLineNumber">
      <summary>
            是否显示行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.UseLanguage2">
      <summary>
            是否启用第二语言
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SpecifyExtenGridLineStep">
      <summary>
            指定的扩展文档网格线步长,单位为1/300英寸，小于等于0表示无效值，默认为0。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.GridLineStyle">
      <summary>
            文档网格线线型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.EnableRightToLeft">
      <summary>
            允许执行从右到左排版,当允许从右到左排版时会影响一些性能。当确定不再使用从右到左的功能时，可以设置该选项为false来提高一些性能。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.AutoZoomDropdownListFontSize">
      <summary>
            自动缩放下拉列表字体大小
            </summary>
      <remarks>
            当设置了DropdownListFontSize&gt;0时，本属性不起作用。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DropdownListFontSize">
      <summary>
            下拉列表字体大小，小于等于0则不设置，默认为0.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DropdownListFontName">
      <summary>
            下拉列表字体名称，默认为空。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowBackgroundCellID">
      <summary>
            作为背景显示单元格编号，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowExpressionFlag">
      <summary>
            当单元格设置了表达式，则在右下角显示表达式标记，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.CommentFontName">
      <summary>
            文档批注字体名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.CommentFontSize">
      <summary>
            文档批注字体大小，默认为10.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.CommentDateFormatString">
      <summary>
            文档批注时间格式化字符串。WinForm控件和Web控件中有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.OldWhitespaceWidth">
      <summary>
            是否启用旧的计算空格的算法，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowGridLine">
      <summary>
            是否显示文档网格线，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.EnableEncryptView">
      <summary>
            是否允许视图加密显示，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.GridLineColor">
      <summary>
            文档网格线颜色，默认为灰色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.GridLineColorValue">
      <summary>
            文档网格线颜色，默认为灰色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.PreserveBackgroundTextWhenPrint">
      <summary>
            在打印的时候保留背景文字的位置，但不打印背景文字。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.PrintBackgroundText">
      <summary>
            打印时是否显示输入域的背景文字，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.RuntimeFieldBorderPrintVisibility">
      <summary>
            运行时的输入域边界元素在打印时的可见性设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBorderPrintVisibility">
      <summary>
            打印时输入域边界元素的可见性设置，默认为Default。也就是不显示不占排版位置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.IgnoreFieldBorderWhenPrint">
      <summary>
            本属性已由FieldBorderPrintVisibility代替。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.PrintGridLine">
      <summary>
            打印时是否打印网格线，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.PrintImageAltText">
      <summary>
            打印时，若图片没有数据，是否打印图片元素的Alt提示文本，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowHeaderBottomLine">
      <summary>
            当页眉有内容时显示页眉下边框线。若为false，则页眉和正文之间就没有分隔横线。默认值为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.HeaderBottomLineWidth">
      <summary>
            页眉下边框线的宽度.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowCellNoneBorder">
      <summary>
            是否显示表格单元格的隐藏的边框线。当为true时，若表格没有边框线，
            则在编辑器中也会使用NoneBorderColor选项指定的颜色显示出边框线。
            该设置不影响打印结果。该选项默认值为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NoneBorderColor">
      <summary>
            绘制隐藏的边框线使用的颜色。默认淡灰色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NoneBorderColorValue">
      <summary>
            虚边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.GraphicsSmoothingMode">
      <summary>
            图形平滑模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TextRenderStyle">
      <summary>
            在绘制文字时的质量设置。默认为ClearTypeGridFit。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowParagraphFlag">
      <summary>
            显示段落标记。不影响打印，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.HiddenFieldBorderWhenLostFocus">
      <summary>
            输入域失去焦点时隐藏边框元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowFieldBorderElement">
      <summary>
            是否显示输入域边框元素,默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBorderColor">
      <summary>
            输入域边框元素颜色，默认为空颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBorderColorValue">
      <summary>
            输入域边框元素颜色，默认为空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowPageLine">
      <summary>
            当编辑器处于普通视图模式（不分页），是否显示分页线。默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.RichTextBoxCompatibility">
      <summary>
            兼容RTF文本控件模式,若为true，则使得同一个RTF文档，在本编辑器中和标准RichTextBox控件中
            显示的结果误差比较小。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.MinTableColumnWidth">
      <summary>
            表格列的最小宽度，单位为1/300英寸，默认为50。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultInputFieldTextColor">
      <summary>
            文本输入域默认的文本颜色，默认为透明色，也就是该设置无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.DefaultInputFieldTextColorValue">
      <summary>
            文本输入域默认的文本颜色，默认为透明色，也就是该设置无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.EnableFieldTextColor">
      <summary>
            是否启用输入域文字颜色，默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldTextColor">
      <summary>
            输入域文字颜色，和EnableFieldTextColor搭配使用，默认为黑色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldTextColorValue">
      <summary>
            文档域文字颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldTextPrintColor">
      <summary>
            输入域打印时文字颜色，和EnableFieldTextColor搭配使用，默认为黑色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldTextPrintColorValue">
      <summary>
            文档域打印时文字颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ReadonlyFieldBackColor">
      <summary>
            文本输入域的默认背景颜色，默认为浅蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ReadonlyFieldBackColorValue">
      <summary>
            文档域背景色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBackColor">
      <summary>
            文本输入域的默认背景颜色，默认为浅蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldBackColorValue">
      <summary>
            文档域背景色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldHoverBackColor">
      <summary>
            鼠标悬浮在文本输入域时文本输入域的高亮度背景颜色，默认为淡蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldHoverBackColorValue">
      <summary>
            文档域悬浮背景色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldFocusedBackColor">
      <summary>
            文本输入域获得输入焦点时的高亮度背景颜色,默认为淡蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldFocusedBackColorValue">
      <summary>
            文本输入域获得输入焦点时的高亮度背景颜色,默认为淡蓝色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldInvalidateValueForeColor">
      <summary>
            文本输入域数据异常时的高亮度文本色，默认为淡红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldInvalidateValueForeColorValue">
      <summary>
            文本输入域数据异常时的高亮度前景色，默认为淡红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldInvalidateValueBackColor">
      <summary>
            文本输入域数据异常时的高亮度背景色，默认为全透明。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.FieldInvalidateValueBackColorValue">
      <summary>
            文本输入域数据异常时的高亮度背景色，默认为淡红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ReadonlyFieldBorderColor">
      <summary>
            只读输入域的边界元素颜色，默认为灰色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForReadonlyField">
      <summary>
            只读的输入域的标记点颜色，默认为透明色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForReadonlyFieldValue">
      <summary>
            只读输入域标记颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForModifiedField">
      <summary>
            内容修改的输入域的标记点颜色，默认为蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForModifiedFieldValue">
      <summary>
            内容修改的输入域的标记点颜色值本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForNormalField">
      <summary>
            普通输入域的标记点颜色，默认为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForNormalFieldValue">
      <summary>
            普通输入域的标记点颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForValueInvalidateField">
      <summary>
            数据不正确的输入域的标记点颜色，默认为蓝色。本属性支持Web版控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.TagColorForValueInvalidateFieldValue">
      <summary>
            数据不正确的输入域的标记点颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ReadonlyFieldBorderColorValue">
      <summary>
            只读输入域的边界元素颜色，默认为灰色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.UnEditableFieldBorderColor">
      <summary>
            内容不能被用户直接录入修改的输入域的边界元素颜色，默认为红色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.UnEditableFieldBorderColorValue">
      <summary>
            内容不能直接修改的输入域的边界元素颜色，默认为红色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NormalFieldBorderColor">
      <summary>
            常规的输入域的边界元素颜色，用户可以在常规的输入域中直接输入内容。该属性值默认为蓝色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.NormalFieldBorderColorValue">
      <summary>
            常规的输入域的边界元素颜色，默认为蓝色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.BackgroundTextColor">
      <summary>
            字段域的背景文本颜色，默认为灰色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.BackgroundTextColorValue">
      <summary>
            字段域的背景文本颜色，默认为灰色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SelectionHighlight">
      <summary>
            选择区域高亮度显示方式，默认为MaskColor方式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SelectionHightlightMaskColor">
      <summary>
            选择区域高亮度遮盖色，本选项和SelectionHighlight搭配使用。默认为半透明淡蓝色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.SelectionHightlightMaskColorValue">
      <summary>
            选择区域高亮度遮盖色，默认为半透明淡蓝色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.LayoutDirection">
      <summary>
            内容排版方向，默认为LeftToRight。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentViewOptions.ShowLocalizationDisplayName">
      <summary>
            是否显示本地化名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentWriterControlOptions">
      <summary>
            编辑器控件选项
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentWriterControlOptions.intViewMode">
      <summary>
            页面显示模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentWriterControlOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DocumentWriterControlOptions.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.DocumentWriterControlOptions.ApplyTo(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            应用到控件
            </summary>
      <param name="ctl">
      </param>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.AutoSetDocumentDefaultFont">
      <summary>
            自动设置文档默认字体
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.ReadViewMode">
      <summary>
            阅读版式视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.ViewMode">
      <summary>
            页面显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.AllowDragContent">
      <summary>
            允许拖拽内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.AllowDrop">
      <summary>
            允许拖拽
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.Readonly">
      <summary>
            文档内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.PageTitlePosition">
      <summary>
            页面标题位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.IsAdministrator">
      <summary>
            是否以管理员模式运行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.AcceptDataFormats">
      <summary>
            编辑器控件能接受的数据格式，包括粘贴操作和OLE拖拽操作获得的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.CreationDataFormats">
      <summary>
            编辑器控件能创建的数据格式，这些数据将用于复制操作和OLE拖拽操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.AutoUserLogin">
      <summary>
            每打开文档时自动进行用户登录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.CommentVisibility">
      <summary>
            是否显示文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.EnabledElementEvent">
      <summary>
            是否允许触发文档元素级事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.FormView">
      <summary>
            表单视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.HeaderFooterReadonly">
      <summary>
            页眉页脚是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DocumentWriterControlOptions.Font">
      <summary>
            字体
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementCancelEventArgs">
      <summary>
            带取消功能的文档元素事件参数类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementCancelEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.ElementCancelEventArgs.Cancel">
      <summary>
            取消事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementEventArgs">
      <summary>
            文档元素事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.ElementEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventArgs.Handled">
      <summary>
            事件已经被处理了，后续无需继续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventArgs.CancelBubble">
      <summary>
            取消事件冒泡
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementEventTemlateMap">
      <summary>
            文档元素事件模板字典
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemlateMap.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemlateMap.ContainsByTypeName(System.String)">
      <summary>
            判断是否存在指定类型名称的事件模板
            </summary>
      <param name="typeName">类型名称</param>
      <returns>是否存在指定事件模板</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemlateMap.SetEventTemplatesByTypeName(System.String,DCSoft.Writer.ElementEventTemplate)">
      <summary>
            根据类型名称设置文档元素事件模板
            </summary>
      <param name="typeName">类型名称</param>
      <param name="eet">元素事件模板</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemlateMap.GetEventTemplatesByTypeName(System.String)">
      <summary>
            获得指定名称的类型的事件模板列表
            </summary>
      <param name="elementTypeName">文档元素类型</param>
      <returns>获得的事件模板列表</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemlateMap.GetEventTemplates(System.Type)">
      <summary>
            获得指定类型使用的事件模板列表
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的事件模板列表</returns>
    </member>
    <member name="T:DCSoft.Writer.ElementEventTemplate">
      <summary>
            文档元素事件模板
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnLoad(System.Object,DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            触发文档元素加载事件
            </summary>
      <param name="eventSender">事件参数</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标点击事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseDblClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标双击事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseDown(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标按键按下事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseMove(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标移动事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseUp(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标按键松开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnKeyDown(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键按下事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnKeyPress(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnKeyUp(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键松开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发 ContentChanged事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnContentChanging(System.Object,DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发 ContentChanging事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnGotFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发获得输入焦点事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnLostFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发失去输入焦点事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnValidating(System.Object,DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发数据正在验证事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnValidated(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发数据验证结束事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnBeforeDropDown(System.Object,DCSoft.Writer.ElementCancelEventArgs)">
      <summary>
            触发准备弹出下拉列表事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseEnter(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发鼠标进入事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnMouseLeave(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发鼠标离开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnExpression(System.Object,DCSoft.Writer.ElementExpressionEventArgs)">
      <summary>
            触发文档元素执行表达式事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnQueryState(System.Object,DCSoft.Writer.ElementQueryStateEventArgs)">
      <summary>
            触发查询文档元素状态事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnBeforePaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary>
            触发准备绘制文档元素内容前事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplate.OnAfterPaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary>
            触发准备绘制文档元素内容前事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.IsCurrentType">
      <summary>
            判断是否是当前类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasLoad">
      <summary>
            判断是否存在Load事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseClick">
      <summary>
            是否存在MouseClick事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseDblClick">
      <summary>
            是否存在MouseDblClick事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseDown">
      <summary>
            是否需要处理MouseDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseMove">
      <summary>
            是否需要处理MouseMove事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseUp">
      <summary>
            是否有MouseUp事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasKeyDown">
      <summary>
            是否有KeyDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasKeyPress">
      <summary>
            是否有KeyPress事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasKeyUp">
      <summary>
            是否有KeyUp事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasContentChanged">
      <summary>
            判断是否存在 ContentChanged 事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasContentChanging">
      <summary>
            判断是否存在 ContentChanging 事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasGotFocus">
      <summary>
            判断是否存在GetFocus事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasLostFocus">
      <summary>
            判断是否存在失去输入焦点事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasValidating">
      <summary>
            是否存在Validating事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasValidated">
      <summary>
            是否存在数据验证结束事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasBeforeDropDown">
      <summary>
            判断是否存在BeforeDropDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseEnter">
      <summary>
            判断是否存在鼠标进入事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasMouseLeave">
      <summary>
            判断是否存在鼠标离开事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasExpression">
      <summary>
            判断是否存在文档元素执行表达式事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasQueryState">
      <summary>
            判断是否存在查询文档元素状态事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasBeforePaint">
      <summary>
            判断是否存在准备绘制文档元素内容前事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplate.HasAfterPaint">
      <summary>
            判断是否存在绘制文档元素内容后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.Load">
      <summary>
            文档元素加载事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseClick">
      <summary>
            文档元素鼠标点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseDblClick">
      <summary>
            文档元素鼠标双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseDown">
      <summary>
            文档元素鼠标按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseMove">
      <summary>
            文档元素鼠标移动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseUp">
      <summary>
            文档元素鼠标按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.KeyDown">
      <summary>
            文档元素键盘按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.KeyPress">
      <summary>
            文档元素键盘按键事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.KeyUp">
      <summary>
            文档元素键盘按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.ContentChanged">
      <summary>
            文档内容发生改变后的事件，该事件用于通知情况，不能取消操作
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.ContentChanging">
      <summary>
            文档内容准备发生改变事件，可以使用该参数来取消操作
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.GotFocus">
      <summary>
            文本域获得输入焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.LostFocus">
      <summary>
            文本域失去输入焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.Validating">
      <summary>
            数据正在验证事件,在该事件处理中可撤销相关操作
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.Validated">
      <summary>
            数据验证结束的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.BeforeDropDown">
      <summary>
            鼠标进入事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseEnter">
      <summary>
            鼠标进入事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.MouseLeave">
      <summary>
            鼠标离开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.Expression">
      <summary>
            文档元素执行表达式事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.QueryState">
      <summary>
            查询文档元素状态事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.BeforePaint">
      <summary>
            准备绘制文档元素内容前事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.ElementEventTemplate.AfterPaint">
      <summary>
            绘制文档元素内容后触发的事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementEventTemplateList">
      <summary>
            元素事件模板列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnLoad(System.Object,DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            触发文档元素加载事件
            </summary>
      <param name="eventSender">事件参数</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标点击事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseDblClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标双击事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseDown(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标按键按下事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseMove(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标移动事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseUp(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理文档元素鼠标按键松开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnKeyDown(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键按下事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnKeyPress(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnKeyUp(System.Object,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理文档元素键盘按键松开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发 ContentChanged事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnContentChanging(System.Object,DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发 ContentChanging事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnGotFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发获得输入焦点事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnLostFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发失去输入焦点事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnValidating(System.Object,DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发数据正在验证事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnValidated(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发数据验证结束事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnBeforeDropDown(System.Object,DCSoft.Writer.ElementCancelEventArgs)">
      <summary>
            触发BeforeDropDown事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseEnter(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发鼠标进入事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnMouseLeave(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发鼠标离开事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnExpression(System.Object,DCSoft.Writer.ElementExpressionEventArgs)">
      <summary>
            触发文档元素执行表达式事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnQueryState(System.Object,DCSoft.Writer.ElementQueryStateEventArgs)">
      <summary>
            触发文档元素执行表达式事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnBeforePaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary>
            触发准备绘制文档元素内容前事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.ElementEventTemplateList.OnAfterPaint(System.Object,DCSoft.Writer.ElementPaintEventArgs)">
      <summary>
            触发准备绘制文档元素内容前事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.Item(System.String)">
      <summary>
            获得指定名称的事件监听器，名称不区分大小写
            </summary>
      <param name="name">名称</param>
      <returns>获得的监听器对象</returns>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasLoad">
      <summary>
            判断是否存在Load事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseClick">
      <summary>
            是否存在MouseClick事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseDblClick">
      <summary>
            是否存在MouseDblClick事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseDown">
      <summary>
            是否需要处理MouseDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseMove">
      <summary>
            是否需要处理MouseMove事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseUp">
      <summary>
            是否有MouseUp事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasKeyDown">
      <summary>
            是否有KeyDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasKeyPress">
      <summary>
            是否有KeyPress事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasKeyUp">
      <summary>
            是否有KeyPress事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasContentChanged">
      <summary>
            判断是否存在 ContentChanged 事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasContentChanging">
      <summary>
            判断是否存在 ContentChanging 事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasGotFocus">
      <summary>
            判断是否存在GetFocus事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasLostFocus">
      <summary>
            判断是否存在失去输入焦点事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasValidating">
      <summary>
            是否存在Validating事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasValidated">
      <summary>
            是否存在数据验证结束事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasBeforeDropDown">
      <summary>
            判断是否存在BeforeDropDown事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseEnter">
      <summary>
            判断是否存在鼠标进入事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasMouseLeave">
      <summary>
            判断是否存在鼠标离开事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasExpression">
      <summary>
            判断是否存在文档元素执行表达式事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasQueryState">
      <summary>
            判断是否存在文档元素执行表达式事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasBeforePaint">
      <summary>
            判断是否存在准备绘制文档元素内容前事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementEventTemplateList.HasAfterPaint">
      <summary>
            判断是否存在准备绘制文档元素内容前事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementExpressionEventArgs">
      <summary>
            文档元素执行表达式事件参数
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.ElementExpressionEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素</param>
      <param name="expression">表达式文本</param>
    </member>
    <member name="P:DCSoft.Writer.ElementExpressionEventArgs.Expression">
      <summary>
            表达式文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementExpressionEventArgs.Result">
      <summary>
            运算结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementKeyEventArgs">
      <summary>
            文档元素键盘事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementKeyEventArgs.#ctor(DCSoft.Writer.Dom.DocumentEventArgs,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="args">
      </param>
      <param name="element">
      </param>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.Alt">
      <summary>
            Alt键状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.Control">
      <summary>
            Control键状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.Shift">
      <summary>
            Shift键状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.KeyCode">
      <summary>
            按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.KeyChar">
      <summary>
            按键字符值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.KeyCharValue">
      <summary>
            按键字符值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementKeyEventArgs.KeyCodeValue">
      <summary>
            按键值，仅作为COM接口使用。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementLoadEventArgs">
      <summary>
            文档元素加载事件处理
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementLoadEventArgs.ForImportElements">
      <summary>
            因为外界导入文档元素而执行的过程
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementLoadEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
      <param name="format">加载文档的文件格式</param>
    </member>
    <member name="P:DCSoft.Writer.ElementLoadEventArgs.Format">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementLoadEventArgs.UpdateValueBinding">
      <summary>
            是否更新数据源绑定
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementLoadEventArgs.UpdateExpression">
      <summary>
            是否更新数据源绑定
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementMouseEventArgs">
      <summary>
            元素鼠标事件参数类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementMouseEventArgs.#ctor(DCSoft.Writer.Dom.DocumentEventArgs,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="args">
      </param>
      <param name="element">
      </param>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.Button">
      <summary>
            鼠标按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.HasLeftButton">
      <summary>
            用户是否按下左按钮
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.HasRightButton">
      <summary>
            用户是否按下右按钮
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.ButtonValue">
      <summary>
            鼠标按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.Clicks">
      <summary>
            按键点击次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.Delta">
      <summary>
            鼠标滚轮计数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.DocumentX">
      <summary>
            鼠标光标在文档中的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.DocumentY">
      <summary>
            鼠标光标在文档中的Y坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.ElementClientX">
      <summary>
            鼠标光标在元素客户区中的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementMouseEventArgs.ElementClientY">
      <summary>
            鼠标光标在元素客户区中的Y坐标
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementPaintEventArgs">
      <summary>
            绘制元素图形事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorBlack">
      <summary>
            黑色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorWhite">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorRed">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorBlue">
      <summary>
            蓝色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorYellow">
      <summary>
            黄色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMColorGreen">
      <summary>
            绿色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMViewBoundsLeft">
      <summary>
            获得视图的左端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMViewBoundsTop">
      <summary>
            获得视图的顶端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMViewBoundsWidth">
      <summary>
            获得视图的边界的宽度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMViewBoundsHeight">
      <summary>
            获得视图的边界高度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制线段
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="x1">起点X坐标</param>
      <param name="y1">起点Y坐标</param>
      <param name="x2">终点X坐标</param>
      <param name="y2">终点Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制方框
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMFillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充矩形
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDrawDrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制椭圆
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMFillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充椭圆
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDrawString(System.String,System.String,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制字符串
            </summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="alignment">水平对齐方式,0:左对齐，1:居中对齐，2:右对齐</param>
      <param name="lineAlignment">垂直对齐方式,0:靠上对齐，1:居中对齐，2:靠下对齐</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMMeasureStringWidth(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示宽度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMMeasureStringHeight(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示高度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMGetFontHeight(System.String,System.Single)">
      <summary>
            获得字体高度
            </summary>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <returns>字体高度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMLastErrorMessage">
      <summary>
            最后一次操作的错误信息
            </summary>
      <returns>错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            将ARGB的颜色值转换为整数
            </summary>
      <param name="a">A</param>
      <param name="r">R</param>
      <param name="g">G</param>
      <param name="b">B</param>
      <returns>颜色整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDisposeImage(System.Int32)">
      <summary>
            销毁图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GetCOMImage(System.Int32)">
      <summary>
            内部的获得图片对象
            </summary>
      <param name="index">图片句柄</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.COMDrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制图片
            </summary>
      <param name="imageIndex">图片句柄，源自COMLoadImageFromFile()/COMLoadImageFromBinary()/COMLoadImageFromBase64String().</param>
      <param name="left">左端位置</param>
      <param name="top">顶端位置</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GraphicsGetFontHeight(System.Drawing.Font)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GraphicsGetFontHeight(DCSoft.Drawing.XFontValue)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Drawing.RectangleF,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.GraphicsFillRoundRectangle(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            填充圆角矩形
            </summary>
      <param name="c">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementPaintEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.GraphicsAutoDisposeImageForPDF">
      <summary>
            在输出PDF时自动销毁PDF里面的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.NativeGraphics">
      <summary>
            内部的原始画布对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.PageIndex">
      <summary>
            从1开始计算的当前页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.ViewBounds">
      <summary>
            文档元素视图区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.ClientViewBounds">
      <summary>
            文档元素客户区视图区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.Style">
      <summary>
            绘制文档内容使用的样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.RenderMode">
      <summary>
            正在呈现的文档样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPaintEventArgs.ForCreateImage">
      <summary>
            正在为创建图片而绘制图形
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementQueryStateEventArgs">
      <summary>
            查询文档元素状态信息事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementQueryStateEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="P:DCSoft.Writer.ElementQueryStateEventArgs.AccessFlags">
      <summary>
            访问标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementQueryStateEventArgs.ContentReadonly">
      <summary>
            内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementQueryStateEventArgs.PropertyReadonly">
      <summary>
            本身的属性是否是只读的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementQueryStateEventArgs.Deleteable">
      <summary>
            元素能否被删除
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementQueryStateEventArgs.Message">
      <summary>
            相关的提示信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementValidatingEventArgs">
      <summary>
            文档元素内容验证中事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementValidatingEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.ElementValidatingEventArgs.ResultState">
      <summary>
            校验状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementValidatingEventArgs.ResultLevel">
      <summary>
            校验结果等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementValidatingEventArgs.Message">
      <summary>
            验证结果信息 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementValidatingEventArgs.Cancel">
      <summary>
            取消后续事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.FieldValueDescriptor">
      <summary>
            数据源绑定信息说明
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.FieldValueDescriptor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.FieldValueDescriptor.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.ID">
      <summary>
            文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.Name">
      <summary>
            文档元素的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.Readonly">
      <summary>
            是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.DataSource">
      <summary>
            数据源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.BindingPath">
      <summary>
            绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.BindingPathForText">
      <summary>
            绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FieldValueDescriptor.Value">
      <summary>
            旧数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.FieldValueDescriptorList">
      <summary>
            数据源绑定信息列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.FieldValueDescriptorList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.FieldValueDescriptorList.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.FieldValueDescriptorList.WriteToDocument(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            将数据填写到文档中
            </summary>
      <param name="document">文档对象</param>
      <returns>填写的有效数据个数</returns>
    </member>
    <member name="T:DCSoft.Writer.FilterValueEventArgs">
      <summary>
            数据过滤器事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.FilterValueEventArgs.#ctor(DCSoft.Writer.InputValueSource,DCSoft.Writer.InputValueType,System.Object)">
      <summary>
            初始化对象
            </summary>
      <param name="source">数据来源</param>
      <param name="type">数据类型</param>
      <param name="Value">要处理的数据</param>
    </member>
    <member name="P:DCSoft.Writer.FilterValueEventArgs.Source">
      <summary>
            数据来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FilterValueEventArgs.SourceName">
      <summary>
            数据来源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FilterValueEventArgs.Type">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FilterValueEventArgs.Value">
      <summary>
            数据内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FilterValueEventArgs.Cancel">
      <summary>
            取消相关的数据操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.GridLineSettings">
      <summary>
            网格线设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.GridLineSettings.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.GridLineSettings.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.GridLineSettings.ShowGridLine">
      <summary>
            是否显示网格线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GridLineSettings.GridLineColor">
      <summary>
            网格线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GridLineSettings.GridLineColorValue">
      <summary>
            网格线颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GridLineSettings.PrintGridLine">
      <summary>
            是否打印网格线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GridLineSettings.LineStyle">
      <summary>
            线条样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.InsertObjectEventArgs">
      <summary>
            向文档插入对象事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.InsertObjectEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.InsertObjectEventArgs.GetFormats">
      <summary>
            获得数据格式列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.InsertObjectEventArgs.GetData(System.String)">
      <summary>
            获得数据
            </summary>
      <param name="format">数据格式名称</param>
      <returns>数据</returns>
    </member>
    <member name="M:DCSoft.Writer.InsertObjectEventArgs.GetDataPresent(System.String)">
      <summary>
            获得是否存在指定格式的数据
            </summary>
      <param name="format">数据格式名称</param>
      <returns>是否存在</returns>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.CheckMaxTextLengthForCopyPaste">
      <summary>
            是否检测MaxTextLengthForCopyPaste设置.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.CurrentElement">
      <summary>
            指定插入位置的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.DetectForDragContent">
      <summary>
            为拖拽文档内容而进行检测
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.DocumentControler">
      <summary>
            文档控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.AllowDataFormats">
      <summary>
            允许的数据格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.Services">
      <summary>
            服务对象容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.ContainerElement">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.Position">
      <summary>
            插入点位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.AllowedEffect">
      <summary>
            允许的拖拽样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.DragEffect">
      <summary>
            拖拽样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.DataObject">
      <summary>
            要插入的对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.SpecifyFormat">
      <summary>
            指定的数据格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.ShowUI">
      <summary>
            是否显示用户界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.Handled">
      <summary>
            事件已经处理过了标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.InputSource">
      <summary>
            数据操作来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.AutoSelectContent">
      <summary>
            自动选择插入的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.NewElements">
      <summary>
            新增的文档元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.Result">
      <summary>
            操作是否成功
            </summary>
    </member>
    <member name="P:DCSoft.Writer.InsertObjectEventArgs.RejectFormats">
      <summary>
            拒绝的数据格式名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.NavigateNode">
      <summary>
            导航节点对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.NavigateNode.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.NavigateNode.AppendNode(DCSoft.Writer.NavigateNode)">
      <summary>
            添加子节点
            </summary>
      <param name="node">子节点对象</param>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.ID">
      <summary>
            节点唯一编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.Text">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.Level">
      <summary>
            层次
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.Position">
      <summary>
            在文档中的开始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.StartContentIndex">
      <summary>
            区域的开始位置元素内容序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.EndContentIndex">
      <summary>
            区域的结束位置元素内容序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.Elements">
      <summary>
            引用的对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.Nodes">
      <summary>
            子节点列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.NavigateNode.HasChildNode">
      <summary>
            判断是否存在子节点
            </summary>
    </member>
    <member name="T:DCSoft.Writer.NavigateNodeList">
      <summary>
            导航节点列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.NavigateNodeList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.NavigateNodeList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.NavigateNodeList.ComSetItem(System.Int32,DCSoft.Writer.NavigateNode)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="T:DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs">
      <summary>
            查询用户历史痕迹显示文本事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Security.UserHistoryInfo,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素</param>
      <param name="info">用户历史记录</param>
      <param name="forLogicDelete">是否为逻辑删除内容</param>
    </member>
    <member name="P:DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs.Info">
      <summary>
            用户历史记录信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs.ForLogicDelete">
      <summary>
            true:逻辑删除内容 ， false:新增内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs.Result">
      <summary>
            返回的结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.SystemAlertInfo">
      <summary>
            系统警告信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.SystemAlertInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.SystemAlertInfo.Message">
      <summary>
            信息内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.SystemAlertInfoList">
      <summary>
            系统警告信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.SystemAlertInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.SystemAlertInfoList.AddInfo(System.String)">
      <summary>
            添加信息
            </summary>
      <param name="msg">信息文本</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.SystemAlertInfoList.ToString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.TrackVisibleConfig">
      <summary>
            用户痕迹可视化设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.TrackVisibleConfig.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.TrackVisibleConfig.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.Enabled">
      <summary>
            配置是否可用，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.BackgroundColor">
      <summary>
            背景色，默认为透明色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.BackgroundColorString">
      <summary>
            颜色文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.UnderLineColor">
      <summary>
            下划线颜色，默认为蓝色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.UnderLineColorString">
      <summary>
            颜色文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.UnderLineColorNum">
      <summary>
            下划线个数，默认为1.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.DeleteLineColor">
      <summary>
            删除线的颜色，默认为红色。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.DeleteLineColorString">
      <summary>
            颜色文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.TrackVisibleConfig.DeleteLineNum">
      <summary>
            删除线的个数，默认为1。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.UserTrackInfo">
      <summary>
            用户痕迹信息
            </summary>
      <remarks>包含了文档中的一次用户修改操作的痕迹信息</remarks>
    </member>
    <member name="F:DCSoft.Writer.UserTrackInfo._Text">
      <summary>
            缓存一下元素文本，提高性能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UserTrackInfo._ViewHeight">
      <summary>
            在视图中的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.UserID">
      <summary>
            用户系统名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.UserName">
      <summary>
            用户姓名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.SaveTime">
      <summary>
            用户保存文档的事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.InfoType">
      <summary>
            痕迹信息类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.PermissionLevel">
      <summary>
            用户授权等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.Elements">
      <summary>
            用户操作的文档元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.CommentText">
      <summary>
            相关的批注文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.Text">
      <summary>
            用户
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfo.StdTitle">
      <summary>
            标准标题文字
            </summary>
    </member>
    <member name="T:DCSoft.Writer.UserTrackInfoList">
      <summary>
            用户痕迹信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfoList.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfoList.Refresh">
      <summary>
            刷新状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfoList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.UserTrackInfoList.ComSetItem(System.Int32,DCSoft.Writer.UserTrackInfo)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfoList.Document">
      <summary>
            所操作的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfoList.ContentVersion">
      <summary>
            对象内容对应的文档版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.UserTrackInfoList.Current">
      <summary>
            获得当前信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterAfterFieldContentEditEventArgs">
      <summary>
            用户通过数值编辑器修改输入域内容操作之前触发的事件的参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.EditorTypeName">
      <summary>
            编辑器类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.Element">
      <summary>
            输入域元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.SelectedItems">
      <summary>
            选择的项目集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.ElementID">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.ElementName">
      <summary>
            元素名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.SelectedIndexs">
      <summary>
            选择的下拉列表序号列表，从0开始计算，各个序号之间用逗号分开。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.OldText">
      <summary>
            旧的文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.OldValue">
      <summary>
            旧的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.NewText">
      <summary>
            新文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterFieldContentEditEventArgs.NewValue">
      <summary>
            新数值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterAfterShowDialogEventArgs">
      <summary>
            对话框关闭事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAfterShowDialogEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.Object,System.String,System.String,System.Windows.Forms.DialogResult)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="doc">文档对象</param>
      <param name="ele">文档元素对象</param>
      <param name="dialog">对话框对象</param>
      <param name="dialogTypeName">对话框类型名称</param>
      <param name="result">对话框结果</param>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterShowDialogEventArgs.Dialog">
      <summary>
            对话框对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterShowDialogEventArgs.Message">
      <summary>
            相关的信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterShowDialogEventArgs.DialogTypeName">
      <summary>
            对话框框的类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAfterShowDialogEventArgs.Result">
      <summary>
            对话框结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs">
      <summary>
            用户通过数值编辑器修改输入域内容操作之前触发的事件的参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.EditorTypeName">
      <summary>
            编辑器类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.Element">
      <summary>
            输入域元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.SelectedItems">
      <summary>
            选择的项目集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.ElementID">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.ElementName">
      <summary>
            元素名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.SelectedIndexs">
      <summary>
            选择的下拉列表序号列表，从0开始计算，各个序号之间用逗号分开。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.OldText">
      <summary>
            当前文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.OldValue">
      <summary>
            当前数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.NewText">
      <summary>
            新文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.NewValue">
      <summary>
            新数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeFieldContentEditEventArgs.Cancel">
      <summary>
            用户取消操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforePlayMediaEventArgs">
      <summary>
            准备播放多媒体事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforePlayMediaEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="document">文档对象</param>
      <param name="element">媒体元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.FileName">
      <summary>
            媒体文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.TargetFileName">
      <summary>
            目标文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.MediaElement">
      <summary>
            媒体文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforePlayMediaEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs">
      <summary>
            用户界面键盘输入的字符串之前的事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器对象</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="inputString">原始输入的字符串对象</param>
      <param name="outputString">预计输出的字符串对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs.InputString">
      <summary>
            输入的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs.OutputString">
      <summary>
            输出的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs.Cancel">
      <summary>
            取消输入字符串操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterButtonClickEventArgs">
      <summary>
            文档按钮事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterButtonClickEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextButtonElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
      <param name="btn">按钮元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterButtonClickEventArgs.ButtonElement">
      <summary>
            按钮文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterButtonClickEventArgs.ButtonElementID">
      <summary>
            按钮文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterButtonClickEventArgs.Handled">
      <summary>
            事件已经处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterButtonClickEventArgs.CommandName">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterCancelEventArgs">
      <summary>
            编辑器事件参数类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.WriterCancelEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterCancelEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterCancelEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterCancelEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterCancelEventArgs.Cancel">
      <summary>
            用户取消操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterDocumentPrintedEventArgs">
      <summary>
            文档打印事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterDocumentPrintedEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
      <param name="document">文档对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterDocumentPrintedEventArgs.PrintResult">
      <summary>
            打印结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterEditElementValueEventArgs">
      <summary>
            编辑文档元素数值事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterEditElementValueEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Controls.ElementValueEditor)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="editor">编辑器对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterEditElementValueEventArgs.Editor">
      <summary>
            标配的元素数值编辑器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEditElementValueEventArgs.FieldElement">
      <summary>
            输入域文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEditElementValueEventArgs.Handled">
      <summary>
            事件已经处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEditElementValueEventArgs.Result">
      <summary>
            处理结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterEventArgs">
      <summary>
            编辑器事件参数类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.WriterEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="document">
      </param>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterEventArgs.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterExpressionFunctionEventArgs">
      <summary>
            执行表达式函数事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterExpressionFunctionEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.Object[])">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">元素对象</param>
      <param name="functionName">函数名</param>
      <param name="parameters">参数列表</param>
    </member>
    <member name="M:DCSoft.Writer.WriterExpressionFunctionEventArgs.GetRawParameters">
      <summary>
            获得原始参数值
            </summary>
      <returns>参数数组</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterExpressionFunctionEventArgs.GetParameterValue(System.Int32)">
      <summary>
            获得指定序号的参数值
            </summary>
      <param name="index">序号</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterExpressionFunctionEventArgs.GetParameterStringValue(System.Int32)">
      <summary>
            获得指定序号的参数值的字符串数值
            </summary>
      <param name="index">序号</param>
      <returns>参数值</returns>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.FunctionName">
      <summary>
            函数名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ParametersCount">
      <summary>
            参数的个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ParameterString1">
      <summary>
            第一个参数的字符串形式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ParameterString2">
      <summary>
            第二个参数的字符串形式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ParameterString3">
      <summary>
            第三个参数的字符串形式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ParameterString4">
      <summary>
            第四个参数的字符串形式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.Result">
      <summary>
            运算结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ResultString">
      <summary>
            运算结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.Handled">
      <summary>
            事件已经处理了无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterExpressionFunctionEventArgs.ErrorMessage">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterGetAdornTextEventArgs">
      <summary>
            查询扩展文本事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterGetAdornTextEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="txt">文本</param>
    </member>
    <member name="P:DCSoft.Writer.WriterGetAdornTextEventArgs.AdornText">
      <summary>
            扩展文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterGetSignToolTipEventArgs">
      <summary>
            生成签名图片提示文本事件参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.Handled">
      <summary>
            事件已经处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.ResultTooltip">
      <summary>
            最终生成的提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.Control">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.ContainerElement">
      <summary>
            对应的容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.SignImageElement">
      <summary>
            签名图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.ProviderName">
      <summary>
            签名功能提供者名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.UserID">
      <summary>
            用户编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.UserName">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.Time">
      <summary>
            签名时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.ClientName">
      <summary>
            客户端名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetSignToolTipEventArgs.State">
      <summary>
            签名状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterLinkEventArgs">
      <summary>
            超链接事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterLinkEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="reference">引用的路径</param>
      <param name="target">目标框架</param>
    </member>
    <member name="P:DCSoft.Writer.WriterLinkEventArgs.Reference">
      <summary>
            链接引用的地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterLinkEventArgs.Target">
      <summary>
            超链接地址目标。本属性不支持数据源和变量。
            </summary>
      <remarks>
            当文档元素设置了超连接，应用在WEB系统时，文档元素会输出HTML的A标签，此时该标签的href属性值为文档元素的Link属性值，
            而HTML标签的target属性值就是本属性的值。一般可以为"_blank","_media","_parent","_search" ,"_self","_top"。
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterMouseEventArgs">
      <summary>
            编辑器鼠标事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterMouseEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.Windows.Forms.MouseEventArgs)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterMouseEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.Int32,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Handled">
      <summary>
            事件已经被处理了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.ScreenX">
      <summary>
            鼠标光标在屏幕中的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.ScreenY">
      <summary>
            鼠标光标在屏幕中的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.HoverElement">
      <summary>
            鼠标悬停下的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Button">
      <summary>
            鼠标按钮
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.HasLeftButton">
      <summary>
            判断是否是有鼠标左键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.HasRightButton">
      <summary>
            判断是否是有鼠标右键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.ButtonValue">
      <summary>
            按钮值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Delta">
      <summary>
            滚轮值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Clicks">
      <summary>
            鼠标点击次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.X">
      <summary>
            鼠标光标X坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterMouseEventArgs.Y">
      <summary>
            鼠标光标Y坐标值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintEventEventArgs">
      <summary>
            打印事件参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.Cancel">
      <summary>
            用户是否取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.PrintAction">
      <summary>
            打印动作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.DefaultPageSettings">
      <summary>
            默认页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.PrinterSettings">
      <summary>
            默认打印机设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintEventEventArgs.PrintDocument">
      <summary>
            打印文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintPageEventEventArgs">
      <summary>
            打印每页内容事件参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.PageIndex">
      <summary>
            当前的从0开始计算的页码数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.Cancel">
      <summary>
            用户是否取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.BodyBounds">
      <summary>
            正文边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.DefaultPageSettings">
      <summary>
            默认页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.PrinterSettings">
      <summary>
            默认打印机设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintPageEventEventArgs.PrintDocument">
      <summary>
            打印文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs">
      <summary>
            打印时查询页面设置事件参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.PageIndex">
      <summary>
            从0开始计算的页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.Cancel">
      <summary>
            用户是否取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.PrinterName">
      <summary>
            当前使用的打印机名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.PageSettings">
      <summary>
            页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.DefaultPageSettings">
      <summary>
            默认页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.PrinterSettings">
      <summary>
            默认打印机设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs.PrintDocument">
      <summary>
            打印文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs">
      <summary>
            查询辅助录入使用的列表项目事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.GetItem(System.Int32)">
      <summary>
            获得字符串
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.AddItem(System.String)">
      <summary>
            添加字符串
            </summary>
      <param name="item">
      </param>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.ContainerElement">
      <summary>
            插入点所在的容器元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.Items">
      <summary>
            字符串列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.Count">
      <summary>
            字符串个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.PreWord">
      <summary>
            检测用的前置文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterQueryAssistInputItemsEventArgs.Handled">
      <summary>
            是否已经处理过的，无需后续处理
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterReadFileContentEventArgs">
      <summary>
            读取文件内容事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterReadFileContentEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">相关的文档元素对象</param>
      <param name="fileName">文件名</param>
      <param name="fileSystemName">文件系统名称</param>
    </member>
    <member name="M:DCSoft.Writer.WriterReadFileContentEventArgs.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterReadFileContentEventArgs.GetResultBinary">
      <summary>
            获得所得的二进制数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.SpecifyTitle">
      <summary>
            用户强制制定的文档标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.AppHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.FileSystem">
      <summary>
            指定的虚拟文件系统对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.FileExisted">
      <summary>
            文件是否存在
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.ResultBase64String">
      <summary>
            已BASE64表示的读取到的文件内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.ResultEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.ResultEncodingName">
      <summary>
            结果文本编码名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.ResultBinary">
      <summary>
            读取到的二进制内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.Handled">
      <summary>
            事件已经被处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReadFileContentEventArgs.Message">
            /// <summary>
            用户信息
            </summary></member>
    <member name="T:DCSoft.Writer.WriterReportErrorEventArgs">
      <summary>
            报告错误事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterReportErrorEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="msg">错误消息</param>
      <param name="details">详细信息</param>
    </member>
    <member name="P:DCSoft.Writer.WriterReportErrorEventArgs.Message">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReportErrorEventArgs.Details">
      <summary>
            错误的详细信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterReportErrorEventArgs.Handled">
      <summary>
            事件是否被处理了
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterSaveFileContentEventArgs">
      <summary>
            保存文件内容事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterSaveFileContentEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String,System.Byte[])">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">相关的文档元素对象</param>
      <param name="fileName">文件名</param>
      <param name="fileSystemName">文件系统名称</param>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.UserParameter">
      <summary>
            用户参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.AppHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.FileSystem">
      <summary>
            指定的虚拟文件系统对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.BinaryContentToSave">
      <summary>
            要保存的二进制数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.Base64ContentToSave">
      <summary>
            要保存的BASE64格式的二进制数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.Result">
      <summary>
            操作是否成功
             </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.Message">
      <summary>
            用户信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSaveFileContentEventArgs.Handled">
      <summary>
            事件已经处理， 无需后续处理
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterSectionElementCancelEventArgs">
      <summary>
            可取消的文档节元素事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterSectionElementCancelEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextSectionElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="doc">文档对象</param>
      <param name="sec">文档节元素</param>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementCancelEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementCancelEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementCancelEventArgs.SectionElement">
      <summary>
            文档节对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterSectionElementEventArgs">
      <summary>
            文档节元素事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterSectionElementEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextSectionElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="doc">文档对象</param>
      <param name="sec">文档节元素</param>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterSectionElementEventArgs.SectionElement">
      <summary>
            文档节对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterShowDialogEventArgs">
      <summary>
            显示对话框事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterShowDialogEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.Windows.Forms.Form,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="dlg">对话框对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterShowDialogEventArgs.SetOKDialogResult">
      <summary>
            设置返回结果为确定
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterShowDialogEventArgs.SetCancelDialogResult">
      <summary>
            设置返回结果为取消
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterShowDialogEventArgs.Dialog">
      <summary>
            对话框对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterShowDialogEventArgs.DialogTypeName">
      <summary>
            对话框类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterShowDialogEventArgs.Handled">
      <summary>
            事件已经处理了，无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterShowDialogEventArgs.DialogResult">
      <summary>
            对话框返回状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterStartEditEventArgs">
      <summary>
            控件开始编辑文档事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterStartEditEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="doc">文档对象</param>
    </member>
    <member name="P:DCSoft.Writer.WriterStartEditEventArgs.DocumentID">
      <summary>
            文档编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStartEditEventArgs.ContainerElement">
      <summary>
            触发事件的容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStartEditEventArgs.Readonly">
      <summary>
            文档内容只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStartEditEventArgs.CanDetectAgain">
      <summary>
            以后能否还能继续检测
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStartEditEventArgs.ReloadDocument">
      <summary>
            重新加载了文档
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterTableRowHeightChangedEventArgs">
      <summary>
            表格行高度改变事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterTableRowHeightChangedEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextTableRowElement,System.Single,System.Single)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="document">文档对象</param>
      <param name="row">表格行元素对象</param>
      <param name="newHeight">新的高度</param>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangedEventArgs.RowElement">
      <summary>
            表格行元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangedEventArgs.OldHeight">
      <summary>
            旧的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangedEventArgs.NewHeight">
      <summary>
            新的高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterTableRowHeightChangingEventArgs">
      <summary>
            表格行高度正在改变事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterTableRowHeightChangingEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextTableRowElement,System.Single)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="document">文档对象</param>
      <param name="row">表格行元素对象</param>
      <param name="newHeight">新的高度</param>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangingEventArgs.RowElement">
      <summary>
            表格行元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangingEventArgs.OldHeight">
      <summary>
            旧的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangingEventArgs.NewHeight">
      <summary>
            新的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterTableRowHeightChangingEventArgs.Cancel">
      <summary>
            是否取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentLayoutDirectionStyle">
      <summary>
            文档内容排版方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentLayoutDirectionStyle.Default">
      <summary>
            默认样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentLayoutDirectionStyle.LeftToRight">
      <summary>
            从左到右排版
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentLayoutDirectionStyle.RightToLeft">
      <summary>
            从右到左排版
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentLayoutDirectionStyle.Invalidate">
      <summary>
            无效值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCBackgroundTextOutputMode">
      <summary>
            背景文字输出模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBackgroundTextOutputMode.None">
      <summary>
            不输出
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBackgroundTextOutputMode.Whitespace">
      <summary>
            输出空白字符
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBackgroundTextOutputMode.Output">
      <summary>
            输出文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBackgroundTextOutputMode.Underline">
      <summary>
            输出为下划线
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCCAMode">
      <summary>
            CA运行模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCCAMode.Disabled">
      <summary>
            禁止CA功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCCAMode.Software">
      <summary>
            采用软件CA功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCCAMode.Hardware">
      <summary>
            采用硬件CA功能。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCDefaultValueType">
      <summary>
            默认值类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.None">
      <summary>
            没有设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.Empty">
      <summary>
            空白内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.CurrentDate">
      <summary>
            当前日期
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.CurrentTime">
      <summary>
            当前时间
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.CurrentDateTime">
      <summary>
            当前日期时间
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.CurrnetUserID">
      <summary>
            当前用户号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDefaultValueType.CurrentUserName">
      <summary>
            当前用户名
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCFastInputMode">
      <summary>
            快速录入方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.None">
      <summary>
            无设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.NextField">
      <summary>
            输入域之前
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.BeforeFieldBegin">
      <summary>
            输入域前置边界符号之前。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.AfterFieldBegin">
      <summary>
            输入域前置边界符号之后。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.BeforeFieldEnd">
      <summary>
            输入域后置边界符号之前。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFastInputMode.AfterFieldEnd">
      <summary>
            输入域后置边界符号之后。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCFileWriter">
      <summary>
            文件书写器
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCFunctionLevel">
      <summary>
            功能等级
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevel.Base">
      <summary>
            普及版功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevel.Professional">
      <summary>
            专业版功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevel.Full">
      <summary>
            旗舰版，包含所有功能。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevel.Custom">
      <summary>
            自定义授权清单
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCRenderVisibility">
      <summary>
            渲染可见性设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCRenderVisibility.Default">
      <summary>
            默认行为
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCRenderVisibility.None">
      <summary>
            不打印，不占据排版位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCRenderVisibility.Hidden">
      <summary>
            不打印，但占据排版位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCRenderVisibility.Visible">
      <summary>
            打印
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCProductForType">
      <summary>
            产品适用范围
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProductForType.All">
      <summary>
            适用于所有产品，包括WINFORM和ASP.NET、WEBForm,MVC,但只适用于WIN32平台。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProductForType.WinFormOnly">
      <summary>
            只适用于WIN32平台的WINFORM程序。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProductForType.ASPNETOnly">
      <summary>
            只适用于WIN32平台的ASP.NET程序，包括WEBFORM和MVC。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProductForType.CoreOnly">
      <summary>
            只适用于ASP.NET Core,可适用于LINUX等跨平台。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProductForType.WASM">
      <summary>
            用于浏览器客户端的WebAssembly
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCWordBreakStyle">
      <summary>
            文档排版时单词(连续的英文或数字)断开样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCWordBreakStyle.Normal">
      <summary>
            尽量不断开
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCWordBreakStyle.BreakAll">
      <summary>
            根据需要任意断开
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCWriterServierContainer">
      <summary>
            DCWriter服务对象容器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DCWriterServierContainer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCWriterServierContainer.Default">
      <summary>
            默认容器
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentConvert">
      <summary>
            文档转换功能
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCDocumentTextOutputMode">
      <summary>
            文档正文输出选项,本选项可以叠加使用，并影响XTextDocument.Text属性的返回值和以TXT格式保存的文件内容。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.Default">
      <summary>
            默认模式，只包含正文，包含背景文字，不包括边框文字。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeHeader">
      <summary>
            包含页眉文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeFooter">
      <summary>
            包含页脚文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeBody">
      <summary>
            包含正文内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeBackgroundText">
      <summary>
            包含输入域背景文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeBorderText">
      <summary>
            包含输入域边界文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCDocumentTextOutputMode.IncludeHiddenText">
      <summary>
            包含隐藏文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCFunctionLevelInfo">
      <summary>
            功能授权等级信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevelInfo.Level">
      <summary>
            等级,实际上是DCFunctionLevel枚举类型。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevelInfo.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCFunctionLevelInfo.ShowRisk">
      <summary>
            是否显示风险提示信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ErrorLogTextBuffer.GetFileNames(System.String)">
      <summary>
            获得指定目录下所有可用的日志文件名
            </summary>
      <param name="rootPath">指定目录</param>
      <returns>获得的文件名数组</returns>
    </member>
    <member name="T:DCSoft.Writer.FontFileManagerBase">
      <summary>
            字体文件管理器基础类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.FontFileManagerBase._Instance">
      <summary>
            对象全局静态实例
            </summary>
    </member>
    <member name="M:DCSoft.Writer.FontFileManagerBase.GetDefaultFontName(System.Char)">
      <summary>
            获得指定字符使用的默认字体名称
            </summary>
      <param name="c">字符值</param>
      <returns>默认字体名称</returns>
    </member>
    <member name="M:DCSoft.Writer.FontFileManagerBase.SetDefaultFont(System.Char,System.Char,System.String)">
      <summary>
            设置默认字体
            </summary>
      <param name="startChar">字符开始编号</param>
      <param name="endChar">字符结束编号</param>
      <param name="fontName">字体名称</param>
    </member>
    <member name="P:DCSoft.Writer.FontFileManagerBase.Instance">
      <summary>
            对象全局静态实例
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterDrawShapeContentEventArgs">
      <summary>
            绘制图形事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorBlack">
      <summary>
            黑色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorWhite">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorRed">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorBlue">
      <summary>
            蓝色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorYellow">
      <summary>
            黄色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMColorGreen">
      <summary>
            绿色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMViewBoundsLeft">
      <summary>
            获得视图的左端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMViewBoundsTop">
      <summary>
            获得视图的顶端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMViewBoundsWidth">
      <summary>
            获得视图的边界的宽度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMViewBoundsHeight">
      <summary>
            获得视图的边界高度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制线段
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="x1">起点X坐标</param>
      <param name="y1">起点Y坐标</param>
      <param name="x2">终点X坐标</param>
      <param name="y2">终点Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制方框
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMFillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充矩形
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDrawDrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制椭圆
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMFillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充椭圆
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDrawString(System.String,System.String,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制字符串
            </summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="alignment">水平对齐方式,0:左对齐，1:居中对齐，2:右对齐</param>
      <param name="lineAlignment">垂直对齐方式,0:靠上对齐，1:居中对齐，2:靠下对齐</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMMeasureStringWidth(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示宽度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMMeasureStringHeight(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示高度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMGetFontHeight(System.String,System.Single)">
      <summary>
            获得字体高度
            </summary>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <returns>字体高度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMLastErrorMessage">
      <summary>
            最后一次操作的错误信息
            </summary>
      <returns>错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            将ARGB的颜色值转换为整数
            </summary>
      <param name="a">A</param>
      <param name="r">R</param>
      <param name="g">G</param>
      <param name="b">B</param>
      <returns>颜色整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDisposeImage(System.Int32)">
      <summary>
            销毁图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GetCOMImage(System.Int32)">
      <summary>
            内部的获得图片对象
            </summary>
      <param name="index">图片句柄</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.COMDrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制图片
            </summary>
      <param name="imageIndex">图片句柄，源自COMLoadImageFromFile()/COMLoadImageFromBinary()/COMLoadImageFromBase64String().</param>
      <param name="left">左端位置</param>
      <param name="top">顶端位置</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsGetFontHeight(System.Drawing.Font)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsGetFontHeight(DCSoft.Drawing.XFontValue)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Drawing.RectangleF,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsFillRoundRectangle(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            填充圆角矩形
            </summary>
      <param name="c">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterDrawShapeContentEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextCustomShapeElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="document">文档对象</param>
      <param name="shapeElement">图形文档元素对象</param>
      <param name="args">绘制图形事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.GraphicsAutoDisposeImageForPDF">
      <summary>
            在输出PDF时自动销毁PDF里面的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.ShapeElement">
      <summary>
            自定义图形对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.ViewBounds">
      <summary>
            元素视图区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.Sytle">
      <summary>
            文档样式对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.Graphics">
      <summary>
            画布对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterDrawShapeContentEventArgs.PageIndex">
      <summary>
            当前页码
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ICaretProvider">
      <summary>
            光标提供者接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ICaretProvider.Hide">
      <summary>
            隐藏光标
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.ICaretProvider.Create(System.Int32,System.Int32,System.Int32)">
      <summary>
            创建光标对象
            </summary>
      <param name="hBitmap">图片句柄</param>
      <param name="nWidth">光标宽度</param>
      <param name="nHeight">光标高度</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.ICaretProvider.SetPos(System.Int32,System.Int32)">
      <summary>
            设置光标位置
            </summary>
      <param name="x">X坐标</param>
      <param name="y">Y坐标</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.ICaretProvider.Show">
      <summary>
            显示光标
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.DataEncryptProvider">
      <summary>
            数据加密功能提供者接口
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DataEncryptProvider.Null">
      <summary>
            无任何操作的数据加密提供者对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptProvider.AddProvider(System.String,DCSoft.Writer.DataEncryptProvider)">
      <summary>
            添加提供者对象
            </summary>
      <param name="providerName">对象名称</param>
      <param name="provider">提供者对象</param>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptProvider.GetProvider(System.String)">
      <summary>
            获得提供者
            </summary>
      <param name="providerName">名称</param>
      <returns>获得的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptProvider.Encrypt(DCSoft.Writer.DataEncryptArgs)">
      <summary>
            加密数据
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptProvider.Decrypt(DCSoft.Writer.DataEncryptArgs)">
      <summary>
            解密数据
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptProvider.Default">
      <summary>
            默认提供者
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DataEncryptArgs">
      <summary>
            数据加密、解密操作参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptArgs.GetAttribute(System.String)">
      <summary>
            获得自定义属性
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptArgs.SetAttribute(System.String,System.String)">
      <summary>
            设置自定义属性
            </summary>
      <param name="name">属性名</param>
      <param name="strValue">属性值</param>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptArgs.SourceData">
      <summary>
            要处理的原始数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptArgs.ResultContent">
      <summary>
            处理后的结果数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptArgs.Message">
      <summary>
            相关消息文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptArgs.Attributes">
      <summary>
            自定义属性值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DataEncryptResult">
      <summary>
            数据加密结果对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.Load(System.Byte[])">
      <summary>
            初始化对象
            </summary>
      <param name="bs">二进制数据</param>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.ToBinary">
      <summary>
            将对象内容转换为BASE64字符串
            </summary>
      <returns>BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.GetAttribute(System.String)">
      <summary>
            获得自定义属性
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.SetAttribute(System.String,System.String)">
      <summary>
            设置自定义属性
            </summary>
      <param name="name">属性名</param>
      <param name="strValue">属性值</param>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.Encrypt(DCSoft.Writer.DataEncryptProvider)">
      <summary>
            加密数据
            </summary>
      <param name="provider">数据加密器</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.DataEncryptResult.Decrypt(DCSoft.Writer.DataEncryptProvider)">
      <summary>
            解密数据
            </summary>
      <param name="provider">加密提供者</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptResult.SourceContent">
      <summary>
            原始数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptResult.EncryptContent">
      <summary>
            加密后的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptResult.ProviderName">
      <summary>
            加密器名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptResult.PreviewTextLength">
      <summary>
            预览文本长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DataEncryptResult.Attributes">
      <summary>
            自定义属性值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.IDCTabIndexManager.MatchMoveFocusHotKey(DCSoft.Writer.MoveFocusHotKeys,System.Windows.Forms.Keys)">
      <summary>
            检测是否命中移动焦点快键键
            </summary>
      <param name="mfk">快键键样式</param>
      <param name="keyCode">键盘按键值</param>
      <returns>是否命中</returns>
    </member>
    <member name="M:DCSoft.Writer.IDCTabIndexManager.GetNextElement(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            获得Tab顺序中的下一个元素对象
            </summary>
      <param name="srcElement">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.GlobalDebugConfig">
      <summary>
            全局性的调试配置信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GlobalDebugConfig.Enable">
      <summary>
            是否启用该功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GlobalDebugConfig.RealTimeLoad">
      <summary>
            实时加载
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GlobalDebugConfig.ShowMessageWhenCreateControl">
      <summary>
            创建控件时显示消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GlobalDebugConfig.ShowMessageWhenDisposeControl">
      <summary>
            创建控件时显示消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.GlobalDebugConfig.Instance">
      <summary>
            对象唯一静态对象实例
            </summary>
    </member>
    <member name="T:DCSoft.Writer.HtmlAttributeAttribute">
      <summary>
            输出到HTML属性中的标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.HtmlAttributeAttribute.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.HtmlAttributeAttribute.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="name">指定属性名</param>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeAttribute.ValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeAttribute.AttributeName">
      <summary>
            指定的属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeAttribute.AutoUseAttributeString">
      <summary>
            自动使用属性字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeAttribute.DetectDefaultValue">
      <summary>
            检测默认值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.HtmlAttributeValueType">
      <summary>
            属性数据类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.HtmlAttributeValueType.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.HtmlAttributeValueType.Binary">
      <summary>
            二进制类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.HtmlAttributeValueType.Json">
      <summary>
            JSON类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.HtmlAttributeBindingInfo">
      <summary>
            HTML属性绑定信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.HtmlAttributeBindingInfo.GetBindingPropertyNames(System.Type)">
      <summary>
            获得绑定的属性名称
            </summary>
      <param name="t">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeBindingInfo.ValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeBindingInfo.PropertyName">
      <summary>
            属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeBindingInfo.AttributeName">
      <summary>
            序列化使用的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.HtmlAttributeBindingInfo.DetectDefaultValue">
      <summary>
            检测默认值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCInsertRowDownUseHotKeys">
      <summary>
            使用快捷键在下面插入表格行的模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCInsertRowDownUseHotKeys.Disable">
      <summary>
            禁止使用快捷键在下面插入表格行。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCInsertRowDownUseHotKeys.EnableOnlyForLastRow">
      <summary>
            只有是表格的最后一行才启用这种行为。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCInsertRowDownUseHotKeys.EnableInAllCases">
      <summary>
            在所有状态下都启用这种行为。无论表格行是否是表格的最后一行都启用这种行为。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.IGetSetAttribute">
      <summary>
            设置获得自定义属性的接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.IGetSetAttribute.GetAttribute(System.String)">
      <summary>
            获得自定义属性值
            </summary>
      <param name="attrName">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.IGetSetAttribute.SetAttribute(System.String,System.String)">
      <summary>
            设置自定义属性值
            </summary>
      <param name="attrName">属性名</param>
      <param name="attrValue">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.IImmProvider">
      <summary>
            输入法操作器接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.IsImmOpen">
      <summary>
            判断指定的窗口中输入法是否打开
            </summary>
      <returns>输入法是否打开</returns>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.SetImmPos(System.Int32,System.Int32)">
      <summary>
            为指定的窗口设置输入法的位置
            </summary>
      <param name="x">输入法位置的X坐标</param>
      <param name="y">输入法位置的Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.BackConversionStatus">
      <summary>
            备份转换状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.RestoreConversionStatus">
      <summary>
            还原转换状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.IsWM_IME_NOTIFY_IMN_SETOPENSTATUS(System.Windows.Forms.Message)">
      <summary>
            是否为更新输入法位置的消息
            </summary>
      <param name="msg">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.GetErrorMessage">
      <summary>
            获得错误提示信息
            </summary>
      <returns>信息</returns>
    </member>
    <member name="M:DCSoft.Writer.IImmProvider.EnsureShapeToggle">
      <summary>
            设置为半角输入状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.InsertObjectEventHandler">
      <summary>
            向文档插入对象事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.LicenseDistributer">
      <summary>
            授权分发器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.LicenseDistributer.DefaultUpdateIntervalInSeconds">
      <summary>
            默认的间隔时间，为60秒。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.LicenseDistributer._ServersForDistribute">
      <summary>
            用于分发授权的服务器列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.LicenseDistributer._LocalLicServer">
      <summary>
            本地授权服务器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.LicenseDistributer.Init">
      <summary>
            初始化对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.LicenseDistributer.Run">
      <summary>
            开始工作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.LicenseDistributer.Stop">
      <summary>
            停止工作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.LicenseDistributer.DoLoopDistributeLicense">
      <summary>
            向多个服务器分发授权
            </summary>
    </member>
    <member name="M:DCSoft.Writer.LicenseDistributer.DistributeLicense">
      <summary>
            向多个服务器分发授权
            </summary>
    </member>
    <member name="P:DCSoft.Writer.LicenseDistributer.UpdateIntervalInSeconds">
      <summary>
            更新时间间隔
            </summary>
    </member>
    <member name="P:DCSoft.Writer.LicenseDistributer.ServicePageUrls">
      <summary>
            各个分发目标服务器页面地址列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.MemberExpressionableAttribute">
      <summary>
            允许设置表达式的类型成员
            </summary>
    </member>
    <member name="M:DCSoft.Writer.MemberExpressionableAttribute.#ctor(DCSoft.Writer.MemberEffectLevel)">
      <summary>
            初始化对象
            </summary>
      <param name="effectLevel">
      </param>
    </member>
    <member name="M:DCSoft.Writer.MemberExpressionableAttribute.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.MemberExpressionableAttribute.EffectLevel">
      <summary>
            影响等级
            </summary>
    </member>
    <member name="T:DCSoft.Writer.MemberEffectLevel">
      <summary>
            类型成员影响等级特性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.DOM">
      <summary>
            只修改DOM结构，不影响文档视图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.ElementView">
      <summary>
            影响本元素的文档视图。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.ElementLayout">
      <summary>
            影响本元素的文档排版和视图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.ParentElementLayout">
      <summary>
            影响父元素的文档视图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.ContentElementLayout">
      <summary>
            影响容器元素的文档视图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MemberEffectLevel.DocumentLayout">
      <summary>
            影响整个文档视图
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ScriptLanguageType">
      <summary>
            脚本语言类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ScriptLanguageType.VBNET">
      <summary>
            VB.NET脚本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ScriptLanguageType.JScript">
      <summary>
            JScript脚本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.TibetanHelper">
      <summary>
            处理藏文的模块
            </summary>
    </member>
    <member name="F:DCSoft.Writer.TibetanHelper.VowelValues">
      <summary>
            元音字母
            </summary>
    </member>
    <member name="M:DCSoft.Writer.TibetanHelper.IsWordEndChar(System.Char)">
      <summary>
            判断是否为单词的结束字符
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.TibetanHelper.IsTibetanChar(System.Char)">
      <summary>
            判断是否为藏文字符
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.ControlHelper">
      <summary>
            控件类型相关的帮助功能模块
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.GetProperty(System.Object,System.String)">
      <summary>
            获得属性
            </summary>
      <param name="ctl">对象</param>
      <param name="propertyName">属性名</param>
      <returns>获得的属性描述对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.SetControlValue(System.Object,System.String,System.String)">
      <summary>
            设置控件数据
            </summary>
      <param name="ctl">控件对象</param>
      <param name="propertyName">属性名</param>
      <param name="text">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.GetControlValue(System.Object,System.String)">
      <summary>
            获得控件属性值
            </summary>
      <param name="ctl">控件对象</param>
      <param name="propertyName">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.TrySetControlSize(DCSoft.Writer.Dom.XTextControlHostElement,System.Windows.Forms.Control,System.Single,System.Single)">
      <summary>
            试图设置控件大小
            </summary>
      <param name="element">文档元素对象</param>
      <param name="ctl">控件对象</param>
      <param name="viewWidth">视图宽度</param>
      <param name="viewHeight">视图高度</param>
      <returns>设置后的控件大小</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.GetControlFullTypeName(System.Type)">
      <summary>
            获得类型的全名
            </summary>
      <param name="type">类型对象</param>
      <returns>全名</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.GetControlType(System.String,System.Type)">
      <summary>
            获得控件类型
            </summary>
      <param name="typeName">类型名称</param>
      <param name="specifyBaseType">指定的基础类型</param>
      <returns>获得的控件类型</returns>
    </member>
    <member name="M:DCSoft.Writer.ControlHelper.WPFElementToImage(System.Object)">
      <summary>
            将WPF元素转换为图片对象
            </summary>
      <param name="wpfElement">WPF元素</param>
      <returns>图片对象</returns>
    </member>
    <member name="T:DCSoft.Writer.WriterAfterShowDialogEventHandler">
      <summary>
            对话框关闭后事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforePlayMediaEventHandler">
      <summary>
            准备播放媒体事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeRefreshPagesEventHandler">
      <summary>
            编辑器事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs">
      <summary>
            编辑器事件参数类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.#ctor">
      <summary>
            无参数的构造函数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.HiddenLine(DCSoft.Writer.Dom.XTextLine)">
      <summary>
            隐藏表格行
            </summary>
      <param name="line">文档行对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.LineVisibleModified">
      <summary>
            文档可见性是否改变标记
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.RenderMode">
      <summary>
            正在使用的呈现模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.Body">
      <summary>
            文档正文对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterBeforeRefreshPagesEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterGetCustomContextMenuEventHandler">
      <summary>
            创建自定义快捷菜单事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="eventArgs">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterGetCustomContextMenuEventArgs">
      <summary>
            创建自定义快捷菜单事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            创建对象
            </summary>
      <param name="ctl">编辑控件</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.AddContextMenuItem5(System.String,System.String,System.String,System.String,System.EventHandler)">
      <summary>
            添加快捷菜单项目
            </summary>
      <param name="name">菜单项目名称</param>
      <param name="commandName">编辑器命令名</param>
      <param name="text">文本</param>
      <param name="iconBase64String">图标</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.AddContextMenuItem2(System.String,System.String)">
      <summary>
            添加快捷菜单项目
            </summary>
      <param name="text">菜单文本</param>
      <param name="commandName">菜单命令名称</param>
      <returns>创建出来的项目</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.AddContextMenuSeparator">
      <summary>
            添加一个分割条
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.Manager">
      <summary>
            快捷菜单管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.Control">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.CurrentElement">
      <summary>
            当前文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.ElementTypeName">
      <summary>
            当前文档元素类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.ParentTypeNames">
      <summary>
            各级父节点文档元素类型名称。各个名称用逗号分开。不含当前元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterGetCustomContextMenuEventArgs.CustomMenu">
      <summary>
            用户指定的快捷菜单对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterGetSignToolTipEventHandler">
      <summary>
            生成签名图片提示文本事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintEventHandler">
      <summary>
            打印事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterElementCheckedChangedEventHandler">
      <summary>
            元素勾选状态发生改变事件
            </summary>
      <param name="elementID">文档元素编号</param>
      <param name="elementName">文档元素名称</param>
      <param name="elementValue">文档元素值</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="T:DCSoft.Writer.WriterDocumentPrintedEventHandler">
      <summary>
            文档打印事件
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterDrawShapeContentEventHandler">
      <summary>
            绘制图形事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterExpressionFunctionEventHandler">
      <summary>
            编辑器表达式执行函数事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterGetAdornTextEventHandler">
      <summary>
            查询扩展文本事件委托对象
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeFieldContentEditEventHandler">
      <summary>
            下拉列表选择事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterQueryAssistInputItemsEventHandler">
      <summary>
            查询辅助录入使用的字符串列表事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterReportErrorEventHandler">
      <summary>
            保存错误事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterResourcesCore">
      <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.ResourceManager">
      <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Culture">
      <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.ArrowDropdown">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Blank">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.buttonbackgrounddown">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.buttonbackgroundover">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.buttonbackgroundup">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.CheckBoxChecked">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.CheckBoxUnChecked">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Collapse">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.DC24">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.DCLogon64">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.DCLogon96">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.DragHandle">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.error">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Expand">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Flag_Expression">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconAssembly">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconBigControl">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconControl">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconDocumentImage">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconFrm">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.IconWPFElement">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.js">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.KBBlankEntry">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.KBListEntry">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.KBListItem">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.KBTemplate">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.linebreak">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.lockflag">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.ParagraphFlagLeftToRight">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.ParagraphFlagRightToLeft">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.RadioChecked">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.RadioUnChecked">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.RuleButton">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.RuleDownButton">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.RuleUpButton">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.sql">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.Warning">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterResourcesCore.warning24">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterSectionElementCancelEventHandler">
      <summary>
            可取消的文档节元素事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterShowDialogEventHandler">
      <summary>
            显示对话框事件委托类型
            </summary>
      <param name="eventSender">消息发送者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.DCBooleanValue">
      <summary>
            布尔状态值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValue.True">
      <summary>
            只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValue.False">
      <summary>
            不只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValue.Inherit">
      <summary>
            继承父节点
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCProcessStates">
      <summary>
            操作状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProcessStates.Always">
      <summary>
            总是执行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProcessStates.Once">
      <summary>
            只执行一次
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCProcessStates.Never">
      <summary>
            从不执行
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCStdImageKey">
      <summary>
            标准图标列表编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.None">
      <summary>
            无效编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.CheckBoxChecked">
      <summary>
            勾选状态的复选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.CheckBoxUnchecked">
      <summary>
            不是勾选状态的复选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.RadioBoxChecked">
      <summary>
            勾选状态的单选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.RadioBoxUnchecked">
      <summary>
            不是勾选状态的单选框,必须为16*16的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.ParagraphFlagLeftToRight">
      <summary>
            从左到右时的段落符号，必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.ParagraphFlagRightToLeft">
      <summary>
            从右到左时的段落符号,必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.Linebreak">
      <summary>
            换行符号,必须为9*12的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.DragHandle">
      <summary>
            拖拽内容使用的把柄,必须为13*13的BMP图片格式,透明色为红色。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.SystemCheckBoxChecked">
      <summary>
            操作系统使用的勾选状态的复选框,该图标是只读的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.SystemCheckBoxUnchecked">
      <summary>
            操作系统使用的不是勾选状态的复选框,该图标是只读的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.SystemRadioBoxChecked">
      <summary>
            操作系统使用的勾选状态的单选框,该图标是只读的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.SystemRadioBoxUnchecked">
      <summary>
            操作系统使用的不是勾选状态的单选框,该图标是只读的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.Collapse">
      <summary>
            收缩
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCStdImageKey.Expand">
      <summary>
            展开
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCVisibleState">
      <summary>
            可见性状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCVisibleState.Visible">
      <summary>
            可见
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCVisibleState.Hidden">
      <summary>
            隐藏的
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCVisibleState.Default">
      <summary>
            默认
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCVisibleState.AlwaysVisible">
      <summary>
            一直可见
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCXmlSerializablePackage">
      <summary>
            XML序列化数据封装包
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.#ctor(System.Object)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.GetSchema">
      <summary>
            获得格式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.ReadXml(System.Xml.XmlReader)">
      <summary>
            读取XML
            </summary>
      <param name="reader">
      </param>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.WriteXml(System.Xml.XmlWriter)">
      <summary>
            写入XML文档
            </summary>
      <param name="writer">
      </param>
    </member>
    <member name="M:DCSoft.Writer.DCXmlSerializablePackage.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.DCXmlSerializablePackage.Value">
      <summary>
            对象数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCXmlSerializablePackage.ValueTypeName">
      <summary>
            数据类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.DCXmlSerializablePackage.AutoConvertToXMLElement">
      <summary>
            当无法找到实体类型时自动转换为XML元素对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterEditElementValueEventHandler">
      <summary>
            编辑文档元素数值事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementVisibility">
      <summary>
            元素可见性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementVisibility.Visible">
      <summary>
            显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementVisibility.Hidden">
      <summary>
            隐藏，但占据排版位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementVisibility.None">
      <summary>
            隐藏，而且不占据排版位置
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentReadonlyState">
      <summary>
            内容只读状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentReadonlyState.True">
      <summary>
            只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentReadonlyState.False">
      <summary>
            不只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentReadonlyState.Inherit">
      <summary>
            继承父节点
            </summary>
    </member>
    <member name="T:DCSoft.Writer.QueryUserHistoryDisplayTextEventHandler">
      <summary>
            查询用户历史痕迹显示文本事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ContentProtectType">
      <summary>
            内容保护模式
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.ContentProtectType.None">
      <summary>
            无设置，不保护
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentProtectType.Content">
      <summary>
            保护内容，但可以在中间插入内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentProtectType.Range">
      <summary>
            保护区域，这个区域中间不可插入内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentViewEncryptType">
      <summary>
            内容视图加密方式
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.ContentViewEncryptType.None">
      <summary>
            不加密
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentViewEncryptType.Partial">
      <summary>
            部分加密,前面和后面一个字符不加密
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentViewEncryptType.Both">
      <summary>
            全部加密，所有内容加密
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentGridLineType">
      <summary>
            内容网格线类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentGridLineType.None">
      <summary>
            不显示网格线
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentGridLineType.Display">
      <summary>
            显示网格线
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentGridLineType.ExtentToBottom">
      <summary>
            网格显示延伸到容器低端
            </summary>
    </member>
    <member name="T:DCSoft.Writer.CoreCommandNames">
      <summary>
            内核模块使用到的命令名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.ElementProperties">
      <summary>
            修改元素属性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.FilePageSettings">
      <summary>
            文档页面设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.InsertComment">
      <summary>
            插入批注
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.EditComment">
      <summary>
            编辑文档批注
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.DeleteComment">
      <summary>
            删除批注
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.DeleteAllComment">
      <summary>
            删除文档中所有的批注
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.TraditionalToSimplified">
      <summary>
            繁体转换为简体
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.SimplifiedToTraditional">
      <summary>
            简体转换为繁体
            </summary>
    </member>
    <member name="F:DCSoft.Writer.CoreCommandNames.SimplifiedSwapTraditional">
      <summary>
            简体和繁体相互转换
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentContentSourceTypes">
      <summary>
            文档内容来源类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.Unknown">
      <summary>
            未知类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.None">
      <summary>
            无来源
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.NewFile">
      <summary>
            使用NewFile创建的文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.TextReader">
      <summary>
            来自文本读取器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.Stream">
      <summary>
            来自文件流
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentContentSourceTypes.File">
      <summary>
            来自文件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementCancelEventHandler">
      <summary>
            带取消功能的文档事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementEventHandler">
      <summary>
            文档元素事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementExpressionEventHandler">
      <summary>
            文档元素执行表达式事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementKeyEventHandler">
      <summary>
            文档元素键盘事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementLoadEventHandler">
      <summary>
            文档元素加载事件委托对象
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementMouseEventHandler">
      <summary>
            文档元素鼠标事件参数委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementPaintEventHandler">
      <summary>
            绘制文档元素事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementQueryStateEventHandler">
      <summary>
            查询文档元素状态信息事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementValidatingEventHandler">
      <summary>
            文档元素内容验证事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.ElementValidatingState">
      <summary>
            文档元素校验结果
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementValidatingState.Success">
      <summary>
            校验成功，无需进行后续的校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementValidatingState.Pass">
      <summary>
            校验通过，还需进行后续校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementValidatingState.Fail">
      <summary>
            校验失败
            </summary>
    </member>
    <member name="T:DCSoft.Writer.IErrorReporter">
      <summary>
            错误信息报告者接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.IErrorReporter.ReportError(System.Windows.Forms.IWin32Window,System.String,System.String)">
      <summary>
            报告错误信息
            </summary>
      <param name="parentWindow">显示对话框使用的父窗口对象</param>
      <param name="message">信息</param>
      <param name="details">详细信息</param>
    </member>
    <member name="T:DCSoft.Writer.DefaultErrorReporter">
      <summary>
            默认的错误报告者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.DefaultErrorReporter.ReportError(System.Windows.Forms.IWin32Window,System.String,System.String)">
      <summary>
            报告错误信息
            </summary>
      <param name="parentWindow">显示对话框使用的父窗口对象</param>
      <param name="message">信息</param>
      <param name="details">详细信息</param>
    </member>
    <member name="T:DCSoft.Writer.MoveFocusHotKeys">
      <summary>
            移动输入域焦点的快捷键
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.MoveFocusHotKeys.None">
      <summary>
            无快捷键
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveFocusHotKeys.Default">
      <summary>
            默认方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveFocusHotKeys.Tab">
      <summary>
            Tab键
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveFocusHotKeys.Enter">
      <summary>
            Enter键
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCPermissionControler">
      <summary>
            授权控制器
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.DCPermissionControler.CanDelete(DCSoft.Writer.Dom.XTextDocument,System.Int32,System.Int32)">
      <summary>
            判断是否具有删除的权限
            </summary>
      <param name="document">文档对象</param>
      <param name="creatorIndex">创建记录编号</param>
      <param name="deletorIndex">删除记录编号</param>
      <returns>是否具有删除权限</returns>
    </member>
    <member name="M:DCSoft.Writer.DCPermissionControler.CanModify(DCSoft.Writer.Dom.XTextDocument,System.Int32,System.Int32)">
      <summary>
            判断是否具有修改的权限
            </summary>
      <param name="document">文档对象</param>
      <param name="creatorIndex">要修改的对象的创建记录编号</param>
      <param name="deletorIndex">要修改的对象的删除记录编号</param>
      <returns>是否具有权限</returns>
    </member>
    <member name="P:DCSoft.Writer.DCPermissionControler.LastMessage">
      <summary>
            最后一次判断生成的消息文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UGHelper.SupportUG">
      <summary>
            启用UG功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UGHelper.LinkCharacter">
      <summary>
            连接字符
            </summary>
    </member>
    <member name="M:DCSoft.Writer.UGHelper.SetRuntimeChars(System.Collections.IList)">
      <summary>
            针对维文设置字符元素实际绘制图形使用的字符值
            </summary>
      <param name="elements">文档元素对象</param>
      <returns>是否修改了字符值</returns>
    </member>
    <member name="M:DCSoft.Writer.UGHelper.Enable">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="T:DCSoft.Writer.UserTrackType">
      <summary>
            用户操作痕迹类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UserTrackType.Create">
      <summary>
            插入内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UserTrackType.Delete">
      <summary>
            删除内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.UserTrackType.Comment">
      <summary>
            添加批注
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ValueEditorActiveMode">
      <summary>
            元素数值编辑器激活模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.None">
      <summary>
            无效状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.Default">
      <summary>
            采用默认模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.Program">
      <summary>
            编程激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.F2">
      <summary>
            按下F2激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.GotFocus">
      <summary>
            对象获得输入焦点就激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.MouseDblClick">
      <summary>
            鼠标双击时就激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.MouseClick">
      <summary>
            鼠标左击就激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.MouseRightClick">
      <summary>
            鼠标右击就激活，当控件设置了快捷菜单，则该选项无效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ValueEditorActiveMode.Enter">
      <summary>
            Enter键激活。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterButtonClickEventHandler">
      <summary>
            文档按钮事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterDataFormats">
      <summary>
            编辑器控件处理的数据格式功能标记
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.None">
      <summary>
            无任何格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.Text">
      <summary>
            普通文本格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.RTF">
      <summary>
            RTF格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.Html">
      <summary>
            HTML格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.XML">
      <summary>
            XML格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.Image">
      <summary>
            图片格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.CommandFormat">
      <summary>
            编辑器命令格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.FileSource">
      <summary>
            本地文件格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.KBEntry">
      <summary>
            知识库节点格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterDataFormats.All">
      <summary>
            支持所有标准格式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.MeasureMode">
      <summary>
            字符测量模式
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.MeasureMode.Default">
      <summary>
            默认方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MeasureMode.RichTextBoxCompatibility">
      <summary>
            RTF兼容模式,.NET CORE不支持该类型。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MeasureMode.OldCompatibility">
      <summary>
            旧格式兼容模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementPropertiesEditEventArgs">
      <summary>
            编辑文档元素属性事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditEventArgs.SetContentEffect(DCSoft.Writer.ContentEffects)">
      <summary>
            设置影响状态
            </summary>
      <param name="efc">新状态</param>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.SimpleElementProperties">
      <summary>
            简洁的编辑元素属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.Host">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.Element">
      <summary>
            正在编辑的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.Elements">
      <summary>
            正在编辑的文档元素对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.LogUndo">
      <summary>
            是否记录重做、撤销操作信息。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.Method">
      <summary>
            操作模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.ParentWindow">
      <summary>
            父窗体对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.UpdateExpressionResult">
      <summary>
            从新计算表达式的结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ElementPropertiesEditEventArgs.ContentEffect">
      <summary>
            操作对文档视图的影响
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementPropertiesEditMethod">
      <summary>
            编辑文档元素属性的操作模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementPropertiesEditMethod.Insert">
      <summary>
            新增元素时编辑文档元素属性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ElementPropertiesEditMethod.Edit">
      <summary>
            编辑元素时编辑文档元素属性
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ModuleStarter">
      <summary>
            自动化模块启动器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ModuleStarter._extensionLoaded">
      <summary>
            扩展包加载标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ModuleStarter._FrameworkPath">
      <summary>
            .NET框架安装目录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.Start">
      <summary>
            执行启动操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.IsWebApplicationMode">
      <summary>
            系统是否输出WEB应用程序模式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.InitWriterAppHost(DCSoft.Writer.WriterAppHost)">
      <summary>
            初始化应用程序宿主对象
            </summary>
      <param name="host">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.AddGlobalModuleStarter(DCSoft.Writer.ModuleStarter)">
      <summary>
            添加全局模块启动器
            </summary>
      <param name="starter">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ModuleStarter.StartAllModule(DCSoft.Writer.WriterAppHost)">
      <summary>
            启动所有的应用程序模块
            </summary>
    </member>
    <member name="P:DCSoft.Writer.ModuleStarter.Started">
      <summary>
            已经执行了的标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentUpdateState">
      <summary>
            内容更新状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentUpdateState.AutoUpdate">
      <summary>
            自动更新
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentUpdateState.UpdateOne">
      <summary>
            只更新一次
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentUpdateState.Updated">
      <summary>
            内容更新过了，不再更新
            </summary>
    </member>
    <member name="T:DCSoft.Writer.PromptProtectedContentMode">
      <summary>
            受保护内容的提示方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.PromptProtectedContentMode.None">
      <summary>
            不提示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.PromptProtectedContentMode.Simple">
      <summary>
            简单的提示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.PromptProtectedContentMode.Details">
      <summary>
            显示详细信息的提示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.PromptProtectedContentMode.Flash">
      <summary>
            内容闪烁提示
            </summary>
    </member>
    <member name="T:DCSoft.Writer.InsertDocumentWithCheckMRIDType">
      <summary>
            粘贴时检查病历编号的类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InsertDocumentWithCheckMRIDType.None">
      <summary>
            没有设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InsertDocumentWithCheckMRIDType.WarringWhenFail">
      <summary>
            若判断不通过则显示警告信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InsertDocumentWithCheckMRIDType.PromptForbitWhenFail">
      <summary>
            若判断不通过则禁止操作，还显示提示信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InsertDocumentWithCheckMRIDType.ForbitWhenFail">
      <summary>
            若判断不通过则禁止操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCValidateIDRepeatMode">
      <summary>
            ID重复性校验行为
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCValidateIDRepeatMode.None">
      <summary>
            不做任何校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCValidateIDRepeatMode.DetectOnly">
      <summary>
            只进行检查，不校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCValidateIDRepeatMode.AutoFix">
      <summary>
            自动修正ID号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCValidateIDRepeatMode.ThrowException">
      <summary>
            抛出异常
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCImageCompressSaveMode">
      <summary>
            图片的压缩存储模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCImageCompressSaveMode.True">
      <summary>
            压缩存储
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCImageCompressSaveMode.False">
      <summary>
            不压缩存储
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCImageCompressSaveMode.Prompt">
      <summary>
            提示用户选择
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentEffects">
      <summary>
            影响文档内容的方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentEffects.None">
      <summary>
            对文档内容没有任何修改，文档无需保存
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentEffects.Content">
      <summary>
            修改了文档内容，但还没有修改DOM结构。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentEffects.Display">
      <summary>
            只是影响到显示，不影响排版，重新绘制即可。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentEffects.Layout">
      <summary>
            影响到文档的排版，需要重新排版重新绘制。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ElementPropertiesEditor">
      <summary>
            文档元素编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditor.SetEditor(System.Type,DCSoft.Writer.ElementPropertiesEditor)">
      <summary>
            设置编辑器
            </summary>
      <param name="elementType">
      </param>
      <param name="editor">
      </param>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditor.GetEditor(System.Type)">
      <summary>
            获得指定文档元素类型使用的元素数值编辑器
            </summary>
      <param name="elementType">文档元素对象</param>
      <remarks>当编辑器承载在IE浏览器中可能存在TypeDescriptor.GetEditor函数无效的情况，
            本函数就是进行替代操作。</remarks>
      <returns>获得的编辑器对象</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditor.IsSupportMethod(DCSoft.Writer.ElementPropertiesEditMethod)">
      <summary>
            判断指定类型的编辑操作是否支持
            </summary>
      <param name="method">编辑操作的方法</param>
      <returns>是否支持</returns>
    </member>
    <member name="M:DCSoft.Writer.ElementPropertiesEditor.Edit(DCSoft.Writer.ElementPropertiesEditEventArgs)">
      <summary>
            编辑文档元素内容
            </summary>
      <param name="args">参数</param>
      <returns>操作是否修改了文档元素的内容</returns>
    </member>
    <member name="T:DCSoft.Writer.EnableState">
      <summary>
            可用状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.EnableState.Default">
      <summary>
            默认状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.EnableState.Enabled">
      <summary>
            可用状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.EnableState.Disabled">
      <summary>
            无效状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterDebugger">
      <summary>
            编辑器调试器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterDebugger.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterDebugger.WriteLine(System.String)">
      <summary>
            输出文本并换行
            </summary>
      <param name="text">文本值</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDebugger.Write(System.String)">
      <summary>
            输出文本
            </summary>
      <param name="text">文本值</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDebugger.DebugLoadingFile(System.String)">
      <summary>
            输出加载文件的调试信息
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.WriterDebugger.DebugLoadFileComplete(System.Int32)">
      <summary>
            输出加载文件完成的调试信息
            </summary>
      <param name="size">加载的数据字节数</param>
    </member>
    <member name="P:DCSoft.Writer.WriterDebugger.Enabled">
      <summary>
            处于允许状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.MoveUnit">
      <summary>
            在文档中移动的单位
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.MoveUnit.Character">
      <summary>
            字符
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveUnit.Word">
      <summary>
            单词
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveUnit.Line">
      <summary>
            文本行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveUnit.Paragraph">
      <summary>
            段落
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveUnit.Cell">
      <summary>
            单元格
            </summary>
    </member>
    <member name="T:DCSoft.Writer.MoveTarget">
      <summary>
            移动目标
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.None">
      <summary>
            无意义
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.DocumentHome">
      <summary>
            文档开头
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.DocumentEnd">
      <summary>
            文档尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.CellHome">
      <summary>
            单元格的开头
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.CellEnd">
      <summary>
            单元格结尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.PreCell">
      <summary>
            上一个单元格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.NextCell">
      <summary>
            下一个单元格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.BeforeTable">
      <summary>
            表格前面
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.AfterTable">
      <summary>
            表格后面
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.BeforeField">
      <summary>
            文档域前面
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.AfterField">
      <summary>
            文档域后面
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.ParagraphHome">
      <summary>
            段落开头
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.ParagraphEnd">
      <summary>
            段落尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.PreLine">
      <summary>
            上一行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.NextLine">
      <summary>
            下一行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.FieldHome">
      <summary>
            输入域开头
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.FieldEnd">
      <summary>
            输入域结尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.Home">
      <summary>
            行首
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.End">
      <summary>
            行尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.PageHome">
      <summary>
            当前页首
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.PageEnd">
      <summary>
            当前页尾
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.ViewHome">
      <summary>
            视图开始位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.MoveTarget.ViewEnd">
      <summary>
            视图结束位置
            </summary>
    </member>
    <member name="T:DCSoft.Writer.FilterValueEventHandler">
      <summary>
            数据过滤器事件委托类型
            </summary>
      <param name="eventSender">发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.InputValueSource">
      <summary>
            输入来源
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueSource.Clipboard">
      <summary>
            数据来自系统剪切板
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueSource.UI">
      <summary>
            数据来用户界面的用户输入
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueSource.DragDrop">
      <summary>
            OLE拖拽
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueSource.Unknow">
      <summary>
            未知
            </summary>
    </member>
    <member name="T:DCSoft.Writer.InputValueType">
      <summary>
            输入的数据类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.Text">
      <summary>
            纯文本数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.RTF">
      <summary>
            RTF文档数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.Html">
      <summary>
            Html文档数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.Image">
      <summary>
            图片数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.FileName">
      <summary>
            拖拽的文件名
            </summary>
    </member>
    <member name="F:DCSoft.Writer.InputValueType.Dom">
      <summary>
            文档DOM数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterAppHost">
      <summary>
            文本编辑器宿主对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterAppHost._DebugMode">
      <summary>
            数据源绑定路径处理提供者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.GetRegisterMachineCode">
      <summary>
            获得注册时使用的本地机器码
            </summary>
      <returns>本地机器码</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.UnRegister">
      <summary>
            取消注册
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.Register(System.String,System.Boolean)">
      <summary>
            进行注册
            </summary>
      <param name="code">注册码</param>
      <param name="saveFile">是否保存文件</param>
      <returns>注册是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.PreloadSystemAsync">
      <summary>
            异步的预先加载一些系统数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.PreloadSystem">
      <summary>
            异步的预先加载一些系统数据
            </summary>
      <remarks>使用预先加载一些数据，可以提高今后编辑器的运行速度，特别是第一次打开文件的速度。</remarks>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.ClearDefaultInstance">
      <summary>
            清空内部的默认对象实例
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.RegisterElementType(System.Type)">
      <summary>
            注册自定义文档元素类型
            </summary>
      <param name="elementType">自定义的文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.RegisterElementType(System.Type,System.String)">
      <summary>
            注册自定义文档元素类型
            </summary>
      <param name="elementType">自定义的文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.GetRegisterElementType(System.String)">
      <summary>
            获得注册的文档元素类型
            </summary>
      <param name="typeName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.CallElementEdtior(DCSoft.Writer.Commands.WriterCommandEventArgs,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementPropertiesEditMethod)">
      <summary>
            调用文档元素编辑器
            </summary>
      <param name="args">编辑器命令参数对象</param>
      <param name="element">文档元素对象</param>
      <param name="method">编辑使用的方法</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.Finalize">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.CreateProperties(System.Type)">
      <summary>
            创建文档元素属性对象
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>创建的文档元素属性对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHost.AddService(System.Type,System.Object)">
      <summary>
            添加服务对象
            </summary>
      <param name="type">
      </param>
      <param name="instance">
      </param>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.LicenseFileName">
      <summary>
            授权文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.IsPreloadSystemAsyncCompleted">
      <summary>
            判断PreloadSystemAsync()启动的后台操作是否完成。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.Default">
      <summary>
            默认对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.Clipboard">
      <summary>
            剪切版功能提供者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.DisableFinalize">
      <summary>
            取消系统销毁对象.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.LinkListProviders">
      <summary>
            联动列表提供者集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.PermissionControler">
      <summary>
            授权控制器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.DateTimeService">
      <summary>
            时间服务器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.ApplicationDataBaseUrl">
      <summary>
            应用程序数据基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.CommandContainer">
      <summary>
            命令容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.KBLibrary">
      <summary>
            宿主使用的知识库对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.KBProvider">
      <summary>
            知识库提供者对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.ErrorReporter">
      <summary>
            错误信息报告者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.UITools">
      <summary>
            宿主使用的UI层工具集,内部会检索Services列表，若没有找到则自动添加默认的UI工具集。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.Services">
      <summary>
            服务器对象容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.FileSystems">
      <summary>
            系统使用的文件系统列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.DebugMode">
      <summary>
            处于调试模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.DefaultFileFormat">
      <summary>
            系统默认文件格式名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.Debuger">
      <summary>
            调试输出对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHost.Configs">
      <summary>
            配置信息对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterAppHostConfig">
      <summary>
            应用程序宿主配置信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterAppHostConfig.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterAppHostConfig.EnableScript">
      <summary>
            启用文档脚本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DocumentValueValidateMode">
      <summary>
            文档数据校验模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentValueValidateMode.None">
      <summary>
            禁止数据校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentValueValidateMode.Dynamic">
      <summary>
            实时的数据校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentValueValidateMode.LostFocus">
      <summary>
            当文本输入域失去输入焦点，也就是说光标离开输入域时才进行数据校验。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DocumentValueValidateMode.Program">
      <summary>
            编辑器不自动进行数据校验，由应用程序编程调用来进行数据校验。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DCAdornTextVisibility">
      <summary>
            扩展文本显示方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCAdornTextVisibility.Hidden">
      <summary>
            隐藏
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCAdornTextVisibility.Actived">
      <summary>
            只显示光标所在元素的扩展文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCAdornTextVisibility.Both">
      <summary>
            显示所有的扩展文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.SelectionHighlightStyle">
      <summary>
            选择区域的高亮度显示方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.SelectionHighlightStyle.None">
      <summary>
            无任何高亮度显示方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.SelectionHighlightStyle.Invert">
      <summary>
            反色高亮度显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.SelectionHighlightStyle.MaskColor">
      <summary>
            使用遮盖色高亮度显示
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentChangedEventHandler">
      <summary>
            文档内容发生改变事件委托类型
            </summary>
      <param name="eventSender">发起者</param>
      <param name="args">事件参数</param>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.ContentChangedEventSource">
      <summary>
            内容修改事件来源
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentChangedEventSource.Default">
      <summary>
            默认方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentChangedEventSource.UndoRedo">
      <summary>
            撤销操作而导致的内容修改
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentChangedEventSource.ValueEditor">
      <summary>
            数值编辑器而导致的内容修改
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentChangedEventSource.Program">
      <summary>
            编程而导致的内容修改
            </summary>
    </member>
    <member name="F:DCSoft.Writer.ContentChangedEventSource.DataBinding">
      <summary>
            数据源绑定而导致的内容修改
            </summary>
    </member>
    <member name="T:DCSoft.Writer.ContentChangingEventHandler">
      <summary>
            文档内容正在发生改变时事件委托类型
            </summary>
      <param name="eventSender">发起者</param>
      <param name="args">事件参数</param>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterConst">
      <summary>
            定义一些常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_ContentChanged">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.IncludeList">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_HTML">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_MHT">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCWriterObjectPrefix">
      <summary>
            DCWriter对象名称前缀
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.CHAR_SPLITER">
      <summary>
            字符 | 的ASCI值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_RTF">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.NullDateTime">
      <summary>
            表示空的时间日期值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst._NothingStringValue">
      <summary>
            表示空白的字符串对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Name_MRID">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_XML">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FS_KBLibrary">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FS_Document">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.ExcludeList">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Header">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Footer">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Body">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DataObjectID">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_Text">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FS_Template">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.NullStringValue">
      <summary>
            表示空白内容的字符串值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCReportApplicationID">
      <summary>
            报表工具模块编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCFriedmanCurveApplicationID">
      <summary>
            产程图模块编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCWriterApplicationID">
      <summary>
            DCWriter模块编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCWriterWebApplicationID">
      <summary>
            DCWriter WEB版模块编号 
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCTimelineApplicationID">
      <summary>
            时间轴模块编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DCFWApplicationID">
      <summary>
            都昌赋能框架模块编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_getformvalue">
      <summary>
            获得元素表单数据，只对XTextInputFieldElement/XTextCheckBoxElement/XTextRadioBoxElement/XTextContainerElement元素有效。
            事件参数类型为“DCSoft.Writer.Dom.XTextDocument.GetElementFormValueForWriteDataSourceArgs”。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_beforeloadfile">
      <summary>
            加载文件前的触发的事件,只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_afterloadfile">
      <summary>
            加载文件后的触发的事件,只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_beforesavefile">
      <summary>
            保存文件前的触发的事件,只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_aftersavefile">
      <summary>
            保存文件后的触发的事件,只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_beginprint">
      <summary>
            打印文档前触发的事件，只对document/window对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_endprint">
      <summary>
            打印文档后触发的事件，只对documentwindow对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_beforeprintpage">
      <summary>
            打印一页文档前触发的事件，只对document/window对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_afterprintpage">
      <summary>
            打印一页文档后触发的事件，只对documentwindow对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_beforeprint">
      <summary>
            打印文档前触发的事件，只对document/window/文档元素对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_afterprint">
      <summary>
            打印文档后触发的事件，只对documentwindow/文档元素对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_drawpageframecontent">
      <summary>
            绘制文档页面框架事件，只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_selectionchange">
      <summary>
            插入点或选择区域发生改变事件，只对document对象有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_reset">
      <summary>
            重置表单数据事件。只对输入域和单、复选框有效。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_blur">
      <summary>
            元素内容执行校验事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_change">
      <summary>
            元素内容发生改变事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_click">
      <summary>
            鼠标单击事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_dblclick">
      <summary>
            鼠标双击事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_focus">
      <summary>
            元素获得焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_keydown">
      <summary>
            键盘按键按下事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_keypress">
      <summary>
            键盘输入字符事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_keyup">
      <summary>
            键盘按键松开事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_mousedown">
      <summary>
            鼠标按键按下事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_mousemove">
      <summary>
            鼠标移动事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_mouseenter">
      <summary>
            鼠标光标进入事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_mouseout">
      <summary>
            鼠标光标离开事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_mouseup">
      <summary>
            鼠标按键松开事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_paste">
      <summary>
            粘帖事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_resize">
      <summary>
            大小发生改变事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_input">
      <summary>
            输入内容事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.JQueryEventName_load">
      <summary>
            元素加载事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Document_DocumentContentChanged">
      <summary>
            文档内容发生改变事件脚本方法名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Document_DocumentLoad">
      <summary>
            文档加载事件脚本方法名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Document_SelectionChanged">
      <summary>
            文档选择状态发生改变事件脚本方法名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.有无格式列表">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_BeforePaint">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_AfterPaint">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_Load">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_Ready">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseClick">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseDblClick">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseDown">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseMove">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseUp">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_KeyDown">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_KeyPress">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_KeyUp">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_ContentChanging">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_GotFocus">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_LostFocus">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_Validating">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_Validated">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseEnter">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_MouseLeave">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_Expression">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.EventName_QueryState">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DataFormat_Text">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.DataFormat_Image">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.Format_OldXML">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.License_OldXML">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FS_Default">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FS_KBListItem">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FieldCode_Page">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterConst.FieldCode_NumPages">
      <summary>
            字符串常量
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterEventHandler">
      <summary>
            编辑器事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterLinkEventHandler">
      <summary>
            超链接事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterMouseEventHandler">
      <summary>
            编辑器鼠标事件委托对象
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterReadFileContentEventHandler">
      <summary>
            读取文件内容事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterStartEditEventHandler">
      <summary>
            控件开始编辑文档事件委托类型
            </summary>
      <param name="sender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterStates">
      <summary>
            一些状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterStates.LicenseModuleStarted">
      <summary>
            授权模块完全启动标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterStates.IsRunInVSNETDesigner(System.Reflection.Assembly)">
      <summary>
            判断软件是否运行在VS.NET设计器中
            </summary>
      <param name="asm">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.WriterStringsCore">
      <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ResourceManager">
      <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Culture">
      <summary>
              重写当前线程的 CurrentUICulture 属性，对
              使用此强类型资源类的所有资源查找执行重写。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.AlertControlNotLoaded">
      <summary>
              查找类似 控件尚未加载，请不要在窗口或控件的构造函数中调用本功能。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.AllFileFilter">
      <summary>
              查找类似 所有文件|*.* 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ArgumentOutOfRange_Name_Value_Max_Min">
      <summary>
              查找类似 参数“{0}”值为“{1}”，超出范围，最大值“{2}”，最小值“{3}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.BadParameterValueType_Name_Type_Value">
      <summary>
              查找类似 参数“{0}”数据类型错误，类型“{1}”，数据"{3}"。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.BeginReadFile_Name">
      <summary>
              查找类似 开始读取文件“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.BeginWriteFile_Name_Bytes">
      <summary>
              查找类似 开始写文件“{0}”，数据字节长度{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.By">
      <summary>
              查找类似 由 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CADisabledTip">
      <summary>
              查找类似 编辑器软件中设置为禁止CA签名功能。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ClearWarringInfo">
      <summary>
              查找类似 清空所有的警示信息。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ClickToLoadControl">
      <summary>
              查找类似 请点击加载控件。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ClipboardErrorMessage">
      <summary>
              查找类似  可能是360等安全软件实时监控系统剪切板所造成的。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CompileError_Message">
      <summary>
              查找类似 脚本编译错误“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ControlIsSleeping">
      <summary>
              查找类似 控件处于睡眠状态，不响应任何用户界面事件，部分功能暂停，可调用Wakeup()唤醒控件。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CoreSystemAlert">
      <summary>
              查找类似 南京都昌信息科技有限公司 提醒 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CoreVersion">
      <summary>
              查找类似 内部版本号 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CreatorTipFormatString">
      <summary>
              查找类似 {DisplaySavedTime:yyyy-MM-dd HH:mm:ss}由{Name}创建 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CtrlClickToLink">
      <summary>
              查找类似 按住Ctrl并鼠标单击可访问链接。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.CurrentDocument">
      <summary>
              查找类似 本文档 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DCLicenseTo_Name">
      <summary>
              查找类似 南京都昌信息科技有限公司授权给“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DCSoftTestVersion">
      <summary>
              查找类似 南京都昌科技内部测试版 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Delete">
      <summary>
              查找类似 删除 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DeleteElement_Content">
      <summary>
              查找类似 删除”{0}“ 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DeleteElements_Count">
      <summary>
              查找类似 删除{0}个元素 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DeleterTipFormatString">
      <summary>
              查找类似 {DisplaySavedTime:yyyy-MM-dd HH:mm:ss}由{Name}删除 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DocCompareResult_TickSpan_Num">
      <summary>
              查找类似 文档内容对比操作耗时{0}毫秒，发现{1}处不同。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DocumentComment">
      <summary>
              查找类似 批注 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.DocumentInDesignMode">
      <summary>
              查找类似 文档处于设计模式 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Block">
      <summary>
              查找类似 文件块  的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Body">
      <summary>
              查找类似 文档正文 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Char">
      <summary>
              查找类似 字符 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_CheckBox">
      <summary>
              查找类似 复选框 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Comment">
      <summary>
              查找类似 文档批注 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_ContentLink">
      <summary>
              查找类似 内容链接 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_ControlHost">
      <summary>
              查找类似 控件宿主 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Document">
      <summary>
              查找类似 文档 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Footer">
      <summary>
              查找类似 页脚 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_FooterForFirstPage">
      <summary>
              查找类似 首页页脚 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Header">
      <summary>
              查找类似 页眉 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_HeaderForFirstPage">
      <summary>
              查找类似 首页页眉 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_HL">
      <summary>
              查找类似 水平线 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Image">
      <summary>
              查找类似 图片 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_InputField">
      <summary>
              查找类似 输入域 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Label">
      <summary>
              查找类似 文本标签 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_LineBreak">
      <summary>
              查找类似 断行符 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_PageBreak">
      <summary>
              查找类似 分页符 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_PageInfo">
      <summary>
              查找类似 页码 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_ParagraphFlag">
      <summary>
              查找类似 段落符号 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_RadioBox">
      <summary>
              查找类似 单选框 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Sign">
      <summary>
              查找类似 锁定符 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_Table">
      <summary>
              查找类似 表格 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_TableCell">
      <summary>
              查找类似 单元格 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_TableColumn">
      <summary>
              查找类似 表格列 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ElementType_TableRow">
      <summary>
              查找类似 表格行 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.EncryptProviderNotFind">
      <summary>
              查找类似 未找到数据加密器：{0}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Error">
      <summary>
              查找类似 错误 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ExecuteEventScript_Element_Event_Method">
      <summary>
              查找类似 元素“{0}”响应事件“{1}”，执行脚本方法“{2}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.FileName">
      <summary>
              查找类似 文件名 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.GridLinePreviewText">
      <summary>
              查找类似 DCWriter是南京都昌信息科技有限公司自主研发的专业的电子病历文档编辑器。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Header">
      <summary>
              查找类似 页眉 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.HostControlTypeIsEmpty">
      <summary>
              查找类似 承载的控件类型名称为空。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.IDRepeat_ID">
      <summary>
              查找类似 发现重复的元素ID值“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ImagePDFFilter">
      <summary>
              查找类似 图片格式的PDF文件(*.image.pdf)|*.image.pdf 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Input">
      <summary>
              查找类似 输入 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InsertElement_Content">
      <summary>
              查找类似 插入“{0}” 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InsertElements_Count">
      <summary>
              查找类似 插入{0}个元素 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InvalidateControlType_Type_ExpectType">
      <summary>
              查找类似 控件类型{0}无效，应该是{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InvalidateOCXType_Name">
      <summary>
              查找类似 未找到OCX类型“{0}”，可能没有注册该类型。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InvalidatePageSettings">
      <summary>
              查找类似 无效的页面设置，请仔细调整文档页面设置。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.InvalidateType_Name">
      <summary>
              查找类似 类型“{0}”无效。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Items_Count">
      <summary>
              查找类似 有{0}个项目。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.JsonFilter">
      <summary>
              查找类似 *.json(试用)|*.json 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LimitedFunction">
      <summary>
              查找类似 受限功能 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LineInfo_PageIndex_LineIndex_ColumnIndex">
      <summary>
              查找类似 第{0}页 第{1}行 第{2}列。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LoadComplete_Size">
      <summary>
              查找类似 加载完成，共加载了{0}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Loading_FileName">
      <summary>
              查找类似 正在加载文件“{0}”... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Loading_FileName_Format">
      <summary>
              查找类似 正在以 {1} 格式加载文件“{0}”... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LoadingAutoSave_FileID">
      <summary>
              查找类似 正在恢复文档“{0}”... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LoadListItems_ProviderType_Name_Num">
      <summary>
              查找类似 使用“{0}”成功为“{1}”加载了{2}个列表项目。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.LoadListItemsFromBuffer_Name_URL">
      <summary>
              查找类似 从缓存区加载列表项目，名称“{0}”，来源“{1}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.MD5ErrorForDecrypt">
      <summary>
              查找类似 加密数据时遇到MD5编码校验不通过的错误。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.MemberNotFound_Type_Member">
      <summary>
              查找类似 未找到类型“{0}”的成员“{1}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.MissProperty_Name">
      <summary>
              查找类似 没能找到属性“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NeedSetOwnerDocument">
      <summary>
              查找类似 需要首先设置OwnerDocument属性值。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NoDocument">
      <summary>
              查找类似 没有文档。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NoImage">
      <summary>
              查找类似 无图片 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NotSupportInThisVersion_Name">
      <summary>
              查找类似 当前版本不支持功能“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NotSupportSerialize_Format">
      <summary>
              查找类似 不支持以“{0}”格式进行存储。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NotSupportSerializeText_Format">
      <summary>
              查找类似 不支持以纯文本格式存储为“{0}”文件格式。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NotSupportTransparentEncrypt">
      <summary>
              查找类似 软件授权不包含透明加密功能，请联系软件供应商。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.NotSupportWrite_Format">
      <summary>
              查找类似 不支持保存“{0}”格式的文件。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.OpenLocalFile">
      <summary>
              查找类似 打开本地文件 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.OwnerDocumentNUll">
      <summary>
              查找类似 文档元素尚未属于某个文档，无法执行操作。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageBottomMargin">
      <summary>
              查找类似 下页边距 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageBreak">
      <summary>
              查找类似 分页符 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageLeftMargin">
      <summary>
              查找类似 左页边距 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageRightMargin">
      <summary>
              查找类似 右页边距 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageStateLocked">
      <summary>
              查找类似 当前文档的分页状态被锁定，无法执行重新分页操作。请不要此时调用RefreshPages()/RefreshDocument()/UpdateDocumentView()/EditorRefreshView()等容易导致重新分页的函数。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PageTopMargin">
      <summary>
              查找类似 上页边距 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ParagraphFirstLineIndent">
      <summary>
              查找类似 首行缩进 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ParagraphLeftIndent">
      <summary>
              查找类似 左缩进 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PDFFilter">
      <summary>
              查找类似 PDF文件(*.pdf)|*.pdf 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptDevelopmentDog_Name">
      <summary>
              查找类似 本软件已授权给“{0}”，请插入授权加密狗。若要加密狗请联系南京都昌信息科技有限公司。请不要破解盗版国产软件，支持民族产业。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptDisableOSClipboardData">
      <summary>
              查找类似 程序禁止从外部获得数据。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptNotFontProperty_TypeName_PropertyName">
      <summary>
              查找类似 类型“{0}”未找到属性“{1}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptProtectedContent">
      <summary>
              查找类似 有内容受到保护，操作受到限制或无法执行。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptRegister">
      <summary>
              查找类似 请注册本软件，以更好的支持软件开发商。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PromptRejectFormat_Format">
      <summary>
              查找类似 系统被设定为拒绝“{0}”格式的数据。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PropertyCannotHasParameter_Name">
      <summary>
              查找类似 属性“{0}”不能有参数。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.PropertyIsReadonly_Name">
      <summary>
              查找类似 属性“{0}”是只读的。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadFileByFileSystem_SystemName_FileName_Result">
      <summary>
              查找类似 读取了虚拟文件系统“{0}”中的文件“{1}”，返回{2}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadFileByURL_URL_Result">
      <summary>
              查找类似 以URL方式读取文件“{0}”，返回了{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadonlyContainerReadonly">
      <summary>
              查找类似 容器元素设置为内容只读。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadonlyForSameLevelContent">
      <summary>
              查找类似 同等级的用户内容是只读的。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadonlyLogicDeleted">
      <summary>
              查找类似 内容已经被逻辑删除了，无法再次删除。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ReadonlyLowPermissionLevel_CurLevel_NeedLevel">
      <summary>
              查找类似 权限等级不够，当前等级为{0}，所需等级{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RefreshDocumentComments">
      <summary>
              查找类似 正在刷新文档批注... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RefreshingDocumentLayout">
      <summary>
              查找类似 正在计算文档内容排版... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RefreshingDocumentSize">
      <summary>
              查找类似 正在计算文档元素大小... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RefreshingPage">
      <summary>
              查找类似 正在进行分页操作 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RegisterTitle_UserName">
      <summary>
              查找类似 本软件已注册，授权给“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RiskLicenseFunctionInfo">
      <summary>
              查找类似 非常重要的授权风险警示！ 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RowExistInTable">
      <summary>
              查找类似 表格行已经在表格中了。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RTFFileFilter">
      <summary>
              查找类似 RTF文件(*.rtf)|*.rtf 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.RuntimeError_Message">
      <summary>
              查找类似 脚本运行时错误“{0}”。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.SaveLocalFile">
      <summary>
              查找类似 保存本地文件 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.SavingPDF_PageIndex_PageCount">
      <summary>
              查找类似 正在保存PDF文档，第{0}页共{1}页。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ScriptItems_Count">
      <summary>
              查找类似 {0}个脚本项目。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ShowDialog_Type_Text">
      <summary>
              查找类似 显示对话框"{0}":"{1}". 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.SystemAlert">
      <summary>
              查找类似 系统提示 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.SystemInternalError">
      <summary>
              查找类似 系统内部错误 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.TipTitle">
      <summary>
              查找类似 系统提示 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.TXTFileFilter">
      <summary>
              查找类似 TXT文件(*.txt)|*.txt 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.UnknowDecryptError">
      <summary>
              查找类似 未知原因导致数据解密失败。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.UnRegisterTitle">
      <summary>
              查找类似 本软件未注册。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.UserHandleReadFileEvent_FileName_Result">
      <summary>
              查找类似 用户处理了读文件"{0}"的事件，返回了{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.UserHandleWriteFileEvent_Result">
      <summary>
              查找类似 用户处理了写文件的事件，返回了{0}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.ValueInvalidate">
      <summary>
              查找类似 数据校验错误 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.Version">
      <summary>
              查找类似 版本 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.WhereToCopy">
      <summary>
              查找类似 复制到何处？ 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.WhereToMove">
      <summary>
              查找类似 移动到何处？ 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.WriteFileByFileSystem_SystemName_FileName_Result">
      <summary>
              查找类似 输出到虚拟文件系统“{0}”中的文件“{1}”，返回{2}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.WriteFileByURL_URL_Result">
      <summary>
              查找类似 以URL方式写文件"{0}",返回了{1}。 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.XML2022Filter">
      <summary>
              查找类似 2022版XML文件(试用)|*.xml 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.WriterStringsCore.XMLFilter">
      <summary>
              查找类似 XML文件|*.xml 的本地化字符串。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterTableRowHeightChangingEventHandler">
      <summary>
            表格行高度正在改变事件委托类型
            </summary>
      <param name="eventSender">事件参数</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventHandler">
      <summary>
            用户界面键盘输入的字符串之前的事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
      <remarks>
            仅仅由于键盘操作输入字符串才会触发这个事件。由于粘帖操作而插入字符串不会触发事件。
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterToolsBase">
      <summary>
            编辑器使用的工具集基础类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.OnLicenseChanged">
      <summary>
            软件授权发生改变
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.ReSignSpecifyMode(DCSoft.Writer.Dom.XTextElement,DCSoft.Common.DCCASignMode)">
      <summary>
            重新进行指定类型的签名操作
            </summary>
      <param name="srcElement">目标元素对象</param>
      <param name="mode">模式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.TranslateKeyboardInputString(DCSoft.Writer.Controls.WriterControl,System.String)">
      <summary>
            自动转换输入的字符串
            </summary>
      <param name="txt">输入的字符串</param>
      <returns>转换后的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.ClearCurrentSign(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            清空签名内容
            </summary>
      <param name="ctl">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.CreateImmProvider(DCSoft.Writer.Controls.WriterViewControl)">
      <summary>
            创建输入法操作器
            </summary>
      <param name="ctl">编辑器控件</param>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterToolsBase.CreateCaretProvider(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            创建光标提供者
            </summary>
      <param name="ctl">编辑器控件</param>
      <returns>创建的对象</returns>
    </member>
    <member name="P:DCSoft.Writer.WriterToolsBase.Instance">
      <summary>
            对象实例
            </summary>
    </member>
    <member name="T:DCSoft.Writer.XTextRangeProvider">
      <summary>
            文档区域选择提供者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.XTextRangeProvider.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.XTextRangeProvider.Reset">
      <summary>
            重新设置对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.XTextRangeProvider.GetRange(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得区域
            </summary>
      <param name="baseElement">基础元素</param>
      <returns>创建的区域</returns>
    </member>
    <member name="M:DCSoft.Writer.XTextRangeProvider.CreateRange(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            创建区域
            </summary>
      <param name="baseElement">基础元素</param>
      <returns>创建的区域</returns>
    </member>
    <member name="M:DCSoft.Writer.XTextRangeProvider.DetectRangeElemnet(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            判断指定元素是否在范围中
            </summary>
      <param name="baseElement">判断范围的出发点元素</param>
      <param name="element">要判断的元素</param>
      <param name="forward">方向</param>
      <returns>是属于范围中</returns>
    </member>
    <member name="P:DCSoft.Writer.XTextRangeProvider.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.DetectRangeResult">
      <summary>
            检测区域的结果
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DetectRangeResult.Include">
      <summary>
            包含在区域中
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DetectRangeResult.Exclude">
      <summary>
            不包含在区域中
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DetectRangeResult.Finish">
      <summary>
            结束
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DetectRangeResult.Cancel">
      <summary>
            取消获得区域操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.FlagXTextRangeProvider">
      <summary>
            带标记的区域提供者对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.FlagXTextRangeProvider.DetectRangeElemnet(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            检测区域元素
            </summary>
      <param name="baseElement">基础元素</param>
      <param name="element">当前元素</param>
      <param name="forward">判断方向</param>
      <returns>检测结果</returns>
    </member>
    <member name="P:DCSoft.Writer.FlagXTextRangeProvider.Prefix">
      <summary>
            起始字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.FlagXTextRangeProvider.Endfix">
      <summary>
            结尾字符
            </summary>
    </member>
    <member name="T:DCSoft.Writer.WriterUtilsInner">
      <summary>
            DCWriter内部使用。编辑器帮助类，定义了一些常用例程
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.IsWindowsPlatform">
      <summary>
            是否为WINDOWS操作系统
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.MainAssemblyVersion">
      <summary>
            主程序文件版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.Obsolete_ForInnerUseOnly">
      <summary>
            提示内部使用文本信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.Obsolete_ForCOMUseOnly">
      <summary>
            提示只用于COM接口的信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.Obsolete_ForPBCOMUseOnly">
      <summary>
            提示只用于PB的COM接口的信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.WriterUtilsInner.DefaultFont">
      <summary>
            默认的字体，目前设置字体大小为12
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.ExecuteAllVisibleExpressionBeforePrint(DCSoft.Writer.Dom.XTextDocument,System.Boolean,DCSoft.Writer.Expression.DocumentExpressionExecuter.ExpressionExecuteContext)">
      <summary>
            在打印前执行可见性表达式。
            </summary>
      <param name="doc">文档对象</param>
      <param name="updateLayout">若需要则更新文档内容排版</param>
      <returns>操作修改了文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.DetectFileFormat(System.Byte[])">
      <summary>
            检测文件格式
            </summary>
      <param name="bsData">数据内容</param>
      <returns>文件格式名称</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.DetectFileFormat(System.String)">
      <summary>
            检测文件格式
            </summary>
      <param name="strData">文本数据</param>
      <returns>文件格式名称</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveUrlParameter(System.String)">
      <summary>
            删除URL地址中的参数部分
            </summary>
      <param name="url">URL地址</param>
      <returns>处理后的URL地址</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetPasswordMaskString(System.Int32)">
      <summary>
            获得纯空格字符串
            </summary>
      <param name="len">长度</param>
      <returns>获得的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetWhitespaceString(System.Int32)">
      <summary>
            获得纯空格字符串
            </summary>
      <param name="len">长度</param>
      <returns>获得的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetLocalConfigValue``1(System.String,``0)">
      <summary>
            获得本地存储的配置数值
            </summary>
      <param name="name">名称</param>
      <param name="defaultValue">默认值</param>
      <returns>值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.SaveLocalConfigValue(System.String,System.Object)">
      <summary>
            保存本地配置
            </summary>
      <param name="name">名称</param>
      <param name="newValue">新的数值</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CleanServicePageUrl(System.String)">
      <summary>
            整理清洁服务器页面地址
            </summary>
      <param name="url">URL地址</param>
      <returns>整理后的地址</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.AllowRunInnerVersion">
      <summary>
            判断能否运行内部版本
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetTypeOfDCWriterPublish">
      <summary>
            获得DCSoft.Writer.DCWriterPublish类型
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.FixEnumValue(System.Object)">
      <summary>
            检查枚举值是否在正常范围中
            </summary>
      <param name="enumValue">枚举值</param>
      <returns>是否在正常范围中</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CheckTableWidthWhenInsertTable(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextTableElement)">
      <summary>
            根据插入点所在的容器来修正表格的总宽度
            </summary>
      <param name="document">文档对象</param>
      <param name="table">表格元素</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CheckImageSizeWhenInsertImage(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.Boolean,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            根据插入点所在的容器来修正图片元素的大小
            </summary>
      <param name="document">文档对象</param>
      <param name="element">图片元素</param>
      <param name="keepWidthHeightRate">保持长宽比</param>
      <param name="container">容器元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetElementXmlSerializer(System.Type)">
      <summary>
            获得指定类型的文档元素类型的XML序列化器
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的XML序列化器</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CompareDOMLevel(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            比较两个元素在文档DOM树状结构中的位置。
            </summary>
      <param name="element1">
      </param>
      <param name="element2">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.HasPageBreakElement(DCSoft.Writer.Dom.XTextElementList,System.Int32,System.Int32)">
      <summary>
            判断是否存在分页符号
            </summary>
      <param name="list">文档元素列表</param>
      <returns>是否包含分页符</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.DCLogon64">
      <summary>
            64*64的标志图片
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RunDCWriterPublishStart">
      <summary>
            执行功能发布
            </summary>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveLogicDeletedElement(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            删除被逻辑删除的内容
            </summary>
      <param name="rootElement">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.IsDataObjectFromDCWriter(System.Windows.Forms.IDataObject)">
      <summary>
            判断数据对象是否来自DCWriter
            </summary>
      <param name="data">数据对象</param>
      <returns>是否来自DCWriter</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetDebugName(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得文档元素对象的调试时显示的名称
            </summary>
      <param name="element">文档元素对象</param>
      <returns>显示的名称</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveInputFieldStructure(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            删除输入域结构，但保存文档内容
            </summary>
      <param name="elements">要操作的元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.ConcatString(System.Collections.IEnumerable,System.Char)">
      <summary>
            连接字符串
            </summary>
      <param name="items">若干个字符串项目集合</param>
      <param name="splitChar">分割字符</param>
      <returns>连接所得的大字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CallByName(System.Object,System.String,System.String,System.Boolean)">
      <summary>
            按照名称调用类型的成员方法
            </summary>
      <param name="instance">对象实例</param>
      <param name="methodName">方法名称，不区分大小写。</param>
      <param name="parameters">参数列表，采用“name=value&amp;name=value”的形式，
            采用类似B/S的URL参数格式，支持UTF8编码内容，参数名不区分大小写，但参数值区分大小写</param>
      <param name="throwExceptionWhenNotFoundMethod">未找到方法时是否抛出异常</param>
      <returns>方法返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.IsCommentCommandName(System.String)">
      <summary>
            判断命令名称是否是批注注释类型的命令
            </summary>
      <param name="commandName">命令名称</param>
      <returns>是否是文档批注类型的命令</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RefreshElementsSize(DCSoft.Writer.Dom.XTextDocument,System.Collections.Generic.IEnumerable{DCSoft.Writer.Dom.XTextElement},System.Boolean)">
      <summary>
            重新计算文档元素的大小
            </summary>
      <param name="document">文档对象</param>
      <param name="elements">文档元素列表</param>
      <param name="checkSizeInvalidate">是否检测SizeInvalidate标记</param>
      <returns>元素大小是否发生改变了。</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RefreshElementsSize(DCSoft.Drawing.DCGraphics,DCSoft.Writer.Dom.XTextDocument,System.Collections.Generic.IEnumerable{DCSoft.Writer.Dom.XTextElement},System.Boolean)">
      <summary>
            重新计算文档元素的大小
            </summary>
      <param name="g">画布对象</param>
      <param name="document">文档对象</param>
      <param name="elements">文档元素列表</param>
      <param name="checkSizeInvalidate">是否检测SizeInvalidate标记</param>
      <returns>元素大小是否发生改变了。</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetCharacterLayoutDirection(System.Char,DCSoft.Writer.ContentLayoutDirectionStyle)">
      <summary>
            判断字符的排版方向
            </summary>
      <param name="c">字符值</param>
      <param name="defaultDirection">默认排版方向</param>
      <returns>排版方向</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.SetRuntimeChars(System.Collections.IList)">
      <summary>
            针对维文设置字符元素实际绘制图形使用的字符值
            </summary>
      <param name="elements">文档元素对象</param>
      <returns>是否修改了字符值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.SupportUG">
      <summary>
            判断是否支持维文
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.EditorSetProperty(DCSoft.Writer.Dom.XTextElement,System.String,System.Object,System.Boolean)">
      <summary>
            为编辑而设置文档元素属性
            </summary>
      <param name="instance">文档元素对象</param>
      <param name="propertyName">属性名</param>
      <param name="newValue">属性值</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>是否修改了对象属性</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveLogicDeletedElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            删除被逻辑删除的文档元素对象
            </summary>
      <param name="elements">文档元素对象列表</param>
      <returns>操作是否删除的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveLogicDeletedElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean[])">
      <summary>
            删除被逻辑删除的文档元素对象
            </summary>
      <param name="elements">文档元素对象列表</param>
      <param name="isLogicDeltedStyle">是否为逻辑删除的样式标记</param>
      <returns>操作是否删除的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RaiseAfterPaintEvent(System.Object,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            触发AfterPaint事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RaiseBeforePaintEvent(System.Object,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            DCWriter内部使用。触发BeforePaint事件
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.IsIgnoreComException(System.Exception)">
      <summary>
            判断是否是可以忽略的COM异常
            </summary>
      <param name="ext">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CreateDocument(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            根据内容创建一个新的文档对象,而且不包含已经被逻辑删除的内容.
            </summary>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetLimitedString(System.String,System.Int32)">
      <summary>
            获得限制长度的字符串
            </summary>
      <param name="txt">字符串</param>
      <param name="length">最大长度</param>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.HasFlag(System.Int32,System.Int32)">
      <summary>
            判断是否存在指定的字位标记
            </summary>
      <param name="Value">数值</param>
      <param name="Flag">掩码</param>
      <returns>是否存在标记</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.HasFlag``1(``0,``0)">
      <summary>
            判断是否存在指定的字位标记
            </summary>
      <param name="Value">数值</param>
      <param name="Flag">掩码</param>
      <returns>是否存在标记</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.DocumentUnitToDecimalCM(DCSoft.Writer.Dom.XTextDocument,System.Single)">
      <summary>
            将文档长度转换为厘米值
            </summary>
      <param name="document">文档对象</param>
      <param name="Value">文档长度值</param>
      <returns>厘米值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.DecimalCMToDocumentUnit(DCSoft.Writer.Dom.XTextDocument,System.Decimal)">
      <summary>
            将厘米值转换为文档长度值
            </summary>
      <param name="document">文档对象</param>
      <param name="Value">厘米值</param>
      <returns>转换后的长度值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.TryGetArgumentBooleanValue(System.Object,System.Boolean@)">
      <summary>
            试图将参数值转换为布尔值
            </summary>
      <param name="v">参数值</param>
      <param name="result">布尔值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetArgumentEnumValue(System.Object,System.Object)">
      <summary>
            将参数转换为枚举值
            </summary>
      <param name="v">参数值</param>
      <param name="defaultValue">默认值</param>
      <returns>转换后的枚举值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetArgumentIntValue(System.Object,System.Int32)">
      <summary>
            将参数值转换为整数值
            </summary>
      <param name="v">参数值</param>
      <param name="defaultValue">默认值</param>
      <returns>转换后的整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetArgumentBooleanValue(System.Object,System.Boolean)">
      <summary>
            将参数值转换为布尔值
            </summary>
      <param name="v">参数值</param>
      <param name="defaultValue">默认值</param>
      <returns>转换后的布尔值</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.CreateTextBmp(System.Int32,System.Int32,System.String,System.Drawing.Font,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            获得包含文本的图片
            </summary>
      <param name="width">宽度</param>
      <param name="height">高度</param>
      <param name="text">文本值</param>
      <param name="font">字体</param>
      <param name="textColor">文本颜色</param>
      <param name="backColor">背景色</param>
      <returns>获得的图片</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.EqualsUIStringValue(System.String,System.String)">
      <summary>
            比较两个用户界面的字符串是否等价
            </summary>
      <param name="txt1">字符串1</param>
      <param name="txt2">字符串2</param>
      <returns>是否等价</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.FormatByteSize(System.Int32)">
      <summary>
            格式化显示字节大小
            </summary>
      <param name="size">字节大写值</param>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.RemoveAutoCreateParagraphFlag(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            删除元素列表中自动创建的段落标记元素
            </summary>
      <param name="elements">文档元素列表</param>
      <returns>操作是否改变了列表内容</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.Enumerate(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.ElementEnumerateEventHandler)">
      <summary>
            遍历子孙元素
            </summary>
      <param name="elements">要遍历的元素列表</param>
      <param name="handler">遍历过程的委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetTabWidth(System.Single,System.Single)">
      <summary>
            计算指定位置处的制表符的宽度
            </summary>
      <remarks>
            本函数根据作为参数传入的制表符开始的位置,计算制表符的宽度,以保证制表符的右端位置在某个制表位上
            制表位的位置恒定为标准制表符的宽度的整数倍(在此处标准制表符为4个下划线的宽度)
               在下面的标尺上
              0___1___2___3___4___5___6___7___8___9___10
               制表符的位置随意,但制表符右端必须在某个数字下面
               若制表符恰好在制表位上则返回标准制表符宽度
            由于有这样的限制,因此制表符的宽度不固定,而根据其位置而改变,本函数就是计算其宽度
            </remarks>
      <param name="Pos">制表符开始的位置</param>
      <param name="TabStep">制表宽度</param>
      <returns>制表符的宽度</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetSameParent(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得两个文档元素共同所在的最低层次的父文档元素
            </summary>
      <param name="element1">文档元素1</param>
      <param name="element2">文档元素2</param>
      <returns>共同的父元素</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetParentList2(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素的父节点对象列表，在该列表中，近亲在前，远亲在后。
            </summary>
      <remarks>
            本方法和GetParentList的不同就是当元素是父元素的第一个文档内容元素则跳过这个父元素
            </remarks>
      <param name="element">文档元素对象</param>
      <returns>父节点对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetParentList(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素的父节点对象列表，在该列表中，近亲在前，远亲在后。
            </summary>
      <param name="element">文档元素对象</param>
      <returns>父节点对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.MergeElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            对字符元素进行合并操作
            </summary>
      <param name="sourceList">元素列表</param>
      <param name="includeSelectionOnly">只处理被选中的内容</param>
      <returns>合并后的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.MergeElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean,DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter,System.Boolean,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            对字符元素进行合并操作.本代码被DCSoft.Writer.Html.WriterHtmlDocumentWriter.MergeElements()抄袭.
            </summary>
      <param name="sourceList">元素列表</param>
      <param name="includeSelectionOnly">只处理被选中的内容</param>
      <param name="hiddenElementLogicDeleted">是否隐藏被逻辑删除的元素</param>
      <returns>合并后的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetRootElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得两个元素节点最近的共同的祖先元素
            </summary>
      <param name="element1">文档元素1</param>
      <param name="element2">文档元素2</param>
      <returns>共同的祖先元素</returns>
    </member>
    <member name="M:DCSoft.Writer.WriterUtilsInner.GetElementType(System.Type)">
      <summary>
            获得文档元素类型
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的类型</returns>
    </member>
    <member name="T:DCSoft.Writer.WriterCancelEventHandler">
      <summary>
            编辑器事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.WriterSaveFileContentEventHandler">
      <summary>
            保存文件内容事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterTableRowHeightChangedEventHandler">
      <summary>
            表格行高度改变事件委托类型
            </summary>
      <param name="eventSender">事件参数</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterAfterFieldContentEditEventHandler">
      <summary>
            下拉列表选择事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintPageEventHandler">
      <summary>
            打印每页内容事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterPrintQueryPageSettingsEventHandler">
      <summary>
            打印时查询页面设置事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.WriterSectionElementEventHandler">
      <summary>
            文档节元素事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.DCBooleanValueHasDefault">
      <summary>
            布尔状态值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValueHasDefault.True">
      <summary>
            是
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValueHasDefault.False">
      <summary>
            否
            </summary>
    </member>
    <member name="F:DCSoft.Writer.DCBooleanValueHasDefault.Default">
      <summary>
            默认
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Undo.XUndoEventArgs">
      <summary>
            重做/撤销操作事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoEventArgs.Parameters">
      <summary>
            参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoEventArgs.Cancel">
      <summary>
            取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Undo.IUndoable">
      <summary>
            可撤销和重做的接口类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.IUndoable.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Undo.IUndoable.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重新操作
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.Undo.IUndoable.InGroup">
      <summary>
            对象是否在一个批处理中
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Undo.XUndoGroup">
      <summary>
            撤销操作对象组类型,本类型可以包含多个撤销对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoGroup.myItems">
      <summary>
            内置的撤销动作列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoGroup.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoGroup.Add(DCSoft.Writer.Undo.IUndoable)">
      <summary>
            向组添加一个撤销操作对象
            </summary>
      <param name="undo">撤销操作对象</param>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoGroup.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoGroup.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行重复操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoGroup.InGroup">
      <summary>
            对象是否在一个批处理中
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Undo.XUndoList">
      <summary>
            撤销操作列表记录类型
            </summary>
      <remarks>本类型是DCSoft内部使用,应用程序不适合使用本类型</remarks>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoList.intMaxCount">
      <summary>
            列表中最大成员个数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoList.intPosition">
      <summary>
            当前操作对象的序号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.Position">
      <summary>
            当前操作对象的序号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.Current">
      <summary>
            当前对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.OnStateChanged">
      <summary>
            触发列表状态发生改变事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行一次撤销操作
            </summary>
      <remarks>是否执行了操作</remarks>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行一次重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.CanUndo">
      <summary>
            能否执行撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.CanRedo">
      <summary>
            能否执行重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.LogItems">
      <summary>
            撤销操作信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.BeginLog">
      <summary>
            开始登记撤销记录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.CancelLog">
      <summary>
            取消当前撤销记录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.CreateGroup">
      <summary>
            创建撤销操作信息组对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.ForceUseGroup">
      <summary>
            是否强制使用撤销记录组
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.EndLog">
      <summary>
            完成登记撤销记录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.Add(DCSoft.Writer.Undo.IUndoable)">
      <summary>
            添加一个撤销动作对象到列表中
            </summary>
      <param name="undo">要添加的撤销动作对象</param>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoList.CanLog">
      <summary>
            列表是否处于记录动作的状态,若返回 true 则 Add 方法有效,
            可以记录撤销操作信息,若返回 false 则Add方法无效,不能向列表添加撤销记录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoList.MaxCount">
      <summary>
            列表中最大成员个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoList.Item(System.Int32)">
      <summary>
            返回指定序号的对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoList.Lock">
      <summary>
            锁定列表标记
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Undo.XUndoList.StateChanged">
      <summary>
            列表状态发生改变事件,应用系统可以响应这个事件来更新用户界面
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Undo.XUndoObjectPropertyValue">
      <summary>
            设置对象属性撤销/重做对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoObjectPropertyValue.myProperty">
      <summary>
            属性信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoObjectPropertyValue.objObjectValue">
      <summary>
            对象实例
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoObjectPropertyValue.objOldValue">
      <summary>
            旧数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Undo.XUndoObjectPropertyValue.objNewValue">
      <summary>
            新数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoObjectPropertyValue.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoObjectPropertyValue.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Undo.XUndoObjectPropertyValue.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoObjectPropertyValue.InGroup">
      <summary>
            对象是否在一个批处理中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoObjectPropertyValue.Property">
      <summary>
            属性信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoObjectPropertyValue.ObjectValue">
      <summary>
            对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoObjectPropertyValue.OldValue">
      <summary>
            旧数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Undo.XUndoObjectPropertyValue.NewValue">
      <summary>
            新数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Printing.BatchDocumentPrinter">
      <summary>
            批量文档打印器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.Printing.DocumentPrinter">
      <summary>
            文档打印控制对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">要打印的文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.#ctor(DCSoft.Writer.Dom.XTextDocumentList)">
      <summary>
            初始化对象
            </summary>
      <param name="documents">要打印的文档集合</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.PreparePrintDocument">
      <summary>
            为打印做一些准备工作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.PrintDocument(System.Boolean)">
      <summary>
            打印文档
            </summary>
      <param name="Prompt">是否显示打印机选择对话框</param>
      <returns>是否进行了打印</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.DocumentPrinter.PrintDocument(System.Boolean,System.Int32)">
      <summary>
            打印文档
            </summary>
      <param name="Prompt">是否显示打印机选择对话框</param>
      <param name="SpecialPageIndex">从0开始计算的要打印的指定序号的文档页,若该参数超出范围则打印文档的所有页</param>
      <returns>是否进行了打印</returns>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.Options">
      <summary>
            打印文档选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.AsyncPrint">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.BodyOffsetY">
      <summary>
            正文Y方向偏移量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.Document">
      <summary>
            要打印的文档
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.Documents">
      <summary>
            要打印的文档集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.CleanMode">
      <summary>
            整洁打印模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.JumpPrint">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.CurrentPage">
      <summary>
            当前页对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.PrintRange">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.FromPage">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.ToPage">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.PrinterName">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.PaperSourceName">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.SpecifyPageIndexs">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.SpecifyCopies">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.DrawFirstHeaderFooterWhenJumpPrintMode">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.ManualDuplex">
      <summary>
            本属性已经废除掉了,请使用Options下的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.DocumentPrinter.ParentWindow">
      <summary>
            弹出的对话框使用的父窗体对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Printing.WriterPrintDocument">
      <summary>
            打印文档对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Printing.WriterPrintDocument._DoubleBufferPrint_UseEMF">
      <summary>
            在双缓冲打印时是否采用EMF格式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Printing.WriterPrintDocument.GlobalBeforePrintHandler">
      <summary>
            全局的文档打印前处理委托对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Printing.WriterPrintDocument.GlobalAfterPrintHandler">
      <summary>
            全局的文档打印后处理委托对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.ShowPrintDialog(System.Windows.Forms.IWin32Window)">
      <summary>
            显示打印机设置对话哭
            </summary>
      <param name="parent">所属父窗体</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.Prompt(System.Int32,System.Windows.Forms.IWin32Window)">
      <summary>
            显示打印机选中对话框
            </summary>
      <param name="specialPageIndex">指定的页码</param>
      <param name="parnet">对话框使用的父窗体</param>
      <returns>用户是否成功的设置</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.PrintDocument(System.Int32)">
      <summary>
            打印文档
            </summary>
      <param name="SpecialPageIndex">指定的要打印的页码序号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.PrintDocument(System.Int32,System.Boolean)">
      <summary>
            打印文档
            </summary>
      <param name="SpecialPageIndex">指定的要打印的页码序号</param>
      <param name="updateStateOnly">是否只是用于更新状态，但不实际打印</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.UpdateDocumentsState">
      <summary>
            为打印文档而更新文档状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.InsertNewBlankPage(System.Int32)">
      <summary>
            插入空白页
            </summary>
      <param name="pageIndex">从0开始的页码序号</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.OnPrintPage(System.Drawing.Printing.PrintPageEventArgs)">
      <summary>
            处理打印一页事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.OnBeginPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
            开始打印任务
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.ClearElementsPrintedFlag(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            清空所有文档元素的PrintedFlag标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.OnEndPrint(System.Drawing.Printing.PrintEventArgs)">
      <summary>
            结束打印任务
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.RaiseGlobalBeforePrintHandler(System.ComponentModel.CancelEventArgs)">
      <summary>
            触发全局的打印文档前处理,DCWriter内部调用。
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.RaiseGlobalAfterPrintHandler(System.EventArgs)">
      <summary>
            触发全局的打印完成后的处理,DCWriter内部调用。
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.RestoreDocumentsState">
      <summary>
            恢复文档状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.AddDocumentByWriterControl(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            根据编辑控件添加文档内容
            </summary>
      <param name="ctl">编辑器控件</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.AddDocumentByWriterControlCloneMode(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            根据编辑控件添加文档内容
            </summary>
      <param name="ctl">编辑器控件</param>
    </member>
    <member name="M:DCSoft.Writer.Printing.WriterPrintDocument.RuntimeMainDocument">
      <summary>
            主文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.CurrentForEvent">
      <summary>
            为响应事件而获得当前打印文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.BodyPositionOffset">
      <summary>
            正文位置偏移量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.SpecifyDocumentName">
      <summary>
            指定的文档名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.CleanMode">
      <summary>
            整洁打印模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.AsyncPrint">
      <summary>
            异步打印
            </summary>
      <remarks>
            本属性默认为true，执行异步打印，程序向系统提交打印任务后立即返回；
            若该属性为false，则执行同步打印，程序向系统提交打印任务后等待打印任务完全完成后才返回。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Printing.WriterPrintDocument.Documents">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.ContentSerializeOptions">
      <summary>
            内容序列化选项
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializeOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializeOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.ContentEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.WriterControl">
      <summary>
            相关的编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.Tag">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.FastMode">
      <summary>
            快速加载模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.FileName">
      <summary>
            输出的文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.BasePath">
      <summary>
            基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.IncludeSelectionOnly">
      <summary>
            只输出被选择的文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.SerializeAttachFiles">
      <summary>
            是否序列化输出附加文件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.Formated">
      <summary>
            是否进行格式化输出
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.EnableDocumentSetting">
      <summary>
            允许读取文档设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.ImportTemplateGenerateParagraph">
      <summary>
            是否导入临时生成的段落符号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.Parameters">
      <summary>
            用户参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializeOptions.ForPrint">
      <summary>
            处于打印模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.ContentSerializer">
      <summary>
            文档内容编码解码器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.NeedPrepareSerialize(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            判断序列化前是否需要调用PrepareSerialize()
            </summary>
      <param name="document">文档对象</param>
      <returns>是否需要调用</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.NeedAfterSerialize(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            序列化后需要调用AfterSerialize()
            </summary>
      <param name="document">文档对象</param>
      <returns>是否需要调用</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.NeedRefreshPages(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            是否需要刷新文档页面
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.Deserialize(System.IO.Stream,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            反序列化文档内容
            </summary>
      <param name="stream">文件流对象</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.Deserialize(System.IO.TextReader,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            反序列化文档内容
            </summary>
      <param name="reader">文本读取器</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.Serialize(System.IO.Stream,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            序列化文档内容
            </summary>
      <param name="stream">文件流对象</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializer.Serialize(System.IO.TextWriter,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            序列化文档内容
            </summary>
      <param name="writer">文本书写器</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.Name">
      <summary>
            文件格式名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.Priority">
      <summary>
            级别
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.IsDefault">
      <summary>
            是否是默认文件编码器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.FileExtension">
      <summary>
            文件扩展名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.FileFilter">
      <summary>
            文件名过滤器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.Flags">
      <summary>
            对象标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializer.ContentEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.ContentSerializerFlags">
      <summary>
            文件序列化器标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.None">
      <summary>
            无状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.SupportDeserialize">
      <summary>
            支持序列化
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.SupportSerialize">
      <summary>
            支持反序列化
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.SupportDeserializeText">
      <summary>
            支持以文本格式进行反序列化
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.SupportSerializeText">
      <summary>
            支持以文本格式进行序列化
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.ContentSerializerFlags.SupportOptions">
      <summary>
            支持过程选项控制
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.ContentSerializerList">
      <summary>
            文档编码器列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializerList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializerList.AddSerializer(DCSoft.Writer.Serialization.ContentSerializer)">
      <summary>
            添加文档编码器
            </summary>
      <param name="ser">编码器对象</param>
      <returns>新编码器在列表中的序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializerList.GetFormatNameByFileExtension(System.String)">
      <summary>
            获得指定文件扩展名对应的文件格式名称
            </summary>
      <param name="extension">文件扩展名</param>
      <returns>文件格式名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.ContentSerializerList.GetSerializer(System.String)">
      <summary>
            获得指定名称的编码器，若未找到则返回默认对象
            </summary>
      <param name="name">名称</param>
      <returns>获得的编码器</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.ContentSerializerList.DefaultSerializer">
      <summary>
            获得默认的文件编码、解码器
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.TXT.TXTContentSerializer">
      <summary>
            纯文本格式的文档序列化器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.TXT.TXTContentSerializer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Xml.MyXmlSerializeHelper.GetDocumentXmlSerializer(System.Type)">
      <summary>
            获得文档对象的XML序列化/反序列化对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Xml.MyXmlSerializeHelper.GetElementXmlSerializer(System.Type)">
      <summary>
            获得指定类型的文档元素类型的XML序列化器
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的XML序列化器</returns>
    </member>
    <member name="T:DCSoft.Writer.Serialization.Xml.XMLContentSerializer">
      <summary>
            标准的XML内容编码器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Xml.XMLContentSerializer.EventLoadXMLDocumentCallbackOnce">
      <summary>
            一次性使用的加载XML文档的回调函数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Xml.XMLContentSerializer.CreateElementByXMLString(System.String,System.Boolean)">
      <summary>
            根据一个XML字符串创建一个文档元素对象
            </summary>
      <param name="xml">XML字符串</param>
      <returns>创建的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Xml.XMLContentSerializer.GetRuntimeEncoding(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            获得运行时使用的文本编码格式
            </summary>
      <param name="document">文档对象</param>
      <param name="options">选项对象</param>
      <returns>文本编码格式</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Xml.XMLContentSerializer.Instance">
      <summary>
            对象唯一静态实例
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.RTF.RTFContentSerializer">
      <summary>
            RTF格式的序列化器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.Deserialize(System.IO.Stream,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            反序列化文档
            </summary>
      <param name="stream">文件流对象</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.FileExtension">
      <summary>
            文件扩展名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.FileFilter">
      <summary>
            文件名过滤器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.RTF.RTFContentSerializer.Flags">
      <summary>
            对象标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.PDF.ImagePDFContentSerializer">
      <summary>
            PDF格式的内容序列化器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.PDF.ImagePDFContentSerializer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.PDF.ImagePDFContentSerializer.Serialize(System.IO.Stream,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            进行二进制序列化
            </summary>
      <param name="stream">文件流对象</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.PDF.ImagePDFContentSerializer.Flags">
      <summary>
            只支持二进制序列化
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.PDF.PDFContentSerializer">
      <summary>
            PDF格式的内容序列化器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Serialization.PDF.PDFContentSerializer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.PDF.PDFContentSerializer.Serialize(System.IO.Stream,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            进行二进制序列化
            </summary>
      <param name="stream">文件流对象</param>
      <param name="document">文档对象</param>
      <param name="options">选项</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Serialization.PDF.PDFContentSerializer.Flags">
      <summary>
            只支持二进制序列化
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.Html.HtmlWriterOptions">
      <summary>
            HTML文档书写器选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.ContentEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.Indent">
      <summary>
            是否输出缩进的HTML代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.OutputRowHeight">
      <summary>
            输出表格高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.OutputXML">
      <summary>
            输出严格的XML代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.FormStyle">
      <summary>
            输出表单HTML代码模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.UseClassAttribute">
      <summary>
            使用HTML元素的class属性，也就是说在一个style标签下集中输出所有的CSS样式字符串，然后HTML内容标签中使用class属性来引用CSS样式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.ImageDataEmbedInHtml">
      <summary>
            图片数据内嵌在HTML代码中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.OutputHeaderFooter">
      <summary>
            是否输出页眉页脚
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.KeepLineBreak">
      <summary>
            是否保持断行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.HtmlWriterOptions.GenerateFormElement">
      <summary>
            是否生成HTML表单元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter">
      <summary>
            HTML文档书写器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.SaveAttachFiles(System.String)">
      <summary>
            保存附件
            </summary>
      <param name="path">输出路径</param>
      <returns>保存的文件个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.Save(System.IO.TextWriter)">
      <summary>
            保存文件
            </summary>
      <param name="writer">文本书写器</param>
    </member>
    <member name="M:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.SaveMHT(System.IO.Stream)">
      <summary>
            以MHT格式保存文件
            </summary>
      <param name="stream">文件流</param>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.AttachFileReferenceCodeFormatString">
      <summary>
            附件文件引用路径格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.Documents">
      <summary>
            文档对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter.IncludeSelectionOnly">
      <summary>
            只包含选择的部分
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle">
      <summary>
            HTML样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle.Normal">
      <summary>
            正常方式显示HTML预览
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle.NormalCenter">
      <summary>
            正常居中显示HTML预览
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle.Page">
      <summary>
            分页模式显示HTML预览
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle.PageUseImage">
      <summary>
            采用图片以分页模式显示HTML预览,此时使用一张图片显示一整页的内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Serialization.Html.WriterHtmlViewStyle.Print">
      <summary>
            显示打印用HTML
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DCScriptErrorStyle">
      <summary>
            script error
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Script.DCScriptErrorStyle.Compile">
      <summary>
            compile error
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Script.DCScriptErrorStyle.Runtime">
      <summary>
            runtime error
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DCScriptError">
      <summary>
            Script error information
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.DCScriptError.#ctor">
      <summary>
            Initialize instance
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.DCScriptError.#ctor(DCSoft.Writer.Script.IDocumentScriptEngine,DCSoft.Writer.Script.DCScriptErrorStyle,System.String,System.Exception)">
      <summary>
            Initialize instance
            </summary>
      <param name="engine">script engine</param>
      <param name="style">error type</param>
      <param name="methodName">Name of script method</param>
      <param name="ext">Exception instance</param>
    </member>
    <member name="M:DCSoft.Writer.Script.DCScriptError.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.Style">
      <summary>
            script error style
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.Engine">
      <summary>
            script engine
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.Time">
      <summary>
            time when happend error
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.MethodName">
      <summary>
            Name of script method
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.Message">
      <summary>
            Message
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.Exception">
      <summary>
            Exception about error
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DCScriptError.ScriptText">
      <summary>
            Script source code about error
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DCScriptErrorList">
      <summary>
            Script error list
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.IDocumentScriptEngine">
      <summary>
            DCWriter使用的脚本引擎接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.HasElementEventHandler(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            是否存在文档元素事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.HasDocumentEventHandler(System.String)">
      <summary>
            判断是否存在文档事件处理函数
            </summary>
      <param name="eventName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.Execute(System.String,System.Object[],System.Boolean,System.Boolean)">
      <summary>
            Execute script method
            </summary>
      <param name="MethodName">method name</param>
      <param name="Parameters">parameters</param>
      <param name="ThrowException">whether throw exception when happend error</param>
      <param name="autoFixParameterValues">自动修正参数值</param>
      <returns>result of script method</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ExecuteReturnString(System.String,System.Object[],System.Boolean)">
      <summary>
            执行脚本方法，返回一个字符串值
            </summary>
      <param name="MethodName">脚本方法名称</param>
      <param name="Parameters">参数</param>
      <param name="ThrowException">发生错误时是否抛出异常</param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ExecuteReturnInt32(System.String,System.Object[],System.Boolean)">
      <summary>
            执行脚本方法，返回一个整数值
            </summary>
      <param name="MethodName">脚本方法名称</param>
      <param name="Parameters">参数</param>
      <param name="ThrowException">发生错误时是否抛出异常</param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ExecuteReturnBoolean(System.String,System.Object[],System.Boolean)">
      <summary>
            执行脚本方法，返回一个布尔值
            </summary>
      <param name="MethodName">脚本方法名称</param>
      <param name="Parameters">参数</param>
      <param name="ThrowException">发生错误时是否抛出异常</param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ExecuteReturnDouble(System.String,System.Object[],System.Boolean)">
      <summary>
            执行脚本方法，返回一个浮点数值
            </summary>
      <param name="MethodName">脚本方法名称</param>
      <param name="Parameters">参数</param>
      <param name="ThrowException">发生错误时是否抛出异常</param>
      <returns>返回值</returns>
      <remarks>
            如果不允许抛出异常而且又执行错误，则返回double.NaN值。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.RaiseJQueryEvent(System.Object,System.Object,System.String,System.Object)">
      <summary>
            触发DCJQuery事件
            </summary>
      <param name="scriptEngineOwner">脚本引擎拥有者</param>
      <param name="element">元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="parameter">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ClearBuffer">
      <summary>
            清空缓存数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.Execute(System.String,System.Object[],System.Boolean)">
      <summary>
            Execute script method
            </summary>
      <param name="MethodName">method name</param>
      <param name="Parameters">parameters</param>
      <param name="ThrowException">whether throw exception when happend error</param>
      <returns>result of script method</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.DebugCompile">
      <summary>
            Compile script with debug mode
            </summary>
      <returns>result</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ShowErrorDialog(System.Windows.Forms.IWin32Window)">
      <summary>
            显示脚本错误信息对话框
            </summary>
      <param name="parent">父窗体</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.UpdateScriptText">
      <summary>
            更新脚本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.CheckVBScriptInvalidte(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            检测VB脚本是否无效
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.GetMethodNameByScriptText(System.String)">
      <summary>
            根据脚本文本获得脚本方法名称
            </summary>
      <param name="txt">文本</param>
      <returns>名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.ExecuteSub(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            针对一个文档元素执行脚本方法
            </summary>
      <param name="element">当前文档元素对象</param>
      <param name="subName">方法名称</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.Start">
      <summary>
            启动脚本引擎
            </summary>
      <returns>启动是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.RaiseElementEventHandler(DCSoft.Writer.Dom.XTextElement,System.String,System.Object[])">
      <summary>
            触发文档元素事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="parameters">参数列表</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.RaiseDocumentEventHandler(System.String,System.Object[])">
      <summary>
            触发文档事件
            </summary>
      <param name="eventName">事件名称</param>
      <param name="parameters">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Script.IDocumentScriptEngine.Close">
      <summary>
            Close
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.RuntimeScriptTextWithCompilerErrorMessage">
      <summary>
            script in fact and with compiler error message , for user debug.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.ScriptText">
      <summary>
            Native script source code.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.ScriptErrors">
      <summary>
            Script error list
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.CompilerErrorMessage">
      <summary>
            编译错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.CompilerErrors">
      <summary>
            Compiler error list
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.CurrentElement">
      <summary>
            当前元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.EventArgs">
      <summary>
            事件参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.IDocumentScriptEngine.ScriptSession">
      <summary>
            脚本中使用的全局上下文对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.ElementVBScriptEventTemplate">
      <summary>
            文档元素的脚本事件模板
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.ElementVBScriptEventTemplate.CreateScriptEventTemplate(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            根据文档元素创建VB脚本事件模板对象
            </summary>
      <param name="element">文档元素对象</param>
      <returns>创建的事件模板对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.ElementVBScriptEventTemplate.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.VBScriptItem">
      <summary>
            VB脚本项目
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItem.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Script.VBScriptItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.VBScriptItem.ScriptText">
      <summary>
            脚本名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.VBScriptItem.ScriptMethodName">
      <summary>
            脚本方法名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.VBScriptItemList">
      <summary>
            VB脚本项目列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItemList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItemList.ContainsScript(System.String)">
      <summary>
            判断是否存在指定名称的有效脚本代码
            </summary>
      <param name="name">名称</param>
      <returns>是否存在脚本代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItemList.SetScript(System.String,System.String)">
      <summary>
            设置脚本
            </summary>
      <param name="name">名称</param>
      <param name="scriptText">脚本</param>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItemList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Script.VBScriptItemList.ToString">
      <summary>
            表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Script.VBScriptItemList.Item(System.String)">
      <summary>
            获得指定名称的项目
            </summary>
      <param name="name">指定的名称</param>
      <returns>获得的项目，若未找到则返回空引用</returns>
    </member>
    <member name="P:DCSoft.Writer.Script.VBScriptItemList.IsEmpty">
      <summary>
            列表内容是否为空
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DomExpression">
      <summary>
            表达式对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Script.DomExpression.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpression.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpression.Expression">
      <summary>
            表达式文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpression.ReferencedElements">
      <summary>
            表达式中引用的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpression.Type">
      <summary>
            简单的表达式格式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DomExpressionType">
      <summary>
            表达式类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Script.DomExpressionType.Simple">
      <summary>
            简单的表达式类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Script.DomExpressionType.Script">
      <summary>
            脚本表达式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Script.DomExpressionType.Custom">
      <summary>
             自定义表达式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DomExpressionEventHandler">
      <summary>
            表达式事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Script.DomExpressionEventArgs">
      <summary>
            表达式事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.DomExpressionEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.DomExpressionEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Script.DomExpression)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="element">当前元素对象</param>
      <param name="exp">表达式对象</param>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpressionEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpressionEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpressionEventArgs.Expression">
      <summary>
            表达式对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpressionEventArgs.Result">
      <summary>
            表达式执行的结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Script.DomExpressionList">
      <summary>
            表达式信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Script.DomExpressionList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Script.DomExpressionList.Item(System.String)">
      <summary>
            获得指定名称的表达式对象
            </summary>
      <param name="name">表达式名称</param>
      <returns>表达式对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Security.DCSignInputInfo">
      <summary>
            用户电子签名操作输入参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignInputInfo._Attributes">
      <summary>
            自定义属性列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.DCSignInputInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.DCSignInputInfo.GetAttribute(System.String)">
      <summary>
            获得属性值
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.DCSignInputInfo.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Writer.Security.DCSignInputInfo.SetImageData(System.Drawing.Image)">
      <summary>
            设置图片数据
            </summary>
      <param name="img">图片对象</param>
    </member>
    <member name="M:DCSoft.Writer.Security.DCSignInputInfo.SetImageDataByBytes(System.Byte[])">
      <summary>
            直接设置图片的二进制数据
            </summary>
      <param name="imgData">图片数据</param>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.RecordID">
      <summary>
            记录编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ElementID">
      <summary>
            相关的文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ProviderName">
      <summary>
            指定的签名功能提供者名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.UserID">
      <summary>
            用户编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.UserName">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.Description">
      <summary>
            说明信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.Time">
      <summary>
            签名时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ImageData">
      <summary>
            签章图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.InsertSignImageAtCaret">
      <summary>
            是否在光标处显示签名图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.SpecifyInsertElementIndex">
      <summary>
            从0开始计算的指定的插入签名图片的元素位置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ImageInFrontOfText">
      <summary>
            签名图片悬浮在文字之上
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ImageTransparentColor">
      <summary>
            图片透明色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.ClientName">
      <summary>
            客户端名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.Width">
      <summary>
            指定的签名图片宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DCSignInputInfo.Height">
      <summary>
            指定的签名图片高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Security.DocumentSecurityOptions">
      <summary>
            授权相关的选项
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Security.DocumentSecurityOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.DocumentSecurityOptions.GetTrackVisibleConfig(System.Int32)">
      <summary>
            获得指定等级使用的可视化设置
            </summary>
      <param name="level">等级</param>
      <returns>获得的可视化设置信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.DocumentSecurityOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.DocumentSecurityOptions.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.CAMode">
      <summary>
            CA运行模式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.CAServerIP">
      <summary>
            CA服务器地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.CAServerPort">
      <summary>
            CA服务器的端口号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.CreatorTipFormatString">
      <summary>
            文档内容创建信息格式化字符串
            </summary>
      <remarks>
            例如“{DisplaySavedTime:yyyy-MM-dd HH:mm:ss}由{Name}创建”。
            这里可用的属性名是类型DCSoft.Writer.Security.UserHistoryInfo中所有公开的属性名。
            可以为Index,ID,Name,Name2,SavedTime,DisplaySavedTime,SaveTimeString,PermissionLevel,
            Description,ClientName,Tag。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.DeleterTipFormatString">
      <summary>
            文档内容逻辑删除信息格式化字符串
            </summary>
      <remarks>
            例如“{DisplaySavedTime:yyyy-MM-dd HH:mm:ss}由{Name}删除”
            这里可用的属性名是类型DCSoft.Writer.Security.UserHistoryInfo中所有公开的属性名。
            可以为Index,ID,Name,Name2,SavedTime,DisplaySavedTime,SaveTimeString,PermissionLevel,
            Description,ClientName,Tag。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.AutoEnablePermissionWhenUserLogin">
      <summary>
            在用户登录时自动启用授权控制。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.EnablePermission">
      <summary>
            启用文档内容安全和权限控制。若为false则不启用，文档内容可任意编辑。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.CanModifyDeleteSameLevelContent">
      <summary>
            能否修改或删除同授权等级的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.RealDeleteOwnerContent">
      <summary>
            用户是物理删除自己曾经输入的内容。默认为true。
            </summary>
      <remarks>
            用户能物理删除自己曾经输入的内容。默认为false。例如用户“张三”
            曾经输入一段文字保存后在被其他高权限的用户修改掉了，然后“张三”
            再次登录来打开文档修改此前由本人输入的内容。若RealDeleteOwnerContent选项值为true，
            则此时进行的是物理删除，不会留下任何痕迹；若RealDeleteOwnerContent选项值为false，
            则此时进行的是逻辑删除，会留下修改痕迹。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.ShowPermissionTip">
      <summary>
            是否显示授权相关的提示信息，若为true，则在编辑器中当鼠标移动到
            文档内容时，会以提示文本的方式显示文档内容权限和痕迹信息。
            默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.PowerfulSignDocument">
      <summary>
            使用强权文档签名。若设置为false，则高权限的用户仍然可以修改低权限签名锁定的内容。
            默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.EnableLogicDelete">
      <summary>
            执行逻辑删除。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.ShowLogicDeletedContent">
      <summary>
            显示被逻辑删除的元素。默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.ShowNewContentMarkForFirstHistory">
      <summary>
            是否显示第一个操作历史记录的新增痕迹，只在ShowPermissionMark=true是才发生作用，默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.ShowPermissionMark">
      <summary>
            是否显示授权标记。若为true，则用蓝色下划线标记出高权限用户输入
            的内容，使用删除线标记出被逻辑删除的内容。
            默认为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.ShowFlagForOnlySoftwareSign">
      <summary>
            是否显示纯软件签名（无可靠第三方签名）时的签名图片左上角的标记。
            默认为true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.TrackVisibleLevel0">
      <summary>
            等级0的用户痕迹可视化选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.TrackVisibleLevel1">
      <summary>
            等级1的用户痕迹可视化选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.TrackVisibleLevel2">
      <summary>
            等级2的用户痕迹可视化选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.TrackVisibleLevel3">
      <summary>
            等级大于等于3的用户痕迹可视化选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.DefaultTrackVisibleLevel0">
      <summary>
            系统默认的等级0的用户痕迹可视化选项
            </summary>
      <remarks>
            无下划线无背景色，删除线为一条淡红色线。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.DefaultTrackVisibleLevel1">
      <summary>
            系统默认的等级1的用户痕迹可视化选项
            </summary>
      <remarks>
            默认为无背景色。下划线为1条蓝色线，删除线为1条红色线。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.DefaultTrackVisibleLevel2">
      <summary>
            系统默认的等级2的用户痕迹可视化选项
            </summary>
      <remarks>
            默认为背景色为淡黄色。下划线为双蓝色线。删除线为双红色线。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Security.DocumentSecurityOptions.DefaultTrackVisibleLevel3">
      <summary>
            系统默认的等级大于等于3的用户痕迹可视化选项
            </summary>
      <remarks>
            默认为背景色为黄色。下划线为2条蓝色。删除线为2条红色。
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.Security.UserHistoryInfo">
      <summary>
            用户历史信息
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfo.CreateInstance">
      <summary>
            创建一个对象实例
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfo.#ctor(DCSoft.Writer.Security.UserLoginInfo)">
      <summary>
            初始化对象
            </summary>
      <param name="info">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfo.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.Index">
      <summary>
            对象编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.ID">
      <summary>
            用户编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.Name">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.Name2">
      <summary>
            名称2
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.SavedTime">
      <summary>
            保存文档的时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.DisplaySavedTime">
      <summary>
            用于显示的保存文档的时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.IsEmptySaveTime">
      <summary>
            判断保存文档时间是否是空的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.SaveTimeString">
      <summary>
            表示保存时间的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.PermissionLevel">
      <summary>
            用户权限许可等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.Description">
      <summary>
            附加的说明文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.ClientName">
      <summary>
            客户端的名称,可以为电脑IP/计算机名等等。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.Tag">
      <summary>
            扩展数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfo.CheckedValue">
      <summary>
            勾选值，只适用于勾选框操作历史记录。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Security.UserHistoryInfoList">
      <summary>
            用户历史信息列表
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Security.UserHistoryInfoList._CanCompressLastItem">
      <summary>
            能否允许压缩掉最后一个列表项目。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.RefreshIndex">
      <summary>
            刷新元素编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.GetInfo(System.Int32)">
      <summary>
            获得指定编号的用户历史信息对象
            </summary>
      <param name="index">编号</param>
      <returns>用户历史信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.GetPermissionLevel(System.Int32)">
      <summary>
            获得指定用户编号的授权许可等级
            </summary>
      <param name="index">用户编号</param>
      <returns>许可等级</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.GetID(System.Int32)">
      <summary>
            获得指定用户编号的用户编号
            </summary>
      <param name="index">用户编号</param>
      <returns>用户编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.Clone">
      <summary>
            深度复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.SortByIndex">
      <summary>
            根据序号进行排序
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Security.UserHistoryInfoList.ComSetItem(System.Int32,DCSoft.Writer.Security.UserHistoryInfo)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfoList.CurrentIndex">
      <summary>
            当前编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfoList.CurrentPermissionLevel">
      <summary>
            当前授权等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfoList.CurrentInfo">
      <summary>
            当前用户信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserHistoryInfoList.CurrentUserID">
      <summary>
            当前用户编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Security.UserLoginInfo">
      <summary>
            用户登录信息
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Security.UserLoginInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.ID">
      <summary>
            用户编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.Name">
      <summary>
            用户名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.Name2">
      <summary>
            用户名2
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.ClientName">
      <summary>
            客户端名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.PermissionLevel">
      <summary>
            用户权限许可等级,数值越高，等级就越高，高等级能压制低等级，低等级无法修改高等级。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.Description">
      <summary>
            登录时附加的说明文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Security.UserLoginInfo.Tag">
      <summary>
            扩展数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Security.DCSignRange">
      <summary>
            电子签名范围
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.None">
      <summary>
            无任何元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.Parent">
      <summary>
            父元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.InputField">
      <summary>
            输入域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.TableCell">
      <summary>
            单元格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.TableRow">
      <summary>
            表格行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.Table">
      <summary>
            表格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.Section">
      <summary>
            文档节
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.Body">
      <summary>
            文档正文
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignRange.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Security.DCSignValidateState">
      <summary>
            签名校验状态枚举变量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignValidateState.NotDetect">
      <summary>
            未检测
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignValidateState.Invalidate">
      <summary>
            确认无效
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignValidateState.ValidateBySoftOnly">
      <summary>
            听过软件验证，不过没有签名硬件的支持，有小概率被破解。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignValidateState.Validate">
      <summary>
            经过软件和硬件验证的。是法律上可靠的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Security.DCSignValidateState.NotSupportFormat">
      <summary>
            不支持的数据格式。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.EventExpressionInfo">
      <summary>
            文档元素事件表达式信息对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfo.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.EventExpressionInfo.EventName">
      <summary>
            事件名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.EventExpressionInfo.Expression">
      <summary>
            表达式文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.EventExpressionInfo.Target">
      <summary>
            目标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.EventExpressionInfo.CustomTargetName">
      <summary>
            自定义的目标元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.EventExpressionInfo.TargetPropertyName">
      <summary>
            目标属性名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.EventExpressionInfoList">
      <summary>
            事件表达式信息列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfoList.AddItem(System.String,System.String,DCSoft.Writer.Expression.EventExpressionTarget,System.String,System.String)">
      <summary>
            添加项目
            </summary>
      <param name="eventName">
      </param>
      <param name="expression">
      </param>
      <param name="target">
      </param>
      <param name="customTargetName">
      </param>
      <param name="targetPropertyName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfoList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.EventExpressionInfoList.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="T:DCSoft.Writer.Expression.BindingExpression">
      <summary>
            绑定的表达式对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Expression.BindingExpression.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.BindingExpression.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.BindingExpression.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.BindingExpression.Enabled">
      <summary>
            项目是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.BindingExpression.Style">
      <summary>
            表达式样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.BindingExpression.Expression">
      <summary>
            表达式内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.BindingExpressionList">
      <summary>
            表达式列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.BindingExpressionList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.BindingExpressionList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Writer.Expression.BindingExpressionStyle">
      <summary>
            绑定表达式样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.BindingExpressionStyle.Expression">
      <summary>
            表达式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.BindingExpressionStyle.DataBinding">
      <summary>
            数据源绑定
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.BindingExpressionStyle.Script">
      <summary>
            脚本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.dlgEventExpressionInfos">
      <summary>
            表达式编辑器对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.dlgEventExpressionInfos.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.dlgEventExpressionInfos.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.dlgEventExpressionInfos.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Expression.dlgEventExpressionInfos.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.dlgEventExpressionInfos.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.dlgEventExpressionInfos.ListModified">
      <summary>
            列表发生改变标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.dlgEventExpressionInfos.InputExpressions">
      <summary>
            编辑的表达式信息列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.DocumentExpressionExecuter">
      <summary>
            文档数值表达式执行器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.ExpressionExecuteContext.HasLogInfos">
      <summary>
            判断是否具有对象属性值记录信息
            </summary>
      <returns>是否具有信息</returns>
    </member>
    <member name="F:DCSoft.Writer.Expression.DocumentExpressionExecuter._Stack_ExecuteEffectValueExpression">
      <summary>
            ExecuteEffectValueExpression()函数配套的堆栈
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.SynchronForModifyElementID(DCSoft.Writer.Dom.XTextElementList,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            由于元素编号发生改变而自动更新设置
            </summary>
      <param name="elements">要操作的文档元素列表</param>
      <param name="idMaps">新旧元素编号映射表</param>
      <returns>操作修改的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.GetExpressionResolverErrorMessage(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素相关的表达式执行错误信息
            </summary>
      <param name="element">文档元素对象</param>
      <returns>获得的错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.ExecuteEventExpression(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Expression.EventExpressionInfoList,System.String,System.Boolean)">
      <summary>
            执行元素的事件表达式
            </summary>
      <param name="sourceElement">事件来源文档元素对象</param>
      <param name="expressions">动作表达式列表</param>
      <param name="eventName">事件名称</param>
      <param name="loadingDocument">正在加载文档标记</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.GetTargetElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Expression.EventExpressionInfo)">
      <summary>
            获得目标文档元素对象
            </summary>
      <param name="sourceElement">源元素</param>
      <param name="info">表达式信息对象</param>
      <returns>获得的目标文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.Execute(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            执行表达式
            </summary>
      <param name="currentElement">当前元素</param>
      <param name="expression">表达式字符串</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.InitalizeExpressionResolver(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            初始化表达式列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.InitalizeExpressionResolver">
      <summary>
            初始化表达式列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.UpdateValueExpression(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            更新数值表达式
            </summary>
      <param name="element">文档元素对象</param>
      <param name="argsLoad">相关的加载文档事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.ExecuteExpressionItem(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            执行指定文档元素的数值表达式
            </summary>
      <param name="element">文档元素</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.GetElementByIdExt_True_UseCache(System.String)">
      <summary>
            DCWriter内部使用。带缓存的获取目标元素。
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.GetElementByIdExt_False_UseCache(System.String)">
      <summary>
            DCWriter内部使用。带缓存的获取目标元素。
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.ExecuteAllValueExpression">
      <summary>
            执行所有的数值表达式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.ExecuteEffectValueExpression(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            指定和指定元素关联到的数值表达式
            </summary>
      <param name="element">指定的文档元素对象</param>
      <param name="resetEffectExpressionExecuteFlag">是否重置要执行的表达式的执行状态</param>
      <returns>执行的数值表达式的个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.UpdateCellReferenceForEditRow(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextTableElement,System.Int32,System.Int32)">
      <summary>
            插入和删除表格行后更新表格单元格的表达式中对于单元格的引用
            </summary>
      <param name="document">文档对象</param>
      <param name="table">表格对象</param>
      <param name="StartRowIndex">开始更新的表格行号</param>
      <param name="insertRows">插入的列数</param>
      <returns>操作更新的单元格个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.UpdateCellReferenceForEditColumn(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextTableElement,System.Int32,System.Int32)">
      <summary>
            插入和删除表格列后更新表格单元格的表达式中对于单元格的引用
            </summary>
      <param name="document">文档对象</param>
      <param name="table">表格对象</param>
      <param name="startColumnIndex">开始更新的表格列号</param>
      <param name="insertColumns">插入的列数</param>
      <returns>操作更新的单元格个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.FixExpressionForEditRow(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            为修改表格行而更新单元格表达式中的单元格坐标信息
            </summary>
      <param name="expression">表达式文本</param>
      <param name="startRowIndex">开始的表格行号</param>
      <param name="insertRows">插入的表格行个数，若小于0则是表示删除了表格行</param>
      <param name="specifyTableName">指定的表格名称</param>
      <returns>更新后的表达式文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.DocumentExpressionExecuter.FixExpressionForEditColumn(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            为修改表格列而更新单元格表达式中的单元格坐标信息
            </summary>
      <param name="expression">表达式文本</param>
      <param name="startColIndex">开始的表格列号</param>
      <param name="insertColumns">插入的表格列个数，若小于0则是表示删除了表格列</param>
      <param name="specifyTableName">指定的表格名称</param>
      <returns>更新后的表达式文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.DocumentExpressionExecuter.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.DocumentExpressionExecuter.FastMode">
      <summary>
            快速执行表达式的模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.EventExpressionTarget">
      <summary>
            事件表达式执行目标查找方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.EventExpressionTarget.NextElement">
      <summary>
            下一个元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.EventExpressionTarget.Custom">
      <summary>
            自定义
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.EventExpressionTarget.None">
      <summary>
            不指定任何元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.NewDCExpressionExt">
      <summary>
            新版的表达式引擎对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.NewDCExpressionExt.ReportRandom">
      <summary>
            伪随机数生成器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.NewDCExpressionExt._Instances">
      <summary>
            数值表达式对象缓存区
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Expression.NewDCExpressionExt.FunctionNames">
      <summary>
            当前表达式支持的函数名
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.GetParameterValues(System.Object[])">
      <summary>
            将原始参数转换为参数数组
            </summary>
      <param name="parameters">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.CINT(System.Object,System.Object)">
      <summary>
            将数据转换为一个整数
            </summary>
      <param name="Value">要转换的数据</param>
      <param name="defaultValue">默认值</param>
      <returns>转换后的整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.CDOUBLE(System.Object,System.Object)">
      <summary>
            将数据转换为一个双精度浮点数
            </summary>
      <param name="Value">要转换的数据</param>
      <param name="defaultValue">默认值</param>
      <returns>转换后的数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ABS(System.Object)">
      <summary>
            返回绝对值
            </summary>
      <param name="Value">一个数值</param>
      <returns>返回绝对值，若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ACOS(System.Object)">
      <summary>
            计算反余弦值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ASIN(System.Object)">
      <summary>
            计算反正弦值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ATAN(System.Object)">
      <summary>
            计算反正切值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ATAN2(System.Object,System.Object)">
      <summary>
             计算正切值
            </summary>
      <param name="y">点的 y 坐标</param>
      <param name="x">点的 x 坐标</param>
      <returns>若某个参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.AVERAGE(System.Object[])">
      <summary>
            返回算术平均值
            </summary>
      <param name="args">参数</param>
      <returns>若某个参数为NAN则不参与计算,若所有参数都为NAN，则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.CEILING(System.Object)">
      <summary>
            获得大于等于指定数值的最小整数
            </summary>
      <param name="a">一个数值</param>
      <returns>返回最接近 a 的整数。如果 a 的小数部分正好处于两个整数中间，
            其中一个整数为偶数，另一个整数为奇数，则返回偶数。若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.COS(System.Object)">
      <summary>
            返回指定弧度的COS值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.COUNT(System.Object[])">
      <summary>
            返回参数的个数
            </summary>
      <param name="args">参数</param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.EXP(System.Object)">
      <summary>
            返回e的n次方
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.FLOOR(System.Object)">
      <summary>
            返回向下舍入取整数
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.INT(System.Object)">
      <summary>
            将数值向小取整为最接近的整数
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.LOG(System.Object,System.Object)">
      <summary>
            根据给定底数返回数字的对数
            </summary>
      <param name="a">要查找其对数的数字</param>
      <param name="newBase">对数的底</param>
      <returns>若某个参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.LOG10(System.Object)">
      <summary>
            返回以10为底的对数
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SOLARTERM(System.DateTime)">
      <summary>
            根据日期计算节气
            </summary>
      <param name="dt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.LOOKUP(System.Object[])">
      <summary>
            实现LOOKUP函数
            </summary>
      <param name="parameters">参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.MAX(System.Object[])">
      <summary>
            返回最大值
            </summary>
      <param name="args">参数</param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.MIN(System.Object[])">
      <summary>
            返回最小值
            </summary>
      <param name="args">参数</param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.MOD(System.Object,System.Object)">
      <summary>
            返回两个数相除的余数
            </summary>
      <param name="number">被除数</param>
      <param name="divisor">除数</param>
      <returns>若某个参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ODD(System.Object)">
      <summary>
            将正（负）数向上（下）舍入到最接近的奇数
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.POW(System.Object,System.Object)">
      <summary>
            返回某数的乘幂
            </summary>
      <param name="number">基数</param>
      <param name="power">幂数</param>
      <returns>若某个参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.PRODUCT(System.Object[])">
      <summary>
            计算所有参数的乘积
            </summary>
      <param name="args">参数</param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.RADIANS(System.Object)">
      <summary>
            将角度转换为弧度
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.RAND">
      <summary>
            返回一个介于0到1之间的随机数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ROUND(System.Object,System.Object)">
      <summary>
            进行四舍五入计算
            </summary>
      <param name="a">一个数值</param>
      <param name="digits">执行四舍五入的位数</param>
      <returns>根据位数最接近 a 的数。如果 a 的小数部分正好处于两个整数中间，
            其中一个整数为偶数，另一个整数为奇数，则返回偶数.
            若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.Rounded(System.String,System.String)">
      <summary>
            2020-04-23 李应祥 代码计算四舍五入
             </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ROUNDDOWN(System.Object)">
      <summary>
            向下舍入数字
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ROUNDUP(System.Object)">
      <summary>
            向上舍入数字
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SIGN(System.Object)">
      <summary>
            为正数返回1，为零返回0，为负数返回-1 
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SIN(System.Object)">
      <summary>
            返回指定角度的正弦值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SQRT(System.Object)">
      <summary>
            返回数值的平方根
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SUM(System.Object[])">
      <summary>
            计算所有数值的和
            </summary>
      <param name="args">
      </param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.SUMINNERVALUE(System.Object[])">
      <summary>
            计算输入域下拉项的所有值的和
            </summary>
      <param name="args">
      </param>
      <returns>若某个参数为NAN则不参与计算</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.TAN(System.Object)">
      <summary>
            返回指定角度的正切值
            </summary>
      <param name="Value">一个数值</param>
      <returns>若参数为NAN则返回NAN</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ToDouble(System.Object)">
      <summary>
            将数值转换为double
            </summary>
      <param name="v">数值</param>
      <returns>返回转换结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.#ctor(System.String,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Expression.ValueExpressionInfo,DCSoft.Writer.Expression.DocumentExpressionExecuter)">
      <summary>
            初始化
            </summary>
      <param name="expression">
      </param>
      <param name="element">
      </param>
      <param name="info">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.Evaluate">
      <summary>
            执行运算
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.NewDCExpressionExt.ToClientFunctionName(System.String)">
      <summary>
            将设计时的脚本表达式中的函数名转换为客户端运行时使用的函数名,即在所有的函数名前插入“DCExpression.”
            </summary>
      <param name="expression">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Expression.FunctionNotSupportedException">
      <summary>
            不支持的函数名异常对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.FunctionNotSupportedException.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="functionName">函数名</param>
    </member>
    <member name="M:DCSoft.Writer.Expression.FunctionNotSupportedException.ToString">
      <summary>
            表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.FunctionNotSupportedException.FunctionName">
      <summary>
            函数名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.FunctionNotSupportedException.Message">
      <summary>
            消息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Expression.ValueExpressionInfoResolver2">
      <summary>
            数据表达式执行器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfoResolver2.CloneList">
      <summary>
            复制一个列表对象，不深度复制
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfoResolver2.Item(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素使用的表达式信息对象
            </summary>
      <param name="element">文档元素</param>
      <returns>表达式信息对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Expression.ValueExpressionInfo">
      <summary>
            数值表达式信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.#ctor(DCSoft.Writer.Expression.DocumentExpressionExecuter)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.ToString">
      <summary>
            字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.IsEffect(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            是否包含
            </summary>
      <param name="sourceElement">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.GetAllEffectElements">
      <summary>
            获得所有的本表达式影响的文档元素对象列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.CheckReady">
      <summary>
            检查对象状态，若未刷新则进行刷新状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.Execute(DCSoft.Writer.Dom.XTextElement,System.Int32,System.Boolean)">
      <summary>
            执行表达式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Expression.ValueExpressionInfo.GetDisplayID(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获取ID
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.ExecutedFlag">
      <summary>
            表达式已经被执行的标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.Element">
      <summary>
            当前文档元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.ValueElement">
      <summary>
            数据来源文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.PropertyName">
      <summary>
            属性名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.Expression">
      <summary>
            原始表达式文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.AllowChainReaction">
      <summary>
            允许产生后续的连锁反应
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.SourceElements">
      <summary>
            表达式数据来源元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Expression.ValueExpressionInfo.ErrorMessage">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CanInsertElementEventArgs">
      <summary>
            CanInsert函数参数类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CanInsertElementEventArgs.#ctor(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,System.Type,DCSoft.Writer.Dom.DomAccessFlags)">
      <summary>
            初始化对象
            </summary>
      <param name="container">容器对象</param>
      <param name="index">序号</param>
      <param name="elementType">文档元素类型</param>
      <param name="flags">标记</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.CanInsertElementEventArgs.#ctor(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DomAccessFlags)">
      <summary>
            初始化对象
            </summary>
      <param name="container">容器对象</param>
      <param name="index">序号</param>
      <param name="element">文档元素</param>
      <param name="flags">标记</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Container">
      <summary>
            容器元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Index">
      <summary>
            序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.ElementType">
      <summary>
            文档元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Flags">
      <summary>
            标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.SetMessage">
      <summary>
            设置的消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Message">
      <summary>
            消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CanInsertElementEventArgs.Result">
      <summary>
            结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CopySourceInfo">
      <summary>
            复制来源信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CopySourceInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CopySourceInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.CopySourceInfo.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.CopySourceInfo.SourceID">
      <summary>
            数据来源的文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CopySourceInfo.SourcePropertyName">
      <summary>
            属性名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CopySourceInfo.DescPropertyName">
      <summary>
            目标属性名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CopySourceInfo.IgnoreChildElements">
      <summary>
            忽略掉子元素的操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CurrentContentStyleInfo">
      <summary>
            文档内容当前样式信息对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.CurrentContentStyleInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CurrentContentStyleInfo.RefreshParagraph(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            刷新当前段落样式
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.CurrentContentStyleInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.CurrentContentStyleInfo.Content">
      <summary>
            当前文档内容样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CurrentContentStyleInfo.ContentStyleForNewString">
      <summary>
            为新增文本而使用的文档内容样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CurrentContentStyleInfo.Paragraph">
      <summary>
            当前段落样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CurrentContentStyleInfo.Cell">
      <summary>
            当前单元格样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DataSourceBindingDescription">
      <summary>
            数据源绑定信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DataSourceBindingDescription.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.DataSource">
      <summary>
            数据源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.BindingPath">
      <summary>
            数据源的绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.ElementID">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.FormatString">
      <summary>
            格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.AutoUpdate">
      <summary>
            自动更新
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DataSourceBindingDescription.Readonly">
      <summary>
            只读
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DataSourceBindingDescriptionList">
      <summary>
            数据源绑定信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DataSourceBindingDescriptionList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCContentLockInfo">
      <summary>
            文档内容锁定信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCContentLockInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCContentLockInfo.CheckCurrentUserAuthorize(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            检查操作文档的当前用户是否为授权用户
            </summary>
      <param name="document">文档对象</param>
      <returns>是否授权通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCContentLockInfo.CheckAuthorize(System.String)">
      <summary>
            检查是否为授权用户
            </summary>
      <param name="userID">用户名</param>
      <returns>是否授权通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCContentLockInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DCContentLockInfo.OwnerUserID">
      <summary>
            文件锁定的拥有者用户ID
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DCContentLockInfo.CreationTime">
      <summary>
            锁定时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DCContentLockInfo.AuthorisedUserIDList">
      <summary>
            授权用户名列表，各个用户名之间用半角逗号分开。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DetectResultForValueBindingModified">
      <summary>
            检测数据源绑定导致的内容发送改变的结果信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DetectResultForValueBindingModified.CurrentValue">
      <summary>
            当前数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DetectResultForValueBindingModified.NewValue">
      <summary>
            新数值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DetectResultForValueBindingModifiedList">
      <summary>
            检测数据源绑定导致的内容发送改变的结果信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DetectResultForValueBindingModifiedList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentComment">
      <summary>
            文档批注
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentComment.PositionFixed">
      <summary>
            位置已经被修正了
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentComment._NewHeight">
      <summary>
            内部的新的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.GetRuntimeTitle(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得运行时的标题
            </summary>
      <param name="doc">文档对象</param>
      <returns>标题文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.AnchorElementFocus">
      <summary>
            锚点文档元素获得焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.ContainsContentIndex(System.Int32)">
      <summary>
            DCWriter内部使用：判断是否命中内容元素序号
            </summary>
      <param name="contentIndex">指定的内容元素序号</param>
      <returns>是否命中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.SetDefaultBackColor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            设置文档批注使用的默认背景色
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.Select">
      <summary>
            选择批注
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.Focus">
      <summary>
            选择批注并获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentComment.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.IsInternal">
      <summary>
            为内部生成的文档批注对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.ID">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Visible">
      <summary>
            对象是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Invalidate">
      <summary>
            视图状态无效标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Document">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.ReferenceElements">
      <summary>
            引用本批注的文档元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.RuntimeVisible">
      <summary>
            DCWriter内部使用。运行时是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.AnchorElement">
      <summary>
            锚元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.AnchorElementText">
      <summary>
            锚点文档元素文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.OwnerPage">
      <summary>
            注释所属的文档页面对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.DataBoundItem">
      <summary>
            绑定的对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.AnchorPosition">
      <summary>
            定位位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Index">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.BindingUserTrack">
      <summary>
            绑定了用户痕迹
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Attributes">
      <summary>
            自定义属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.AuthorID">
      <summary>
            创建者编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Author">
      <summary>
            创建者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.CreationTime">
      <summary>
            对象的创建时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Text">
      <summary>
            批注文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.CreatorIndex">
      <summary>
            创建者编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.BackColor">
      <summary>
            背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.BackColorValue">
      <summary>
            边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.ForeColor">
      <summary>
            文本颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.ForeColorValue">
      <summary>
            边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.BorderColor">
      <summary>
            边框色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.BorderColorValue">
      <summary>
            边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Left">
      <summary>
            左边位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Top">
      <summary>
            顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Width">
      <summary>
            宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.NewHeight">
      <summary>
            内部的新的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.ContentHeight">
      <summary>
            内容高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentComment.TitleHeight">
      <summary>
            标题高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentCommentList">
      <summary>
            批注列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.ComSetItem(System.Int32,DCSoft.Writer.Dom.DocumentComment)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.HasVisibleComment">
      <summary>
            是否存在可见的文档批注
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.Clone(System.Boolean)">
      <summary>
            复制对象，对元素不进行深度复制
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.SortForView">
      <summary>
            内部使用：为视图进行排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.GetByCommentIndex(System.Int32)">
      <summary>
            获得指定编号的批注对象
            </summary>
      <param name="commentIndex">指定的编号</param>
      <returns>获得的批注对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentCommentList.FixDomState">
      <summary>
            修正状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentCommentList.MaxID">
      <summary>
            最大编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentContentStyle">
      <summary>
            文档样式信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentStyle.InnerLockFontSize">
      <summary>
            DCWriter内部使用.鎖定字體大小。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentStyle.InnerWidthValue">
      <summary>
            宽度值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentStyle.InnerHeightValue">
      <summary>
            高度值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.RemovePropertyValue(System.String)">
      <summary>
            删除指定名称的属性值
            </summary>
      <param name="name">属性名称</param>
      <returns>操作是否修改了对象数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.GetDefaultValuePropertyNames(System.String)">
      <summary>
            获得采用默认值的属性名称列表
            </summary>
      <returns>属性名称列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.GetDefaultValuePropertyNames2(System.String)">
      <summary>
            获得采用默认值的属性名称列表
            </summary>
      <returns>属性名称列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.UpdateState(DCSoft.Drawing.DCGraphics)">
      <summary>
            更新状态
            </summary>
      <param name="g">图形绘制对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyle.RemoveSameStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            删除与默认样式相同的项目，只保留不同的项目
            </summary>
      <param name="defaultStyle">默认样式对象</param>
      <returns>经过操作后本对象剩余的项目</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.MyRuntimeStyle">
      <summary>
            运行时样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.Tags">
      <summary>
            附加的数据,本数据不存储
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.PrintColor">
      <summary>
            打印用文本颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.PrintColorString">
      <summary>
            字符串格式的对象颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.PrintBackColor">
      <summary>
            打印用背景颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.PrintBackColorString">
      <summary>
            字符串格式的对象颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.RuntimePrintColor">
      <summary>
            运行时使用的打印用的文本颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.LayoutDirection">
      <summary>
            内容排版方向，默认为Default
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.CommentIndex">
      <summary>
            批注编号，默认为-1.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.ProtectType">
      <summary>
            内容保护模式,默认值为None。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.TitleLevel">
      <summary>
            标题层次,默认值为-1
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.HasTitleLevel">
      <summary>
            是否存在有效的标题层次
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.GridLineType">
      <summary>
            本属性已经淘汰了，请使用XTextContentElement.GridLine属性。网格线类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.SpecifyGridLineStep">
      <summary>
            请改用XTextContentElement.SpecifyFixedLineHeight属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.GridLineOffsetY">
      <summary>
            本属性已经淘汰了，请使用XTextContentElement.GridLine属性。网格线纵向偏移量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.GridLineStyle">
      <summary>
            本属性已经淘汰了，请使用XTextContentElement.GridLine属性。网格线线型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.GridLineColor">
      <summary>
            本属性已经淘汰了，请使用XTextContentElement.GridLine属性。 网格线颜色
             </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.GridLineColorString">
      <summary>
            本属性已经淘汰了，请使用XTextContentElement.GridLine属性。字符串格式的对象颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.CreatorIndex">
      <summary>
            创建元素的用户信息编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.Cursor">
      <summary>
            光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.DeleterIndex">
      <summary>
            删除元素的用户信息编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.Link">
      <summary>
            超链接地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.ReferenceCount">
      <summary>
            被引用的次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.TabWidth">
      <summary>
            制表宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.DefaultLineHeight">
      <summary>
            默认行高
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyle.FontHeight">
      <summary>
            字体高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentContentStyleContainer">
      <summary>
            文档样式容器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentStyleContainer.HasLetterSpacingStyle">
      <summary>
            判断是否存在字符间距的样式设置
            </summary>
      <remarks>
            字符间距是一种不常见的设置，多数情况下可以不考虑该设置值来提高文档排版性能。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.UpdateStateForLayoutPerformance">
      <summary>
            为优化排版性能而更新一些状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.GetStyleIndexByCache(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            使用内部缓存的方式来快速获得样式编号
            </summary>
      <param name="style">样式对象</param>
      <returns>样式编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.ClearCacheForGetStyleIndexByCache">
      <summary>
            清空GetStyleIndexByCache()导致的内部缓存的数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.GetDCRuntimeStyle(System.Int32)">
      <summary>
            获得运行时的样式
            </summary>
      <param name="styleIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.OnStylesChanged">
      <summary>
            样式列表发生改变
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.GetLogicDeletedStyleIndexs">
      <summary>
            获得所有标记为逻辑删除的样式编号列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.GetStyleVisibles(System.Boolean)">
      <summary>
            获得各个样式的可见性
            </summary>
      <param name="showLogicDeletedContent">是否显示逻辑删除的内容</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.IsVisibleStyleIndex(System.Int32,System.Boolean)">
      <summary>
            判断是否为可显示的文档内容样式编号
            </summary>
      <param name="styleIndex">
      </param>
      <param name="showLogicDeletedContent">是否显示逻辑删除的内容</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.GetStyleIndexsWithTitleLevel">
      <summary>
            获得带有标题层次的样式编号
            </summary>
      <returns>样式编号列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.CreateStyleInstance">
      <summary>
            创建文档样式信息对象
            </summary>
      <returns>创建的信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentStyleContainer.UpdateState(DCSoft.Drawing.DCGraphics)">
      <summary>
            更新所有的样式对象的内部状态
            </summary>
      <param name="g">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyleContainer.Document">
      <summary>
            对象所示文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyleContainer.Default">
      <summary>
            默认样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentStyleContainer.Styles">
      <summary>
            样式列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentEventArgs">
      <summary>
            文档事件参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventArgs.DefaultCursor">
      <summary>
            默认鼠标光标对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventArgs._StrictMatch">
      <summary>
            鼠标光标坐标转换时出现了严格命中
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventArgs.strTooltip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateMouseDown(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.MouseEventArgs)">
      <summary>
            创建鼠标按键按下事件参数
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateMouseMove(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.MouseEventArgs)">
      <summary>
            创建鼠标移动按下事件参数
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateMouseUp(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.MouseEventArgs)">
      <summary>
            创建鼠标按键松开事件参数
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateKeyDown(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.KeyEventArgs)">
      <summary>
            创建键盘按键按下事件参数对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的事件参数对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateKeyPress(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            创建键盘按键按下事件参数对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的事件参数对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateKeyPress(DCSoft.Writer.Dom.XTextDocument,System.Char)">
      <summary>
            创建键盘按键按下事件参数对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="chr">字符值</param>
      <returns>创建的事件参数对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.CreateKeyUp(DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.KeyEventArgs)">
      <summary>
            创建键盘按键松开事件参数对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">原始事件参数</param>
      <returns>创建的事件参数对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DocumentEventStyles)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="style">事件类型</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.#ctor">
      <summary>
            内部使用的构造函数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.initMouseEvent(System.String,System.Int32,System.Int32,System.Windows.Forms.MouseButtons,System.Int32)">
      <summary>
            初始化鼠标事件参数
            </summary>
      <param name="type">
      </param>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="button">
      </param>
      <param name="click">
      </param>
      <seealso cref="!:https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent/initMouseEvent" />
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentEventArgs.Clone">
      <summary>
            复制对象
            </summary>
      <returns>对象复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Style">
      <summary>
            文档事件类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Document">
      <summary>
            对象所在文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Element">
      <summary>
            事件相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Name">
      <summary>
            事件名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.AltKey">
      <summary>
            用户是否按下了 Alt 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.CtlKey">
      <summary>
            用户是否按下的 Ctl 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.ShiftKey">
      <summary>
            用户是否按下了 Shift 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.KeyCode">
      <summary>
            按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.KeyCodeValue">
      <summary>
            按键值，仅作为COM接口使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.KeyChar">
      <summary>
            键盘字符值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.KeyCharValue">
      <summary>
            键盘字符值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.CancelBubble">
      <summary>
            取消事件冒泡
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Handled">
      <summary>
            事件已经处理了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.AlreadSetSelection">
      <summary>
            已经设置了文档内容选择区域，无需自动设置选择区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.StrictMatch">
      <summary>
            鼠标光标坐标转换时出现了严格命中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.MouseClicks">
      <summary>
            鼠标点击次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.ClientX">
      <summary>
            鼠标在文档控件客户区的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.ClientY">
      <summary>
            鼠标在文档控件客户区的Y坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.X">
      <summary>
            鼠标光标在视图中的X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Y">
      <summary>
            鼠标光标在视图中的Y坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Button">
      <summary>
            鼠标按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.ButtonValue">
      <summary>
            鼠标按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.WheelDelta">
      <summary>
            鼠标滚轮值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.ReturnValue">
      <summary>
            事件返回值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Cursor">
      <summary>
            视图区鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentEventArgs.Tooltip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentInfo">
      <summary>
            文档设置信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.SubDocumentSettings">
      <summary>
            子文档模式下是设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Readonly">
      <summary>
            文档内容只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.RefreshLayoutFlag">
      <summary>
            刷新文档排版标记,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.RefreshViewFlag">
      <summary>
            刷新文档视图标记,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.ShowHeaderBottomLine">
      <summary>
            是否显示页眉下面的横线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.FieldBorderElementWidth">
      <summary>
            输入域边框元素像素宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.KBEntryRangeMask">
      <summary>
            本文档使用的知识库节点应用范围掩码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.RuntimeTitle">
      <summary>
            实际使用的文档标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.ID">
      <summary>
            文档编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.IsTemplate">
      <summary>
            该文档是模板文档
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.MRID">
      <summary>
            文档关联的病历编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.TimeoutHours">
      <summary>
            超时小时数，如果当前时间减去文档创建时间的
            小时数超过该属性值，则文档超时。
            本属性设置为0表示无意义。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Version">
      <summary>
            内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Title">
      <summary>
            文档标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Description">
      <summary>
            文档说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.LicenseText">
      <summary>
            授权信息文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.CreationTime">
      <summary>
            文档创建日期
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.LastModifiedTime">
      <summary>
            最后修改日期
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.EditMinute">
      <summary>
            文档编辑的时间长度，单位分钟。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.LastPrintTime">
      <summary>
            最后一次打印的时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Author">
      <summary>
            作者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.AuthorName">
      <summary>
            作者姓名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.AuthorPermissionLevel">
      <summary>
            作者使用的授权等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DepartmentID">
      <summary>
            部门编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DepartmentName">
      <summary>
            部门名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DocumentFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DocumentType">
      <summary>
            文档类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DocumentProcessState">
      <summary>
            文档操作状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.DocumentEditState">
      <summary>
            文档编辑状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Comment">
      <summary>
            内容说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Operator">
      <summary>
            操作者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.NumOfPage">
      <summary>
            文档总页数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.UseLanguage2">
      <summary>
            启用第二语言
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.Printable">
      <summary>
            文档能否打印
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.StartPositionInPringJob">
      <summary>
            文档在打印任务中的开始的打印位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentInfo.HeightInPrintJob">
      <summary>
            文档在打印任务中的打印高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentOutlineNode">
      <summary>
            文档大纲节点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentOutlineNode.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentOutlineNode.Focus">
      <summary>
            让节点获得焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentOutlineNode.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.Visible">
      <summary>
            节点是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.Level">
      <summary>
            节点等级，根节点的Level值为0。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.LevelText">
      <summary>
            表示层次的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.ParagraphFlag">
      <summary>
            所属段落符号元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.StartElement">
      <summary>
            开始元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.Parent">
      <summary>
            父节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentOutlineNode.ChildNodes">
      <summary>
            子节点列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentOutlineNodeList">
      <summary>
            文档大纲节点列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentOutlineNodeList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentOutlineNodeList.Fill(DCSoft.Writer.Dom.XTextParagraphFlagElement,System.String)">
      <summary>
            填充节点
            </summary>
      <param name="rootElement">
      </param>
      <param name="levelText">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentPaintEventArgs">
      <summary>
            对外公开的绘制文档内容事件参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentPaintEventArgs._Graphics">
      <summary>
            绘图对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorBlack">
      <summary>
            黑色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorWhite">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorRed">
      <summary>
            白色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorBlue">
      <summary>
            蓝色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorYellow">
      <summary>
            黄色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMColorGreen">
      <summary>
            绿色颜色值
            </summary>
      <returns>颜色值整数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMViewBoundsLeft">
      <summary>
            获得视图的左端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMViewBoundsTop">
      <summary>
            获得视图的顶端位置
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMViewBoundsWidth">
      <summary>
            获得视图的边界的宽度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMViewBoundsHeight">
      <summary>
            获得视图的边界高度
            </summary>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDrawLine(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制线段
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="x1">起点X坐标</param>
      <param name="y1">起点Y坐标</param>
      <param name="x2">终点X坐标</param>
      <param name="y2">终点Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDrawRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制方框
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMFillRectangle(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充矩形
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDrawDrawEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制椭圆
            </summary>
      <param name="colorARGB">颜色的ARGB值</param>
      <param name="lineWidth">线条宽度</param>
      <param name="lineStyle">线条样式</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMFillEllipse(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的填充椭圆
            </summary>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDrawString(System.String,System.String,System.Single,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制字符串
            </summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="colorARGB">ARGB的颜色值</param>
      <param name="alignment">水平对齐方式,0:左对齐，1:居中对齐，2:右对齐</param>
      <param name="lineAlignment">垂直对齐方式,0:靠上对齐，1:居中对齐，2:靠下对齐</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="left">起点X坐标</param>
      <param name="top">起点Y坐标</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMMeasureStringWidth(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示宽度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMMeasureStringHeight(System.String,System.String,System.Single,System.Int32,System.Boolean,System.Int32)">
      <summary>计算文字显示高度</summary>
      <param name="text">文本</param>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <param name="fontStyle">字体样式0：普通文本；1：粗体；2：斜体；4：下划线；8：删除线，数值可叠加。</param>
      <param name="singleLine">是否为单行文本</param>
      <param name="maxWidth">最大宽度</param>
      <returns>文字显示宽度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMGetFontHeight(System.String,System.Single)">
      <summary>
            获得字体高度
            </summary>
      <param name="fontName">字体名称</param>
      <param name="fontSize">字体大小</param>
      <returns>字体高度。为1/300英寸为单位。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMLastErrorMessage">
      <summary>
            最后一次操作的错误信息
            </summary>
      <returns>错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            将ARGB的颜色值转换为整数
            </summary>
      <param name="a">A</param>
      <param name="r">R</param>
      <param name="g">G</param>
      <param name="b">B</param>
      <returns>颜色整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDisposeImage(System.Int32)">
      <summary>
            销毁图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GetCOMImage(System.Int32)">
      <summary>
            内部的获得图片对象
            </summary>
      <param name="index">图片句柄</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.COMDrawImage(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            COM的绘制图片
            </summary>
      <param name="imageIndex">图片句柄，源自COMLoadImageFromFile()/COMLoadImageFromBinary()/COMLoadImageFromBase64String().</param>
      <param name="left">左端位置</param>
      <param name="top">顶端位置</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsGetFontHeight(System.Drawing.Font)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsGetFontHeight(DCSoft.Drawing.XFontValue)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Drawing.RectangleF,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsDrawRoundRectangle(DCSoft.Drawing.XPenStyle,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            绘制圆角矩形
            </summary>
      <param name="p">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsFillRoundRectangle(System.Drawing.Color,System.Single,System.Single,System.Single,System.Single,System.Single)">
      <summary>
            填充圆角矩形
            </summary>
      <param name="c">
      </param>
      <param name="left">
      </param>
      <param name="top">
      </param>
      <param name="width">
      </param>
      <param name="height">
      </param>
      <param name="radio">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Drawing.DCGraphics,System.Drawing.RectangleF,DCSoft.Writer.Dom.DocumentRenderMode)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="g">绘图对象</param>
      <param name="clipRect">剪切矩形</param>
      <param name="renderMode">绘图模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.#ctor(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            初始化对象
            </summary>
      <param name="g">绘图对象</param>
      <param name="clipRectangle">剪切矩形</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.IsVisible(DCSoft.Drawing.RenderVisibility)">
      <summary>
            是否可见
            </summary>
      <param name="visi">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.InnerGetGraphics">
      <summary>
            内部的获取画布对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.IntersectsWithDrawRects(System.Drawing.RectangleF)">
      <summary>
            判断指定矩形是否和绘图区域相交
            </summary>
      <param name="rect">表示指定区域的矩形</param>
      <returns>指定区域是否和绘图区域相交</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPaintEventArgs.IntersectsWithDrawRects(System.Int32,System.Int32)">
      <summary>
            判断指定点是否在绘制区域中
            </summary>
      <param name="y1">Y1坐标值</param>
      <param name="y2">Y2坐标值</param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.GraphicsAutoDisposeImageForPDF">
      <summary>
            在输出PDF时自动销毁PDF里面的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.NativeGraphics">
      <summary>
            原生画布对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.EnabledDrawGridLine">
      <summary>
            允许绘制网格线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.CheckSizeInvalidateWhenRefreshSize">
      <summary>
            在计算元素大小时是否检查元素的SizeInvalidte属性值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.JumpPrintMode">
      <summary>
            处于续打模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ViewMode">
      <summary>
            视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Document">
      <summary>
            相关的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Element">
      <summary>
            相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.DocumentContentElement">
      <summary>
            内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ActiveMode">
      <summary>
            要绘制的内容处于激活模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Type">
      <summary>
            文档内容类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Style">
      <summary>
            绘制文档内容使用的样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.RenderMode">
      <summary>
            正在呈现的文档样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.PrintSelectionMode">
      <summary>
            正在打印文档中被选中的区域的模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ForCreateImage">
      <summary>
            正在为创建图片而绘制图形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.PageLinePositions">
      <summary>
            分页线位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.PageClipRectangle">
      <summary>
            页面剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Page">
      <summary>
            页面对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.PageIndex">
      <summary>
            从0开始计算的页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.PageCount">
      <summary>
            从0开始计算的页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Options">
      <summary>
            打印文档选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.HasBoundSelection">
      <summary>
            是否处于区域选择显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.Bounds">
      <summary>
            边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.DrawRectangles">
      <summary>
            绘图区域的矩形数组
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ScaleRate">
      <summary>
            缩放比率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ViewBounds">
      <summary>
            对象的区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentPaintEventArgs.ClientViewBounds">
      <summary>
            对象客户区的边界
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.FileContentSource">
      <summary>
            文件内容来源
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.FileContentSource.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.FileContentSource.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.FileContentSource.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.FileSystemName">
      <summary>
            使用的文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.Format">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.RuntimeFileName">
      <summary>
            实际加载文档使用的文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.RuntimeFormat">
      <summary>
            实际加载文档使用的格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.FileContentSource.Range">
      <summary>
            文件内容范围
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InputFieldSettings">
      <summary>
            输入设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldSettings.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldSettings.FixListSourceSettings">
      <summary>
            为了程序兼容性而修正相关的设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldSettings.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldSettings.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.SupportCustomListSourceNames">
      <summary>
            支持的自定义列表来源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.GetValueOrderByTime">
      <summary>
            从弹出式列表中获得数值时进行勾选操作时间排序
            </summary>
      <remarks>
            在多选下拉列表中，为了用户可以勾选多个项目，若设置这个属性值为true，则文档中显示的多个项目
            会按照勾选操作的时间上的先后顺序进行排序，而不是列表中是上下顺序进行排序。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.EditStyle">
      <summary>
            输入方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.MultiColumn">
      <summary>
            多列项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.RepulsionForGroup">
      <summary>
            列表项目分组互斥
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.MultiSelect">
      <summary>
            允许多选列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.DynamicListItems">
      <summary>
            动态加载列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.ListSource">
      <summary>
            列表内容来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.ListValueFormatString">
      <summary>
            列表数值格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.ListValueSeparatorChar">
      <summary>
            列表值之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.RuntimeListValueSeparator">
      <summary>
            DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.EnableCustomListItems">
      <summary>
            是否允许使用自定义列表项目,已过时，不再使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.CustomListSource">
      <summary>
            自定义的下列表数据源的名称,已过时，不再使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldSettings.ListItems">
      <summary>
            列表项目,已过时，不再使用。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.LocalConfig">
      <summary>
            文档本地配置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.LocalConfig.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.LocalConfig.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.LocalConfig.OldWhitespaceWidth">
      <summary>
            采用旧的计算空格的算法
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.MotherTemplateInfo">
      <summary>
            文档母版信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.MotherTemplateInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.MotherTemplateInfo.Apply(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            对文档应用文档母版信息
            </summary>
      <param name="ctl">相关的编辑器控件</param>
      <param name="document">文档对象</param>
      <returns>操作是否改变了文档内容</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.Format">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.ImportPageSettings">
      <summary>
            导入页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.ImportHeader">
      <summary>
            导入页眉
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MotherTemplateInfo.ImportFooter">
      <summary>
            导入页脚
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageContentVersionInfo">
      <summary>
            页面内容版本信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageContentVersionInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageContentVersionInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageContentVersionInfo.PageIndex">
      <summary>
            从0开始计算的页码编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageContentVersionInfo.Version">
      <summary>
            版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageContentVersionInfo.NativeBytes">
      <summary>
            原始的字节数组
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageContentVersionInfoList">
      <summary>
            页面内容版本号信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageContentVersionInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageContentVersionInfoList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageImageInfo">
      <summary>
            页码图片信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageImageInfo.PageIndex">
      <summary>
            从0开始计算的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageImageInfo.Image">
      <summary>
            图片值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageImageInfoList">
      <summary>
            页码图片信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfoList.SetImage(System.Int32,DCSoft.Drawing.XImageValue)">
      <summary>
            设置图片值
            </summary>
      <param name="pageIndex">从0开始的页码号</param>
      <param name="img">图片值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfoList.GetImage(System.Int32)">
      <summary>
            获得指定页码对应的图片
            </summary>
      <param name="pageIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageImageInfoList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageLabelText">
      <summary>
            页码标签文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelText.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelText.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLabelText.PageIndex">
      <summary>
            从0开始计算的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLabelText.Text">
      <summary>
            文本值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageLabelTextList">
      <summary>
            页码标签文本列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.SetPageText(System.Int32,System.String)">
      <summary>
            设置文本
            </summary>
      <param name="pageIndex">从0开始的页码号</param>
      <param name="text">文本值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.GetText(System.Int32,System.Boolean)">
      <summary>
            获得指定页码对应的文本
            </summary>
      <param name="pageIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.ToString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLabelTextList.ComSetItem(System.Int32,DCSoft.Writer.Dom.PageLabelText)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.PropertyExpressionInfo">
      <summary>
            成员表达式信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.PropertyExpressionInfo.Name">
      <summary>
            成员名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PropertyExpressionInfo.Expression">
      <summary>
            表达式字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PropertyExpressionInfo.AllowChainReaction">
      <summary>
            允许产生后续的连锁反应
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PropertyExpressionInfoList">
      <summary>
            成员表达式信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfoList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfoList.ComSetItem(System.Int32,DCSoft.Writer.Dom.PropertyExpressionInfo)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfoList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PropertyExpressionInfoList.CloneNotDeeply">
      <summary>
            非深度复制
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.SelectionChangingEventArgs">
      <summary>
            选择区域正在发生改变事件参数类型
            </summary>
      <remarks> 编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.SelectionChangingEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.Documnent">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.OldLineEndFlag">
      <summary>
            旧的行尾标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.OldSelectionIndex">
      <summary>
            旧的选择区域开始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.OldSelectionLength">
      <summary>
            旧的选择区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.NewLineEndFlag">
      <summary>
            新的行尾标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.NewSelectionIndex">
      <summary>
            新的选择区域开始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.NewSelectionLength">
      <summary>
            新的选择区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SelectionChangingEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.SetContainerTextArgs">
      <summary>
            设置容器元素方法参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SetContainerTextArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.EventSource">
      <summary>
            事件来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.NewText">
      <summary>
            新文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.IgnoreDisplayFormat">
      <summary>
            忽略掉显示格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.AccessFlags">
      <summary>
            访问标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.DisablePermission">
      <summary>
            禁止授权操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.UpdateContent">
      <summary>
            文本文档视图
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.LogUndo">
      <summary>
            是否记录撤销操作信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.FocusContainer">
      <summary>
            让容器获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.RaiseDocumentContentChangedEvent">
      <summary>
            是否触发文档的DocumentContentChanged事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.NewTextStyle">
      <summary>
            新文本的样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.NewParagraphStyle">
      <summary>
            新的段落样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.RaiseEvent">
      <summary>
            是否触发事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SetContainerTextArgs.ShowUI">
      <summary>
            是否显示用户界面
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.SpecifyPageIndexInfo">
      <summary>
            指定页码值信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SpecifyPageIndexInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SpecifyPageIndexInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.SpecifyPageIndexInfo.RawPageIndex">
      <summary>
            从1开始计算的原始页码数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SpecifyPageIndexInfo.SpecifyPageIndex">
      <summary>
            指定的页码值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.SpecifyPageIndexInfoList">
      <summary>
            指定页码信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SpecifyPageIndexInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SpecifyPageIndexInfoList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.SubDocumentSettings">
      <summary>
            当文档作为子文档时的一些设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SubDocumentSettings.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SubDocumentSettings.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.SubDocumentSpacing">
      <summary>
            子文档间距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.AllowSave">
      <summary>
            允许保存
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.Readonly">
      <summary>
            文档只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.Locked">
      <summary>
            文档被锁定.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.EnablePermission">
      <summary>
            是否启用权限控制
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.NewPage">
      <summary>
            是否强制分页
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.BorderColor">
      <summary>
            边框线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.BorderColorValue">
      <summary>
            边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.BackColor">
      <summary>
            边框线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SubDocumentSettings.BackColorValue">
      <summary>
            背景颜色值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ValueValidateResult">
      <summary>
            数值校验结果信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResult.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResult.GetContentHasCode">
      <summary>
            获得内容哈希值
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResult.Selet">
      <summary>
            在文档中选择相关内容
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResult.GetReferenceElements">
      <summary>
            获得所引用的文档元素列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResult.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.ElementID">
      <summary>
            相关的文档元素名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.Level">
      <summary>
            信息等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.Message">
      <summary>
            信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.Type">
      <summary>
            类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ValueValidateResult.ExcludeKeywordText">
      <summary>
            相关的违禁关键字文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ValueValidateResultList">
      <summary>
            数值校验结果集合
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResultList.ToString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResultList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResultList.ComSetItem(System.Int32,DCSoft.Writer.Dom.ValueValidateResult)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.ValueValidateResultList.SoryByDOMLevel">
      <summary>
            根据元素的DOM层次结构进行排序
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.WordCountResult">
      <summary>
            文档内容统计信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.WordCountResult.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.WordCountResult.#ctor(DCSoft.Writer.Dom.XTextDocument,System.Collections.IEnumerable)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="content">要统计的文档内容</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Pages">
      <summary>
            页数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Paragraphs">
      <summary>
            段落数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Words">
      <summary>
            单词数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.CharsNoWhitespace">
      <summary>
            不含空格的字符数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Chars">
      <summary>
            含空格的字符数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Lines">
      <summary>
            文本行数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.WordCountResult.Images">
      <summary>
            图片个数
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XAttribute">
      <summary>
            扩展属性对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttribute.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttribute.#ctor(System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttribute.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttribute.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XAttribute.Name">
      <summary>
            属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XAttribute.Value">
      <summary>
            属性值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XAttributeList">
      <summary>
            属性列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.#ctor(System.Int32)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.ContainsByName(System.String)">
      <summary>
            判断是否存在指定名称的属性
            </summary>
      <param name="name">指定的属性名</param>
      <returns>是否存在指定的属性</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.RemoveByName(System.String)">
      <summary>
            删除指定名称的属性
            </summary>
      <param name="name">指定的属性名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.GetValue(System.String)">
      <summary>
            获得指定名称的属性值
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.SetValue(System.String,System.String)">
      <summary>
            设置指定名称的属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.ToString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XAttributeList.ComSetItem(System.Int32,DCSoft.Writer.Dom.XAttribute)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XAttributeList.Item(System.String)">
      <summary>
            获得指定名称的属性对象
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextButtonElement">
      <summary>
            按钮元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer">
      <summary>
            按钮绘制器
            </summary>
      <remarks>
            袁永福到此一游</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Draw(DCSoft.Drawing.DCGraphics)">
      <summary>
            绘制图形
            </summary>
      <param name="g">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Bounds">
      <summary>
            对象边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Font">
      <summary>
            字体
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.ForeColor">
      <summary>
            文本颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.BackColor">
      <summary>
            背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.ButtonState">
      <summary>
            按钮状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Enabled">
      <summary>
            按钮可用状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Focused">
      <summary>
            是否获得焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.Image">
      <summary>
            突出状态时的图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.ImageForDown">
      <summary>
            按下状态时的图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.DCButtonDrawer.ImageForMouseOver">
      <summary>
            鼠标悬停时的图片
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextButtonElement.DCButtonState">
      <summary>
            按钮状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextButtonElement.DefaultWidth">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextButtonElement._State">
      <summary>
            当前按钮状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageFromFile(System.String)">
      <summary>
            从图片文件加载ImageForUp属性值
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageFromBase64String(System.String)">
      <summary>
            从图片的Base64字符串加载ImageForUp属性值
            </summary>
      <param name="base64">文件BASE64字符串</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageForDownFromFile(System.String)">
      <summary>
            从图片文件加载ImageForDown属性值
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageForDownFromBase64String(System.String)">
      <summary>
            从图片的Base64字符串加载ImageForDown属性值
            </summary>
      <param name="base64">文件BASE64字符串</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageForMouseOverFromFile(System.String)">
      <summary>
            从图片文件加载ImageForMouseOver属性值
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.LoadImageForMouseOverFromBase64String(System.String)">
      <summary>
            从图片的Base64字符串加载ImageForMouseOver属性值
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.RuntimeSelectable">
      <summary>
            对象能否被选中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.RuntimeScriptItems">
      <summary>
            返回运行时使用的脚本信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制元素图形
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextButtonElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.PrintAsText">
      <summary>
            以文本方式打印
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.AutoSize">
      <summary>
            自动大小 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.Image">
      <summary>
            按钮图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.ImageForDown">
      <summary>
            按下状态时的图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.ImageForMouseOver">
      <summary>
            鼠标悬停时的图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.Text">
      <summary>
            文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.ScriptTextForClick">
      <summary>
            按钮点击时使用的脚本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.CommandName">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextButtonElement.Resizeable">
      <summary>
            用户能否改变对象大小
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextCharElement">
      <summary>
            单个字符对象
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement.CHAR_ENSP">
      <summary>
            @ensp
            </summary>
      <remarks>
            “半角空格”，全称是En Space，en是字体排印学的计量单位，为em宽度的一半。
            根据定义，它等同于字体度的一半（如16px字体中就是8px）。名义上是小写字母n
            的宽度。此空格传承空格家族一贯的特性：透明的，此空格有个相当稳健的特性，
            就是其占据的宽度正好是1/2个中文宽度，而且基本上不受字体影响。
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement.CHAR_THINSP">
      <summary>
            thinsp
            </summary>
      <remarks>
            窄空格，全称是Thin Space。我们不妨称之为“瘦弱空格”，就是该空格长得比较瘦弱，
            身体单薄，占据的宽度比较小。它是em之六分之一宽。
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement.CHAR_ZWNJ">
      <summary>
            zwnj
            </summary>
      <remarks>
            零宽不连字，全称是Zero Width Non Joiner，简称“ZWNJ”，是一个不打印字符，放在
            电子文本的两个字符之间，抑制本来会发生的连字，而是以这两个字符原本的字形来绘制。
            Unicode中的零宽不连字字符映射为“”（zero width non-joiner，U+200C），
            HTML字符值引用为： ‌
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement.CHAR_WHITESPACE">
      <summary>
            标准空格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement.CHAR_TAB">
      <summary>
            制表符
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement._RuntimeChar">
      <summary>
            运行时的字符
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement._FontHeight">
      <summary>
            所用字体的高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCharElement._SupportTibetanChar">
      <summary>
            是否有藏文的授权，-1=没有授权；0=尚未判断；1=有授权。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.#ctor(System.Char)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.#ctor(System.Char,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="c">字符值</param>
      <param name="styleIndex">样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.#ctor(System.Char,DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextDocument,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="c">字符值</param>
      <param name="parent">父节点</param>
      <param name="document">文档对象</param>
      <param name="styleIndex">样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.#ctor(System.Char,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            初始化对象
            </summary>
      <param name="c">字符值</param>
      <param name="parent">父节点</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.IsHtmlWhitespace(System.Char)">
      <summary>
            是否为HTML中的特殊的空白字符
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.GetCharValue">
      <summary>
            获得字符值
            </summary>
      <returns>字符值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.RuntimeCharValue">
      <summary>
            实际绘制字母时使用的字符值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.DrawCharElementContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象
            </summary>
      <param name="args">参数对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.SupportTibetanChar">
      <summary>
            是否具有藏文的授权。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.IsSupportCharForLicense(System.Char)">
      <summary>
            判断由于软件授权而是否支持字符
            </summary>
      <param name="c">
      </param>
      <returns>是否支持</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档用户界面事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.ToPlaintString">
      <summary>
            获得纯文本内容
            </summary>
      <returns>纯文本内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCharElement.ToString">
      <summary>
            获得表示对象的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.NativeWidth">
      <summary>
            字符原始宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.NativeHeight">
      <summary>
            字符原始高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.FontSizeZoomRate">
      <summary>
            字体缩放比率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.CharValue">
      <summary>
            字符数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.CharInt32Value">
      <summary>
            字符整数数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.Text">
      <summary>
            表示对象的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.LinkCharNum">
      <summary>
            使用的连接字符个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.ConnectFlag">
      <summary>
            启用连接符号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCharElement.IsBackgroundText">
      <summary>
            是否为输入域背景文本字符
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextCheckBoxElement">
      <summary>
            复选框控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElement.OnContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发内容已经改变事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElement.ControlStyle">
      <summary>
            控件类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContainerElement">
      <summary>
            容器元素对象
            </summary>
      <remarks>
            本类型是从XTextElement上派生的容器文本文档元素类型,它能包含其他的文本文档元素,
            还可以包含其他的容器元素.是文本文档对象模型中比较基础的类型.
            编制 袁永福 2007-3-21
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs">
      <summary>
            获得元素运行时可见性的方法参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs.#ctor(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素</param>
      <param name="deeply">是否为深入子孙节点判断</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs.IsLogicDeletedStyleIndex(System.Int32)">
      <summary>
            判断是否为逻辑删除的样式
            </summary>
      <param name="styleIndex">样式编号</param>
      <returns>是否为逻辑删除的</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs">
      <summary>
            AppendViewContentElement函数使用的参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContainerElement._ContentVersion">
      <summary>
            内容版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContainerElement._UIStartEditContentState">
      <summary>
            UI开始内容编辑状态标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContainerElement._HasContentElement">
      <summary>
            是否具有内容元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContainerElement._Elements">
      <summary>
            子元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.#ctor(System.Int32)">
      <summary>
            专门为XTextStringElement提供的构造函数
            </summary>
      <param name="v">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetRuntimeEnabledTransprentEncrypt">
      <summary>
            运行时的启用透明加密功能。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdatePreviewTextLength">
      <summary>
            更新预览文本长度值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SearchString(System.String,System.Boolean,System.Int32)">
      <summary>
            查找字符串
            </summary>
      <param name="text">要查找的文本</param>
      <param name="ignoreCase">是否区分大小写</param>
      <param name="maxResultCount">查找结果的最大次数</param>
      <returns>查找的区域的第一个字符元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetTextHighlight(System.String,System.Boolean,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>
            设置文本高亮度显示
            </summary>
      <param name="text">文本值</param>
      <param name="ignoreCase">是否区分大小写</param>
      <param name="foreColor">前景色</param>
      <param name="backColor">背景色</param>
      <param name="supportPrint">是否支持打印</param>
      <param name="supportPDF">是否支持导出PDF</param>
      <returns>选取区域的首字符元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ClearLastRenderResult">
      <summary>
            清空最后一次绘图结果信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.CollectDataFeedback(DCSoft.Writer.Data.DataFeedbackInfoList,System.Boolean)">
      <summary>
            收集所有的数据回填信息对象
            </summary>
      <param name="result">数据回填信息对象列表</param>
      <param name="checkContentVersion">是否检查版本号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeTabStop">
      <summary>
            获取或设置一个运行时的值，该值指示用户能否使用 Tab 键将焦点放到该元素中上。 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeValidateStyle">
      <summary>
            获得运行时使用的校验样式
            </summary>
      <returns>样式对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ClearValidateResult(System.Boolean)">
      <summary>
            清除数据校验结果
            </summary>
      <param name="fastMode">快速操作模式</param>
      <returns>操作是否改变了输入域状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.Validating(System.Boolean)">
      <summary>
            进行数据验证
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetHighlightInfos">
      <summary>
            获得高亮度设置信息
            </summary>
      <returns>获得的设置信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.OnValidated">
      <summary>
            触发数据验证结束事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetContainsUnHandledPageBreak">
      <summary>
            判断是否包含了未分页处理的分页符号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetContainsUnHandledPageBreak(System.Boolean)">
      <summary>
            设置是否包含了未分页处理的分页符号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.CommitUserTrace">
      <summary>
            提交所有用户的修改记录。删除被逻辑删除的内容，清除用户修改痕迹。
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeSupportValueBinding">
      <summary>
            运行时的是否支持数据源绑定功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateDataBinding(System.Boolean)">
      <summary>
            更新数据源
            </summary>
      <param name="fastMode">快速模式</param>
      <returns>操作是否导致了文档内容修改处数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateDataBindingSpecifyDataSource(System.Object,System.Boolean)">
      <summary>
            !!!!已过时，请使用UpdateDataBindingExt(UpdateDataBindingArgs args)!!
            </summary>
      <param name="dataSource">绑定的数据源对象</param>
      <param name="fastMode">快速模式</param>
      <returns>操作是否导致了文档内容发生改变的处数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ReValueBinding">
      <summary>
            重新执行数据源绑定操作
            </summary>
      <returns>修改的文档处数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateDataBindingExt(DCSoft.Writer.Dom.UpdateDataBindingArgs)">
      <summary>
            更新数据源
            </summary>
      <param name="args">参数</param>
      <returns>操作是否导致了文档内容发生改变的处数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetValueForDataBinding(System.String,System.Boolean)">
      <summary>
            为数据源绑定而设置输入域值
            </summary>
      <param name="value">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeEnablePermission">
      <summary>
            运行时的内容是否启用授权控制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetContentLockByCurrentUser">
      <summary>
            使用当前用户信息锁定文档元素内容
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetContentLock(System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="userID">锁定操作的用户ID</param>
      <param name="authoriseUserIDList">授权操作的用户ID列表，各个列表之间用英文逗号分开</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.IsContentLocked">
      <summary>
            判断当前内容是否被内容锁定机制而锁定
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.CollecProtectedElements(DCSoft.Writer.Dom.ContentProtectedInfoList,System.Int32)">
      <summary>
            收集被保护的文档内容。
            </summary>
      <param name="list">容纳元素的列表,可以为空</param>
      <param name="limitedCount">限制的元素个数，可以为空</param>
      <remarks>如果参数pes为空，则表示仅仅是检查是否存在受保护的内容，而不收集</remarks>
      <returns>是否存在受保护的内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetContentBackgroundStyle(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            返回子元素背景样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeScriptItems">
      <summary>
            返回运行时使用的脚本信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetAttribute(System.String)">
      <summary>
            获得指定名称的属性值
            </summary>
      <param name="name">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.HasAttribute(System.String)">
      <summary>
            判断是否存在指定名称的属性
            </summary>
      <param name="name">属性名</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象</param>
      <remarks>
            如果选项SecurityOptions.EnablePermission=true，则创建的文档对象包含被逻辑删除的内容及历史痕迹记录。
            如果该选项为false，则没有任何痕迹信息，而且被标记为逻辑删除的内容会还原出来。
            </remarks>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetAllElements">
      <summary>
            获得所有的文档元素对象,包括自己
            </summary>
      <returns>元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetAllElementsWithoutCharElement">
      <summary>
            获得所有的文档元素对象,包括自己,但不包括任何字符元素
            </summary>
      <returns>元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.HasElements">
      <summary>
            是否存在子元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsCountDeeply">
      <summary>
            获得所有子孙元素的个数
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ContainsChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断是否包含直接子元素
            </summary>
      <param name="element">子元素对象</param>
      <returns>是否包含。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.OnElementsChanged(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            当子文档元素列表发生改变时的处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.PrepareSerialize(System.String)">
      <summary>
            准备执行序列化操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.MergeElementsForXmlSerialize(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            为XML序列化而进行的文档元素合并
            </summary>
      <param name="srcList">
      </param>
      <param name="root">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.AfterSerialize">
      <summary>
            完成执行序列化操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InnerExecuteLayout">
      <summary>
            对整个内容执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeAcceptChildElementTypes">
      <summary>
            允许接收的子元素类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            插入子元素
            </summary>
      <param name="index">指定的序号</param>
      <param name="element">新添加的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            在指定的子元素之前插入新的子元素
            </summary>
      <param name="newElement">新元素</param>
      <param name="oldElement">已有的子元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            在指定的子元素之后插入新的子元素
            </summary>
      <param name="newElement">新元素</param>
      <param name="oldElement">已有的子元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加子元素
            </summary>
      <param name="element">新添加的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            删除子元素
            </summary>
      <param name="element">要删除的子元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetRuntimeVisibleValue(DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs)">
      <summary>
            获得运行时可见性的值
            </summary>
      <returns>可见性</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisible(System.Boolean)">
      <summary>
            更新文档元素的可见性,DCWriter内部使用.
            </summary>
      <param name="deeply">是否深入设置子孙元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InnerUpdateElementsRuntimeVisible(DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs)">
      <summary>
            更新文档元素的可见性,DCWriter内部使用.
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.HiddenElementsDeeply">
      <summary>
            设置所有子孙元素运行时不可见
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            DCWriter内部使用。将对象内容添加到文档视图元素内容中
            </summary>
      <param name="args">参数</param>
      <returns>添加的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否复制子孙节点</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsByName(System.String)">
      <summary>
            获得文档中指定name值的元素对象,查找时name值区分大小写的。
            </summary>
      <param name="name">指定的编号</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsByStyleIndex(System.Int32)">
      <summary>
            获得具有指定样式编号的文档对象。
            </summary>
      <param name="styleIndex">样式编号</param>
      <returns>找到的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetFirstFieldElementByDataSource(System.String,System.String)">
      <summary>
            获得第一个绑定了指定数据源的输入域对象
            </summary>
      <param name="dataSource">数据源名称</param>
      <param name="bindingPath">绑定的路径</param>
      <returns>获得的输入域元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsById(System.String)">
      <summary>
            获得文档中所有指定编号的元素对象列表,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementByInstanceIndex(System.Int32)">
      <summary>
            获得指定实例编号的文档元素对象。
            </summary>
      <param name="instanceIndex">内部编号</param>
      <returns>找到的文档元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementByInnerid(System.Int32)">
      <summary>
            找到指定内部编号的元素
            </summary>
      <param name="innerID">内部编号值</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementBy2IDs(System.String,System.String)">
      <summary>
            根据父元素编号和子元素编号获得文档元素对象
            </summary>
      <param name="idParent">
      </param>
      <param name="idChild">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementById(System.String)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementByIdExt(System.String,System.Boolean)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <param name="idAttributeOnly">只匹配元素ID属性</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InnerGetElementByIdExt(System.String,System.Boolean,System.Boolean)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <param name="idAttributeOnly">只匹配元素ID属性</param>
      <param name="includeLogicDeletedElement">是否包含被逻辑删除的内容</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsByTypeName(System.String)">
      <summary>
            获得文档中所有的指定类型的文档元素列表
            </summary>
      <param name="elementTypeName">元素类型名称</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetFirstElementByTypeName(System.String)">
      <summary>
            在子孙文档元素中获得第一个指定类型的文档元素，但不包括本元素本身。
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetLastElementByType(System.Type)">
      <summary>
            获得子孙元素中最后一个指定类型的文档元素对象
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetFirstElementByType2``1">
      <summary>
            在子孙文档元素中获得第一个指定类型的文档元素，但不包括本元素本身。
            </summary>
      <typeparam name="T">元素类型</typeparam>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetFirstElementByType(System.Type)">
      <summary>
            在子孙文档元素中获得第一个指定类型的文档元素，但不包括本元素本身。
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetContainerElementsByType``1">
      <summary>
            获取指定类型的所有的子孙元素列表
            </summary>
      <typeparam name="ContainerElementType">元素类型</typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsBySpecifyType``1">
      <summary>
            获得指定类型的子孙元素，不包括当前元素自己
            </summary>
      <typeparam name="ET">
      </typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementsByType(System.Type)">
      <summary>
            获得本文档元素容器包含的所有的指定类型的文档元素列表
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetElementByType(System.Type)">
      <summary>
            获得本文档元素容器包含的指定类型的第一个文档元素
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RaiseBubbleOnContentChanging(DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            以冒泡方式出发文档容器元素的OnContentChanging事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.OnContentChanging(DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发内容正在改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RaiseBubbleOnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            以冒泡方式出发文档容器元素的OnContentChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            容器元素失去焦点事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.OnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发内容已经改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorSetStyleDeeply(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            设置文档元素样式
            </summary>
      <param name="style">文档样式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EndSetStyleDeeply">
      <summary>
            结束设置文档元素样式，并设置所有的子孙节点元素
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetEditorTextExt(System.String,DCSoft.Writer.Dom.DomAccessFlags,System.Boolean,System.Boolean)">
      <summary>
            设置文本
            </summary>
      <param name="newText">新文本</param>
      <param name="flags">标记</param>
      <param name="disablePermissioin">禁止权限控制</param>
      <param name="updateContent">是否更新文档内容</param>
      <returns>操作是否修改了对象内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            设置文档元素内容
            </summary>
      <param name="style">新的样式对象</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>
            设置文本
            </summary>
      <param name="args">参数</param>
      <returns>操作是否修改了对象内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetInnerTextFast(System.String)">
      <summary>
            快速设置元素的文本内容
            </summary>
      <param name="txt">文本</param>
      <returns>创建的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetInnerTextFastExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            快速设置元素的文本内容
            </summary>
      <param name="txt">文本</param>
      <param name="newTextStyle">文本样式</param>
      <returns>创建的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetInnerTextFastExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            快速设置元素的文本内容
            </summary>
      <param name="txt">文本</param>
      <param name="newTextStyle">文本样式</param>
      <param name="updateContentElements">是否更新容器元素的状态,如果为false，则本函数能更快的执行。</param>
      <returns>创建的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.XTextContainerElement_SetInnerTextFastExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            快速设置元素的文本内容
            </summary>
      <param name="txt">文本</param>
      <param name="newTextStyle">文本样式</param>
      <param name="updateContentElements">是否更新容器元素的状态,如果为false，则本函数能更快的执行。</param>
      <returns>创建的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.SetTextRawDOM(System.String,System.Int32,System.Int32)">
      <summary>
            直接设置DOM内容文本，不触发任何事件，不更新任何状态，速度最快。
            </summary>
      <param name="text">文本</param>
      <param name="textStyleIndex">文本样式编号</param>
      <param name="paragraphStyleIndex">段落样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.IsVisibleInHtml(DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter)">
      <summary>
            元素是否在HTML文档中可见
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.RuntimeLayoutable">
      <summary>
            元素占据排版位置，能参与文档内容排版。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorInvalidateContent">
      <summary>
            声明容器元素内容无效,需要重新排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorDeletePreserveContent(System.Boolean)">
      <summary>
            在编辑器中删除整个对象,但保留其内容
            </summary>
      <param name="logUndo">是否记录撤销操作信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorDelete(System.Boolean)">
      <summary>
            在编辑器中删除整个对象
            </summary>
      <param name="logUndo">是否记录撤销操作信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorSetContentStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            设置文档内容的样式,本操作受到文档内容保护机制的限制。
            </summary>
      <param name="newStyle">新样式</param>
      <param name="logUndo">是否记录撤销操作信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.EditorSetContentStyleFast(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            快速设置文档内容的样式，不记录撤销操作信息，不更新文档视图，不触发事件
            </summary>
      <param name="newStyle">新样式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.UpdateElementIndex(System.Boolean)">
      <summary>
            更新文档元素的ElementIndex值。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.InnerFixDomStateFast">
      <summary>
            内部的快速更新文档状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.FixDomState">
      <summary>
            修复DOM结构状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.DeleteAllSign">
      <summary>
            删除所有的签名图片元素
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ClearSign">
      <summary>
            清空签名数据
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.HasSignImageElement">
      <summary>
            判断是否包含签名图片元素
            </summary>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.CanResign">
      <summary>
            判断能否进行重新签名操作
            </summary>
      <returns>能否进行重新签名操作</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ReSign">
      <summary>
            重新进行签名操作
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.ReSignSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>
            重新进行指定类型的签名操作
            </summary>
      <param name="mode">模式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.Sign(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>
            执行电子签名操作
            </summary>
      <param name="input">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContainerElement.GetCurrentSignContainerElement(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            获得当前选中的签名图片元素所对应的容器元素对象
            </summary>
      <param name="args">相关的绘图事件参数</param>
      <returns>获得的对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.IsUnderEncrypted">
      <summary>
            内容仍然处于被加密状态，很多操作无法执行。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EncryptContent">
      <summary>
            加密导致的内容,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.PreviewTextLength">
      <summary>
            预览文本长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentVersion">
      <summary>
            元素内容版本号，当元素内容发生任何改变时，该属性值都会改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.TransparentEncryptMode">
      <summary>
            透明加密使用的加密解密算法。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.StateVersion">
      <summary>
            表示文档元素状态版本号。本属性供第三方调用。编辑器内核不使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EmitDataFieldName">
      <summary>
            绑定的内置数据字段名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EmitDataSource">
      <summary>
            内置数据源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.AutoFixTextMode">
      <summary>
            文本自动修复模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.LimitedInputChars">
      <summary>
            本容器元素能接受的字符清单。如果该属性不为空，则用户界面中不能输入超出这个范围的其他字符。
            </summary>
      <remarks>
            比如本属性设置为“0123456789”,则在用户界面中本容器元素只能输入规定的数字字符。但后台DOM操作不受此限制。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.LastRenderResult">
      <summary>
            最后一次绘制内容的结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.HiddenPrintWhenEmpty">
      <summary>
            内容为空时不打印
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataFeedback">
      <summary>
            数据回填信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.MaxInputLength">
      <summary>
            最大可输入的字符的长度，属性值小于等于0则无限制。
            </summary>
      <remarks>
            仅仅限制用户手工操作输入的字符长度，不限制直接DOM操作。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataName">
      <summary>
            数据名称。需要应用程序支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.CanBeReferenced">
      <summary>
            数据能否被其他地方引用。需要应用程序支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.BringoutToSave">
      <summary>
            保存文档时是否将该节点数据单独拿出来保存。需要应用程序支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ReferencedDataName">
      <summary>
            引用的数据名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ToolTip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.RuntimeMoveFocusHotKey">
      <summary>
            实际使用的移动焦点所使用的快捷键样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.AcceptTab">
      <summary>
            能否接受制表符，默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.WebClientSelected">
      <summary>
            在WEB客户端选中状态.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.JavaScriptForClick">
      <summary>
            客户端单击执行的javascript脚本。当Options.BehaviorOptions.EnableExpression为false时，本属性无效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.JavaScriptForDoubleClick">
      <summary>
            双击时执行的javascript脚本。当Options.BehaviorOptions.EnableExpression为false时，本属性无效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.PropertyExpressions">
      <summary>
            属性值表达式列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.InnerPrintedFlag">
      <summary>
            打印标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EnableValueValidate">
      <summary>
            是否启用数值校验功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.LastValidateResult">
      <summary>
            最后一次数据校验的结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ValidateStyle">
      <summary>
            数据验证样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.AutoHideMode">
      <summary>
            自动隐藏模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Modified">
      <summary>
            元素内容是否改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.HasContentElement">
      <summary>
            是否具有内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.HasValueBinding">
      <summary>
            是否具有数据源绑定信息对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ValueBinding">
      <summary>
            内容绑定对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DefaultValueForValueBinding">
      <summary>
            数据源绑定时的默认值。当获得的数据源数据为空时在采用该默认值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataBoundNode">
      <summary>
            绑定的数据源对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataBoundNodeValueUsed">
      <summary>
            使用了数据源节点的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataBindingHandled">
      <summary>
            已经处理了数据源绑定操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.DataBindingContentVersion">
      <summary>
            最后一次执行数据源绑定时的内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ElementIDForEditableDependent">
      <summary>
            内容可编辑依赖的文档元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentReadonlyExpression">
      <summary>
            元素内容只读性表达式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.VisibleExpression">
      <summary>
            元素可见性表达式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.PrintVisibilityExpression">
      <summary>
            元素可见性表达式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ValueExpression">
      <summary>
            数值表达式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.TagValue">
      <summary>
            应用程序额外的数据，该数据不存储到文件中,也不参与二进制序列化
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.UserFlags">
      <summary>
            用户标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EnablePermission">
      <summary>
            容器内部是否启用授权控制
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentLock">
      <summary>
            内容锁
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentReadonly">
      <summary>
            内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.InnerRuntimeContentReadonly">
      <summary>
            DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.RuntimeContentReadonly">
      <summary>
            运行时的内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentEditable">
      <summary>
            文档内容可用户直接编辑
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.OwnerDocument">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Expressions">
      <summary>
            表达式列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ScriptItems">
      <summary>
            脚本项目列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Attributes">
      <summary>
            用户自定义属性列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.CopySource">
      <summary>
            内容复制来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EventTemplateName">
      <summary>
            文档元素事件模板名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ContentBuilder">
      <summary>
            内容创建器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.FirstChild">
      <summary>
            第一个子元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.LastChild">
      <summary>
            最后一个子元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Elements">
      <summary>
            子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ElementsCount">
      <summary>
            子元素的个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ElementsForSerializeCount">
      <summary>
            序列化元素的个数,DCWriter内部测试使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.__ElementsForSerialize2">
      <summary>
            序列化使用的子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.ElementsForSerialize">
      <summary>
            为XML序列化/反序列化的子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.FirstContentElement">
      <summary>
            子孙元素中第一个显示在文档内容中的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.LastContentElement">
      <summary>
            子孙元素中第一个显示在文档内容中的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.HasSelection">
      <summary>
            判断是否包含被用户选择的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.AcceptChildElementTypes2">
      <summary>
            能接收的子元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.PreviewString">
      <summary>
            返回预览对象内容的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.CheckBoxes">
      <summary>
            容器元素中包含的所有的复选框元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.RadioBoxes">
      <summary>
            容器元素中包含的所有的单选框元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Focused">
      <summary>
            判断元素是否获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.OuterText">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.InnerText">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.TextInlcudeHidden">
      <summary>
            包含隐藏内容的文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Text">
      <summary>
            返回文本内容，不包含被逻辑删除的部分。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EditorText">
      <summary>
            在编辑器中设置获得对象文本值,这个操作会被系统记录，能进行重复和撤销操作。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.EditorTextExt">
      <summary>
            在编辑器中设置/获得对象文本值,这个操作会被系统记录，能进行重复和撤销操作,而且不受用户界面层只读的限制。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.PrintVisibility">
      <summary>
            打印时是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Visible">
      <summary>
             元素是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContainerElement.Deleteable">
      <summary>
            文档元素能否被用户删除
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContent">
      <summary>
            文档内容管理对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContent.SelectionPartialType">
      <summary>
            内容选择状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContent.HasHiddenElementForSpecifyWidthField">
      <summary>
            存在一些隐藏元素，这些元素被隐藏的原因是输入域宽度固定了。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.#ctor(DCSoft.Writer.Dom.XTextDocumentContentElement)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.#ctor(DCSoft.Writer.Dom.XTextDocumentContentElement,System.Int32)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.LayoutElements">
      <summary>
            排版位置排序的元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.Clear">
      <summary>
            内容清空事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.IsLockIndex(System.Int32)">
      <summary>
            判断指定的位置是否被锁定了,锁定区域不能新增、删除和修改样式。
            </summary>
      <param name="viewIndex">指定的位置</param>
      <returns>是否被锁定了</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.FixRange(System.Int32@,System.Int32@)">
      <summary>
            修正区域范围，避免超出边界
            </summary>
      <param name="startIndex">区域起始序号</param>
      <param name="length">区域长度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetCurrentPositionInfo(DCSoft.Writer.Dom.XTextContainerElement@,System.Int32@)">
      <summary>
            获得当前插入点的信息
            </summary>
      <param name="container">插入点所在的容器对象</param>
      <param name="elementIndex">插入点所在的容器元素子元素列表中的序号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPosition(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,System.Boolean)">
      <summary>
            获得位置
            </summary>
      <param name="container">容器对象</param>
      <param name="elementIndex">元素编号</param>
      <param name="lineEndFlag">行尾标记</param>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPositonInfo(System.Int32,DCSoft.Writer.Dom.XTextContainerElement@,System.Int32@,System.Boolean)">
      <summary>
            根据指定的插入点的位置获得插入点信息
            </summary>
      <param name="contentIndex">插入点位置</param>
      <param name="container">插入点所在的容器元素对象</param>
      <param name="elementIndex">插入点在容器元素列表中的位置</param>
      <param name="lineEndFlag">行尾标记</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPositonInfo(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextContainerElement@,System.Int32@,System.Boolean)">
      <summary>
            根据指定的插入点的位置获得插入点信息
            </summary>
      <param name="contentIndex">插入点位置</param>
      <param name="container">插入点所在的容器元素对象</param>
      <param name="elementIndex">插入点在容器元素列表中的位置</param>
      <param name="lineEndFlag">行尾标记</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPreWordIndex(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得插入点前第一个单词的起始位置
            </summary>
      <param name="myElement">指定的元素对象</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPreWordIndex(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            获得插入点前第一个单词的起始位置
            </summary>
      <param name="myElement">指定的元素对象</param>
      <param name="includeChinese">包含汉子字符</param>
      <param name="singleLine">只在一行中搜索</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPreWord(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            获得插入点前的单词
            </summary>
      <returns>获得的单词，若不存在则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.DeletePreElement(System.Boolean)">
      <summary>
            删除当前元素前一个元素
            </summary>
      <param name="raiseEvent">是否触发事件</param>
      <returns>若删除成功,则返回新的插入点的位置,若操作失败则返回-1</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.IsLogicDelete(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断是否应该是逻辑删除元素
            </summary>
      <param name="element">文档元素对象</param>
      <returns>true:逻辑删除；false:物理删除。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.InnerRemoveElement(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextElement,System.Boolean,DCSoft.Writer.ContentChangedEventArgs@,System.Boolean@)">
      <summary>
            内部的删除一个文档元素
            </summary>
      <param name="c">容器对象</param>
      <param name="element">要删除的元素对象</param>
      <param name="raiseEvent">是否触发文档ContentChanging , ContentChanged事件</param>
      <param name="changedArgs">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.DeleteCurrentElement(System.Boolean)">
      <summary>
            删除元素
            </summary>
      <param name="raiseEvent">是否触发事件</param>
      <returns>若删除成功,则返回新的插入点的位置,若操作是否则返回-1</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.InnerDeleteSelectionDomTree(DCSoft.Writer.Dom.XTextContainerElement,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextContentElement,System.Int32},System.Boolean,DCSoft.Writer.Dom.XTextSelection,System.Collections.Generic.List{DCSoft.Writer.ContentChangedEventArgs})">
      <summary>
            删除文档树状结构
            </summary>
      <param name="rootElement">要删除的根节点</param>
      <param name="startIndexs">用于记录容器元素刷新其内容的起始序号的字典</param>
      <param name="detect">检测是否可以执行删除元素操作,但不真的进行删除</param>
      <param name="specifySelection">指定的操作元素</param>
      <param name="changedArgs">参数</param>
      <returns>删除的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.DeleteElements(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Collections.Generic.List{DCSoft.Writer.ContentChangedEventArgs})">
      <summary>
            删除元素
            </summary>
      <param name="container">容器元素</param>
      <param name="firstDeleteElement">删除区域的开始元素</param>
      <param name="lastDeleteElement">删除区域的结束元素</param>
      <param name="raiseEvent">是否触发事件</param>
      <param name="changedArgs">参数</param>
      <returns>删除的元素个数,若等于0则没有删除任何元素，若大于0则物理删除了元素，若小于0则逻辑删除了元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetSelectionPartialType(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextSelection)">
      <summary>
            判断指定容器的元素全部被选中
            </summary>
      <param name="rootElement">容器元素</param>
      <param name="specifySelection">指定的选择区域对象</param>
      <returns>内容是否被全部选中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.DeleteSelection(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            已删除文档树结构的方式来删除选中的元素
            </summary>
      <param name="raiseEvent">是否触发文档ContentChanging , ContentChanged事件</param>
      <param name="detect">检测是否可以执行删除元素操作,但不真的进行删除</param>
      <param name="fastMode">快速模式，不更新用户界面，不更新内容元素列表</param>
      <returns>删除的文档元素对象个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.DeleteSelection(System.Boolean,System.Boolean,System.Boolean,DCSoft.Writer.Dom.XTextSelection)">
      <summary>
            已删除文档树结构的方式来删除选中的元素
            </summary>
      <param name="raiseEvent">是否触发文档ContentChanging , ContentChanged事件</param>
      <param name="detect">检测是否可以执行删除元素操作,但不真的进行删除</param>
      <param name="fastMode">快速模式，不更新用户界面，不更新内容元素列表</param>
      <param name="specifySelection">指定的选择区域</param>
      <returns>删除的文档元素对象个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPreLine(System.Boolean)">
      <summary>
            当前行的上一个文本行对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetNextLine">
      <summary>
            获得当前行的下一个文本行对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetParagraphEOFElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素所在段落的样式
            </summary>
      <param name="element">元素对象</param>
      <returns>段落样式对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.SelectAll">
      <summary>
            选择所有的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveToTarget(DCSoft.Writer.MoveTarget)">
      <summary>
            移动位置
            </summary>
      <param name="target">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetCurrentContainer(System.Type)">
      <summary>
            获得当前光标所在的指定类型的容器元素对象
            </summary>
      <param name="containerType">元素类型</param>
      <returns>获得的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveUpOneLine">
      <summary>
            将插入点向上移动一行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveDownOneLine">
      <summary>
            将插入点向下移动一行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveLeft">
      <summary>
            将插入点先左移动一个元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetPreLayoutElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得在排版顺序列表中的上一个元素
            </summary>
      <param name="element">文档元素</param>
      <returns>上一个元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveRight">
      <summary>
            将插入点向右移动一个元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveEnd">
      <summary>
            将插入点移动到当前行的最后一个元素处
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveHome">
      <summary>
            移动插入点到当前行的行首
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.UIIsUpdating">
      <summary>
            用户界面是否被锁定了。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveToPosition(System.Int32)">
      <summary>
            移动当前插入点的位置
            </summary>
      <param name="index">插入点的新的位置</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveToElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            将插入点移动到指定元素前面
            </summary>
      <param name="element">指定的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveStep(System.Single)">
      <summary>
            垂直方向移动插入点指定距离
            </summary>
      <param name="Step">移动距离</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetLineAt(System.Single,System.Single,System.Boolean)">
      <summary>
            获得文档中指定位置下的文档行对象
            </summary>
      <param name="x">指定位置的X坐标</param>
      <param name="y">指定位置的Y坐标</param>
      <param name="strict">是否进行严格判断</param>
      <returns>找到的文档行对象,若未找到则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetElementAt(System.Single,System.Single,System.Boolean)">
      <summary>
            获得文档中指定位置下的元素对象
            </summary>
      <param name="x">指定位置的X坐标</param>
      <param name="y">指定位置的Y坐标</param>
      <param name="strict">是否进行严格判断</param>
      <returns>找到的元素,若未找到则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveToPoint(System.Single,System.Single)">
      <summary>
            将插入点尽量移动到指定位置
            </summary>
      <param name="x">指定位置的X坐标</param>
      <param name="y">指定位置的Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.MoveToPointNew(System.Single,System.Single)">
      <summary>
            将插入点尽量移动到指定位置
            </summary>
      <param name="x">指定位置的X坐标</param>
      <param name="y">指定位置的Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.GetOwnerField(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            获得插入点所在的输入域对象
            </summary>
      <param name="index">插入点位置</param>
      <param name="lineEndFlag">行尾标记</param>
      <returns>输入域对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.FixCurrentIndexForStrictFormViewMode">
      <summary>
            根据表单视图模式修正当前插入点的位置
            </summary>
      <returns>操作是否修改了插入点的位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.FixIndexForStrictFormViewMode(System.Int32,DCSoft.Writer.Dom.FixIndexDirection,System.Boolean)">
      <summary>
            根据表单视图状态修正插入点位置
            </summary>
      <param name="index">要修正的插入点位置编号</param>
      <param name="direction">修正方向</param>
      <param name="enableSetAutoClearSelectionFlag">是否允许设置AutoClearSelectionFlag标记</param>
      <returns>修正后的插入点位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.InnerFixIndexForStrictFormViewMode(System.Int32,DCSoft.Writer.Dom.FixIndexDirection,System.Boolean)">
      <summary>
            根据表单视图状态修正插入点位置
            </summary>
      <param name="index">要修正的插入点位置编号</param>
      <param name="direction">修正方向</param>
      <param name="enableSetAutoClearSelectionFlag">是否允许设置AutoClearSelectionFlag标记</param>
      <returns>修正后的插入点位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.SetSelection(System.Int32,System.Int32)">
      <summary>
            设置选择区域大小
            </summary>
      <param name="newSelectionStart">新的选择区域开始的序号</param>
      <param name="newSelectionLength">新选择区域的长度</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.SelectParagraph">
      <summary>
            选择插入点所在的段落
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContent.SelectWord">
      <summary>
            选择插入点处的连续的字母和数字
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.Version">
      <summary>
            内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.OwnerDocument">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.DocumentContentElement">
      <summary>
            对象所属的文档区域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.LineEndFlag">
      <summary>
            光标在行尾标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.LockIndex">
      <summary>
            有效的锁定位置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.Selection">
      <summary>
            选中区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.SelectionStartIndex">
      <summary>
            选择区域开始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.SelectionLength">
      <summary>
            选择区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.AutoClearSelection">
      <summary>
            DCWriter内部使用。是否自动清除选择状态,若为True则插入点位置修改时会自动设置SelectionLength属性，否则会根据
            旧的插入点的位置计算SelectionLength长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.SelectionStartElementAsCurrentElement">
      <summary>
            选择区域中的第一个元素作为当前元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.CurrentElement">
      <summary>
            获得当前元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.CurrentParagraphEOF">
      <summary>
            当前段落结束标记对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.CurrentSelectElement">
      <summary>
            获得当前选中的元素,若文档中选择了一个元素则该属性返回这个元素,
            若没有选中元素或选中多个元素则返回空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.PreElement">
      <summary>
            获得当前位置的前一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.CurrentLayoutDirection">
      <summary>
            当前文档内容布局方向
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContent.CurrentLine">
      <summary>
            当前文本行对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentLinkFieldElement">
      <summary>
            内容链接对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            添加内容元素
            </summary>
      <param name="content">内容列表</param>
      <param name="privateMode">私有模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.OnGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            获得输入焦点事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            失去输入焦点事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.OnMouseEnter(DCSoft.Writer.ElementEventArgs)">
      <summary>
            鼠标光标进入元素事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.OnMouseLeave(DCSoft.Writer.ElementEventArgs)">
      <summary>
            鼠标光标离开元素事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentLinkFieldElement.UpdateContent(System.Boolean)">
      <summary>
            更新链接的文档内容
            </summary>
      <param name="fastMode">快速更新</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.Readonly">
      <summary>
            内容只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.ContentEditable">
      <summary>
            用户可否编辑内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.ContentSource">
      <summary>
            文件内容来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.UpdateState">
      <summary>
            更新的内容的状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.ReplaceUpdateMode">
      <summary>
            采用替换更新模式内容
            </summary>
      <remarks>采用替换更新模式下，系统会加载引用的文档内容，删除本元素并插入导入的新元素。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.SaveLinkedContent">
      <summary>
            保存文件的时候也保存链接的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.ElementsForSerialize">
      <summary>
            为XML序列化/反序列化的子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentLinkFieldElement.RuntimeBackgroundText">
      <summary>
            运行时是用的背景文字
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextControlHostElement">
      <summary>
            在文档编辑器中承载控件的元素
            </summary>
      <remarks>
            注意，当承载OCX控件时，会自动设置编辑器控件的Font.Unit属性值为GraphicsUnit.Point。
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextControlHostElement.InternalDCAxHost">
      <summary>
            DCWriter内部使用。承载OCX控件的容器控件。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.InternalDCAxHost.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextControlHostElement._PreviewImage">
      <summary>
            控件预览图片
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.RuntimeVAlign">
      <summary>
            运行时使用的垂直对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.IsOCXTypeName(System.String)">
      <summary>
            DCWriter内部使用。判断是否可能为OCX控件类型名称
            </summary>
      <param name="typeName">类型名称</param>
      <returns>是否是OCX控件类型名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.RuntimeControlType">
      <summary>
            运行时使用的承载的控件类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.SetNativeHostedControlHandle(System.IntPtr)">
      <summary>
            设置承载的原生态的控件。
            </summary>
      <param name="handle">控件句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.SetErrorMessage(System.String,System.Exception)">
      <summary>
            DCWriter内部使用。设置错误信息
            </summary>
      <param name="msg">
      </param>
      <param name="ext">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.EditorRefreshView">
      <summary>
            刷新文档元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.CreatePreviewImage">
      <summary>
            创建预览图片
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.ClearHostedInstance">
      <summary>
            擅长被承载的对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.GetPreferedSize(System.Object)">
      <summary>
            获得承载的控件使用的推荐的大小
            </summary>
      <param name="hostInstance">承载的控件</param>
      <returns>推荐的大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.GetHostedInstance">
      <summary>
            获得被承载的对象
            </summary>
      <returns>对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.ReloadHostedInstance">
      <summary>
            重新加载被承载的对象实例
            </summary>
      <returns>承载的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.DrawActiveBorder(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制激活状态时的边框
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.DrawDocumangeImage(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            调用IDocumentImage接口绘制图形
            </summary>
      <param name="args">参数</param>
      <returns>是否调用接口绘制图形</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制内容
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.MessageToDelayLoadControl">
      <summary>
            演示加载控件的提示文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.PrepareSerialize(System.String)">
      <summary>
            准备执行序列化操作
            </summary>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.ClearPreviewImage">
      <summary>
            DCWriter内部使用。删除缓存的预览图片数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.LoadControlViewState(System.Object)">
      <summary>
            从文档数据中加载控件视图状态
            </summary>
      <param name="hostedInstance">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.SaveControlViewState(System.Object,System.Boolean)">
      <summary>
            保存控件视图状态到文档中
            </summary>
      <param name="hostedInstance">控件对象</param>
      <param name="fastMode">是否是快速模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.AfterHostedControlLoaded">
      <summary>
            承载的对象加载完毕后处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.CreateHostedInstance">
      <summary>
            创建被承载的对象实例，此处仅仅是创建对象实例，并不加载视图状态和对象属性。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.OnResize">
      <summary>
            元素大小发生改变事件处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextControlHostElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.HasCreateInstance">
      <summary>
            是否曾经创建过对象实例。
            </summary>
      <remarks>
            XTextControlHostElement很少使用，如果从未创建过这种对象实例，则可以优化某些过程。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.DelayLoadControl">
      <summary>
            延迟加载控件,用户点击才加载控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.VAlign">
      <summary>
            垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.ManageID">
      <summary>
            DCWriter内部使用。内部管理使用的元素ID
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.ControlType">
      <summary>
            承载的控件的类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.TypeFullName">
      <summary>
            控件类型全名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.HostedType">
      <summary>
            承载的对象类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.ValuePropertyName">
      <summary>
            控件的数值属性名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.HostMode">
      <summary>
            控件承载模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.EnableViewState">
      <summary>
            是否启用视图状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.ViewState">
      <summary>
            视图状态数据包对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.AllowUserResize">
      <summary>
            能否让用户修改元素的大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.Parameters">
      <summary>
            控件参数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.SavePreviewImage">
      <summary>
            保存文档时是否保存预览图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.PreviewImage">
      <summary>
            预览使用的图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.PreviewImageData">
      <summary>
            预览图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.ErrorMessage">
      <summary>
            错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.OptionsPropertyName">
      <summary>
            承载对象的选项属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.InstanceOptions">
      <summary>
            承载的对象实例的选项信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.SpecifyHostedInstance">
      <summary>
            用户指定的承载的对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextControlHostElement.HostedInstance">
      <summary>
            元素承载的对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextCustomShapeElement">
      <summary>
            自定义绘图对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.DrawContentCustom(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            绘制自定义内容
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.RefreshSizeCustom(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            计算对象大小
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算对象大小
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCustomShapeElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制元素内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCustomShapeElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCustomShapeElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCustomShapeElement.ChartPageIndex">
      <summary>
            从0开始计算的图标页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCustomShapeElement.DrawContentHandlerName">
      <summary>
            绘制内容使用的委托对象参数名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCustomShapeElement.DrawContentHandler">
      <summary>
            绘制内容使用的委托对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDirectoryFieldElement">
      <summary>
            目录域对象 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDirectoryFieldElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDirectoryFieldElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDirectoryFieldElement.UpdatePageIndex">
      <summary>
            更新页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDirectoryFieldElement.DisplayLevel">
      <summary>
            目录显示级别
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDirectoryFieldElement.ShowPageIndex">
      <summary>
            显示页码
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocument">
      <summary>
            文档参数、数据相关的代码群
            </summary>
      <summary>
            文档加载和保存的代码群
            </summary>
      <summary>
            文本文档对象
            </summary>
      <remarks>
            XTextDocument 是文本文档对象模型的顶级对象,是外部程序访问文档对象模型的入口点,
            它包含了一些控制文本文档整体的成员.包括文档对象的组织,文档视图内容的绘制,用户界面事件处理.
            编制 袁永福 2012-4-12
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._GlobalEnableScript">
      <summary>
            全局性的是否允许脚本功能
            </summary>
      <remarks>
            在某些情况下，比如对WEB客户端服务器从二进制数组加载程序集，则程序集为无根之水，无法执行动态编译，因此无法执行脚本功能。
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.EventAfterLoadRawDOM">
      <summary>
            加载文档DOM原始结构后的事件.本事件是加载文档原始DOM结构后的触发的事件.这是一个很早期的事件，此时文档元素内容布局、数据源绑定、表达式和脚本尚未开始执行。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._InnerDataSourceTree">
      <summary>
            内置的树状数据源对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.DisableFocusEventOnce">
      <summary>
            只发生一次的禁止触发文档元素获取焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.EventReadFileContentInternal">
      <summary>
            读取文件内容委托对象,DCWriter内部使用。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._SpecluateBinaryLength">
      <summary>
            推测的文档二进制大小，数值是不可靠的。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._SerializeOptionsOnce">
      <summary>
            只使用一次的序列化设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._Deserializing">
      <summary>
            正在进行反序列化操作的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._ParagraphFlagSize">
      <summary>
            段落符号元素的大小
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._ParagraphFlagViewWidth">
      <summary>
            段落符号元素的显示宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._FixContentForPageLineElements">
      <summary>
            需要为分页线而微调内容的文档元素对象列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._LockPageState">
      <summary>
            文档分页状态锁定标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.EventBeforeRefreshPages">
      <summary>
            刷新文档分页排版前事件。此时XTextLine已经就绪，但尚未分页。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._Processing_InnerRefreshPages">
      <summary>
            正在执行分页操作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._ExecuteAllValueExpressionWhenRefreshDocument">
      <summary>
            在刷新文档视图时是否执行所有表达式。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._LastOverloadType">
      <summary>
            当前授权超限状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.EnabledLicenseHardwareDog">
      <summary>
            是否启用注册码硬件加密狗。 
             </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._IsPreloadingSystem">
      <summary>
            正在预加载系统标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._RunInLocalWebServer">
      <summary>
            编辑器控件运行在本地WEB服务器中
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.MultiRegisterCodeForWeb">
      <summary>
            WEB服务器支持多注册码功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._RegisterCodeForCurrentThread">
      <summary>
             为当前线程而设置的注册码.
             </summary>
      <remarks>
             对BS控件，当WEB服务器处于多重注册时，需要使用本属性来确定当前HTTP回话使用的注册码。
             由于多个HTTP回话可能使用不同的注册码，而_RegisterCode是跨线程共享的，因此容易产生窜码。
             而本字段是线程静态的，在HTTP回话开头设置本属性就优先使用本字段值，不产生窜码。而且
             访问本字段值无需上锁，不会产生互锁，提高服务器性能。
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._RuntimeRegisterCode">
      <summary>
            运行时使用的注册码
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._LocalWebServerName">
      <summary>
            本地计算机名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._CustomHighlightInfos">
      <summary>
            字符元素自定义高亮度设置信息列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._InnerIsDeletedStyle">
      <summary>
            DCWriter内部使用，元素样式是否是逻辑删除的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.ProductType">
      <summary>
            产品适用范围
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.InnerReadingXML">
      <summary>
            正在加载XML文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._LastAppErrorInfo">
      <summary>
            最后一次应用程序错误信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._Cached_Options">
      <summary>
            缓存的文档选项对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._DocumentSerializing">
      <summary>
            文档正在进行序列化中。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._UndoList">
      <summary>
            撤销操作信息列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._ReplaceElements_CurrentContainer">
      <summary>
            当前执行元素替换的容器元素对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._EditorControl">
      <summary>
            文档绑定的控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._EnableInvalidateViewFunction">
      <summary>
            是否启用InvalidateView系列函数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._NavigateContentChangedFlag">
      <summary>
            导航内容改变标志
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._Preserve_ExpressionExecuter">
      <summary>
            保留_ExpressionExecuter字段值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._MouseDown_SelectionLength">
      <summary>
            鼠标按键按下时的选择区域的长度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._MouseDown_Selection">
      <summary>
            鼠标按键按下时的选择区域对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._DocumentGraphicsUnit">
      <summary>
            文档坐标单位
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._Pages">
      <summary>
            页面集合
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument._PageIndexfix">
      <summary>
            显示的页码修正值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.LastDrawAbsoluteBounds">
      <summary>
            最后一次绘制元素使用的在画布中的绝对坐标区域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.BeforeDrawContent">
      <summary>
            绘制文档内容之前的执行的功能委托
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocument.AfterDrawContent">
      <summary>
            绘制文档内容之后的执行的功能委托
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethod(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodReturnInt32(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodReturnString(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodReturnBoolean(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodReturnDouble(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodExt(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodExtReturnInt32(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodExtReturnString(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodExtReturnBoolean(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptMethodExtReturnDouble(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveElementsVisibleState">
      <summary>
            保存元素可见性状态，本函数和RestoreElementsVisibleState（）是配套的。
            </summary>
      <returns>状态信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RestoreElementsVisibleState(System.Object)">
      <summary>
            恢复元素可见性状态。输入参数为函数SaveElementsVisibleState（）的返回值。
            </summary>
      <param name="state">状态信息对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetJavaScript(System.String)">
      <summary>
            设置javascript脚本代码。
            </summary>
      <param name="scriptText">脚本代码文本</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetVBScript(System.String)">
      <summary>
            设置vbscript脚本代码。
            </summary>
      <param name="scriptText">脚本代码文本</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ThisRaiseJQueryEvent(System.String,System.Object,System.Boolean)">
      <summary>
            触发文档元素在JQuery中绑定的事件
            </summary>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="autoUpdateView">自动更新视图</param>
      <returns>是否执行了脚本事件处理代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RaiseJQueryEvent(System.Object,System.String,System.Object,System.Boolean)">
      <summary>
            触发JQuery绑定的事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="autoUpdateView">自动更新视图</param>
      <returns>是否执行了脚本事件处理代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RaiseJQueryEventSpecifyScriptEngine(System.Object,System.String,System.Object,DCSoft.Writer.Script.IDocumentScriptEngine)">
      <summary>
            触发JQuery绑定的事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="engine">特别指定的脚本引擎对象，如果未空则默认为文档自己的脚本引擎对象</param>
      <returns>是否执行了脚本事件处理代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteScriptSub(System.String)">
      <summary>
            执行脚本中的方法
            </summary>
      <param name="methodName">方法名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ResetScriptEngine">
      <summary>
            重置脚本引擎
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerResetScriptEngine">
      <summary>
            简单的重置脚本引擎
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StartScriptEngine">
      <summary>
            启动VBA脚本引擎
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasScriptText(System.Boolean)">
      <summary>
            判断是否存在脚本文本
            </summary>
      <param name="deelpy">是否深入判断子孙节点</param>
      <returns>是否具有脚本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasEventScriptHandler(System.String)">
      <summary>
            判断是否存在处理文档事件的脚本
            </summary>
      <param name="eventName">事件名称</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RaiseEventScriptHandler(System.String,System.Object[])">
      <summary>
            触发处理文档事件的脚本
            </summary>
      <param name="eventName">事件名称</param>
      <param name="parameters">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasElementEventScriptHandler(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            判断是否存在文档元素事件的脚本
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RaiseElementEventScriptHandler(DCSoft.Writer.Dom.XTextElement,System.String,System.Object[])">
      <summary>
            触发文档元素事件的脚本
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="parameters">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.createEvent(System.String)">
      <summary>
            创建事件参数
            </summary>
      <param name="type">
      </param>
      <returns>
      </returns>
      <seealso cref="!:https://developer.mozilla.org/en-US/docs/Web/API/Document/createEvent" />
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventExpressionFunction(DCSoft.Writer.WriterExpressionFunctionEventArgs)">
      <summary>
            触发EventExpressionFunction事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnDocumentContentChanged">
      <summary>
            触发文档内容发生改变事件.本方法内部还会调用文档对象绑定的编辑器控件的OnDocumentContentChanged方法。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnSelectionChanged">
      <summary>
            DCWriter内部使用。文档内容状态发生改变处理,本方法还会调用文档对象绑定的编辑器控件的OnSelectionChanged方法。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RaiseSelectionChangedEvent">
      <summary>
            仅仅触发文档和控件的SelectionChanged事件，不触发脚本事件和其他操作。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnSelectionChanging(DCSoft.Writer.Dom.SelectionChangingEventArgs)">
      <summary>
            文档内容选择状态发生改变处理,本方法还会调用文档绑定的编辑器控件的OnSelectionChanging方法。
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnDocumentLoad(System.EventArgs)">
      <summary>
            触发文档的DocumentLoad事件。本方法内部还会调用文档绑定的编辑器控件的OnDocumentLoad方法。
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventElementValidating(DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventAfterPaintElement(DCSoft.Writer.ElementPaintEventArgs)">
      <summary>
            触发EventAfterPaintElement事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventBeginPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发开始打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventPrintQueryPageSettings(DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs)">
      <summary>
            触发打印时查询页面设置事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventAfterPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面后事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventEndPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发结束打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnEventAfterLoadRawDOM(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发加载文档DOM原始结构后的事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CollectDataFeedback(DCSoft.Writer.Data.DataFeedbackInfoList,System.Boolean)">
      <summary>
            收集所有的数据回填信息对象
            </summary>
      <param name="result">数据回填信息对象列表</param>
      <param name="checkContentVersion">是否检查版本号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetValuesByDataName">
      <summary>
            根据数据名称获得文档中所有的数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetDataProvider(DCSoft.Writer.Data.DOMDataProvider)">
      <summary>
            设置数据功能提供者
            </summary>
      <param name="p">提供者对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.KBProvider">
      <summary>
            获得KB功能提供者对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetKBProvider(DCSoft.Writer.Data.IKBProvider)">
      <summary>
            设置KB功能提供者对象
            </summary>
      <param name="p">对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WriteDataFromDataSourceToElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            针对特定文档元素执行数据源绑定操作。将数据填充到文档元素中。
            </summary>
      <param name="elements">文档元素列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WriteDataFromDataSourceToDocumentSpecifyParameterNames(System.String)">
      <summary>
            将指定名称的文档参数值填充到文档中
            </summary>
      <param name="parameterNames">指定的文档参数名称，各个名称之间用英文逗号分开。比如“姓名,性别,国籍”，如果为空则更新全部数据源。</param>
      <returns>更新的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDetectValueBindingModifiedMessage">
      <summary>
            检测数据源填充操作导致的修改文档元素的相关信息，但不真正填充数据源，不会修改文档内容。
            </summary>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.DetectValueBindingModified">
      <summary>
            检测数据源填充操作导致的修改文档元素的个数，但不真正填充数据源，不会修改文档内容。
            </summary>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WriteDataFromDataSourceToDocument">
      <summary>
            将数据源填充到文档中
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ResetFormValue">
      <summary>
            重置表单元素默认值
            </summary>
      <returns>是否导致文档内容发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.FillDataSource(System.Boolean)">
      <summary>
            填充数据源到文档内容中
            </summary>
      <param name="fastMode">快速模式</param>
      <returns>操作是否导致了文档内容发生改变的处数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetFormValue(System.String,System.String)">
      <summary>
            设置表单值
            </summary>
      <param name="name">表单元素名称</param>
      <param name="Value">表单值</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetFormValue(System.String)">
      <summary>
            获得表单数据
            </summary>
      <param name="name">字段名称</param>
      <returns>获得的表单数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearValueValidateResult">
      <summary>
            清空数据校验结果信息
            </summary>
      <returns>清除的信息个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ValueValidateWithCreateDocumentComments">
      <summary>
            检验文档，并根据校验结果自动生成文档批注。
            </summary>
      <returns>校验信息列表，如果返回空列表则校验全部通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ValueValidate">
      <summary>
            对整个文档的输入域进行数据校验
            </summary>
      <returns>校验信息列表，如果返回空列表则校验全部通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDataSourceBindingDescriptionsXML">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述数据源绑定信息的XML字符串。</returns>
      <example>
            本函数返回的是类似以下的XML字符串，注意：此处使用了方括号替换了尖括号。
            [DCDataSourceBindingDescriptions]
                [Binding DataSource="Patient" BindingPath="Name" ElementID="field1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Age" ElementID="field2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Address.Street" ElementID="field3" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="年龄" BindingPath="" ElementID="field4" FormatString="" AutoUpdate="False" Readonly="False" /]
            [/DCDataSourceBindingDescriptions]
            </example>[System.Reflection.Obfuscation(Exclude = true, ApplyToMembers = true)]
        </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetBindingDataSources">
      <summary>
            获得文档中绑定的数据源名称字符串列表。各个名称之间用逗号分开。
            </summary>
      <returns>数据源名称列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDataSourceBindingDescriptions">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WriteDataSource">
      <summary>
            本接口仅供保持兼容性，请改为使用WriteDataFromDocumentToDataSource()
            </summary>
      <returns>写入的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WriteDataFromDocumentToDataSource">
      <summary>
            将文档中的数据写入到数据源中,本函数会修改LastAlertInfos列表内容。
            </summary>
      <returns>写入的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsValueBindingEnable(DCSoft.Writer.Data.XDataBinding)">
      <summary>
            运行时使用的树状数据源对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetParameterEnabled(System.String)">
      <summary>
            获得参数是否有效
            </summary>
      <param name="parameterName">参数名</param>
      <returns>是否有效</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetParameterEnabled(System.String,System.Boolean)">
      <summary>
            设置参数是否有效
            </summary>
      <param name="parameterName">参数名</param>
      <param name="enabled">是否有效</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ContainsDocumentParameter(System.String)">
      <summary>
            判断是否存在指定名称的文档参数
            </summary>
      <param name="pName">参数名</param>
      <returns>是否存在参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetNowDateTime">
      <summary>
            获得系统当前日期事件
            </summary>
      <returns>日期事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetParameterValue(System.String)">
      <summary>
            获得指定名称的参数值
            </summary>
      <param name="name">参数名</param>
      <returns>获得的参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetParameterValue(System.String,System.Object)">
      <summary>
            设置参数值
            </summary>
      <param name="name">
      </param>
      <param name="newValue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetDocumentParameterValue(System.String,System.Object)">
      <summary>
            设置参数值
            </summary>
      <param name="name">
      </param>
      <param name="newValue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetDocumentParameterValueXml(System.String,System.String)">
      <summary>
            设置XML格式的文档参数值
            </summary>
      <param name="name">参数名</param>
      <param name="xmlText">参数值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumnetParameterValue(System.String)">
      <summary>
            获得文档参数值
            </summary>
      <param name="name">参数名</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentParameterValueXml(System.String)">
      <summary>
            获得Xml格式的文档参数值
            </summary>
      <param name="name">参数名</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateViewForDataSource">
      <summary>
            请改用WriteDataFromDataSourceToDocument()
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckMaxTextLengthForCopyPaste(System.String,System.Boolean)">
      <summary>
            为MaxTextLengthForCopyPaste选项而检查内容
            </summary>
      <param name="list">要检查的内容</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>检查过后的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckMaxTextLengthForCopyPaste(DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            为MaxTextLengthForCopyPaste选项而检查内容
            </summary>
      <param name="list">要检查的内容</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>检查是否通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AppendSubDocument(DCSoft.Writer.Dom.XTextSubDocumentElement)">
      <summary>
            追加子文档元素
            </summary>
      <param name="newSubDoc">子文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InsertSubDocuentAtCurrentPosition(DCSoft.Writer.Dom.XTextSubDocumentElement,System.Boolean)">
      <summary>
            在当前位置处插入子文档元素
            </summary>
      <param name="newSubDoc">要插入的子文档对象</param>
      <param name="insertUp">true:在上面插入；false:在下面插入</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ValidateElementsIDRepeat(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            修正文档元素中重复的ID号
            </summary>
      <param name="elements">文档元素列表</param>
      <returns>修改的ID的个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ValidateElementIDRepeat(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            对文档元素ID值进行重复性校验
            </summary>
      <param name="element">文档元素对象</param>
      <returns>校验是否通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EditorDelete(System.Boolean)">
      <summary>
            方法无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ReflectionGetElementPropertyValue(System.String,System.String)">
      <summary>
            通过反射来获得指定编号的元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <returns>获得的属性值转换的字符串</returns>
      <remarks>
            例如 var strStyle = document.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ReflectionSetElementPropertyValue(System.String,System.String,System.String)">
      <summary>
            通过反射来设置指定编号的文档元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <param name="newValue">新的属性值</param>
      <returns>操作是否成功</returns>
      <remarks>
            例如 document.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle","DropdownList");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ReflectionCallElementMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            通过反射来执行指定编号的文档元素的方法。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">方法路径,可以使用"属性名1.属性名2.属性名3.方法名"的方式来深入调用方法</param>
      <param name="parameter1">参数1</param>
      <param name="parameter2">参数2</param>
      <param name="parameter3">参数3</param>
      <param name="parameter4">参数4</param>
      <param name="parameter5">参数5</param>
      <param name="parameter6">参数6</param>
      <returns>方法返回值转换的字符串，对于void类型返回【null】。</returns>
      <remarks>
            例如 document.ReflectionCallElementMethod("field1","Select",null,null,null,null,null,null);
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementProperty(System.String,System.String,System.String)">
      <summary>
            设置文档元素自定义属性
            </summary>
      <param name="id">文档元素编号</param>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementProperty(System.String,System.String)">
      <summary>
            获得文档元素的自定义属性值
            </summary>
      <param name="id">文档元素编号</param>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AddDropdownListItem(System.String,System.String,System.String,System.Boolean)">
      <summary>
            为下拉列表元素添加下拉列表项目
            </summary>
      <param name="id">元素编号</param>
      <param name="text">项目的文本值</param>
      <param name="Value">项目的数值</param>
      <param name="saveToXml">添加的项目是否保存在XML中</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetVisibleForElementMarkAutoHide(System.Boolean,System.Boolean)">
      <summary>
            设置标记了自动隐藏的元素的可见性，具体实现在WriterTools.SetVisibleForElementMarkAutoHide()。
            </summary>
      <param name="visible">可见性</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作修改的文档元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EditorSetDefaultStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            设置文档默认样式
            </summary>
      <param name="newStyle">新默认样式</param>
      <param name="logUndo">是否记录撤销操作信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EditorSetParagraphStyle(System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextElement,System.Int32},System.Boolean)">
      <summary>
            在编辑器中设置段落样式
            </summary>
      <param name="newStyleIndexs">新段落样式编号字典</param>
      <param name="logUndo">是否记录撤销信息</param>
      <returns>操作的段落元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EditorSetElementStyle(System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextElement,System.Int32},System.Boolean,System.Boolean,System.String)">
      <summary>
            在编辑器中设置元素样式
            </summary>
      <param name="newStyleIndexs">新元素样式编号</param>
      <param name="logUndo">是否记录撤销信息</param>
      <param name="causeUpdateLayout">操作是否会导致重新排版</param>
      <param name="commandName">相关的命令对象</param>
      <returns>操作修改的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetCacheFileDirectory(System.String)">
      <summary>
            设置软件本地缓存数据存储目录，要求应用程序具有访问该目录的权限.
            </summary>
      <param name="dir">目录路径名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDataEncryptProvider">
      <summary>
            获得数据加密器提供者对象
            </summary>
      <returns>获得的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SystemSupportTransparentEncrypt">
      <summary>
            系统是否支持透明加密功能
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ContainsTransparentEncryptContent">
      <summary>
            判断是否包含透明加密的内容
            </summary>
      <returns>是否包含透明加密的内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetInnerRepeatImageDataList">
      <summary>
            获得内部重复利用的图片数据的列表
            </summary>
      <returns>列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AddSpecluateBinaryLength(System.Int32)">
      <summary>
            添加文档二进制大小长度
            </summary>
      <param name="len">推测的元素二进制长度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetSpecludateBinaryCapacity">
      <summary>
            获得保存文档时初始化的字节缓冲区大小
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetXMLText(System.Boolean)">
      <summary>
            获得XML字符串
            </summary>
      <param name="formatted">是否格式化输出</param>
      <returns>获得的XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetRTFText(System.Boolean)">
      <summary>
            获得文档的RTF文本代码
            </summary>
      <param name="IncludeSelectionOnly">是否只包含选择区域</param>
      <returns>获得的RTF文本代码字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetHtmlText(System.Boolean)">
      <summary>
            获得文档的Html文本代码
            </summary>
      <param name="IncludeSelectionOnly">是否只包含选择区域</param>
      <returns>获得的RTF文本代码字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BeginLoadDocument">
      <summary>
            开始加载文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EnableContentChangedEvent">
      <summary>
            判断是否允许触发ContentChanged事件
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportDocument(DCSoft.Writer.Dom.FileContentSource)">
      <summary>
            导入文档内容
            </summary>
      <param name="source">文档来源</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportDocument(System.String,System.String,System.String)">
      <summary>
            导入文档内容
            </summary>
      <param name="fileSystemName">文件系统名称</param>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportDocument(System.String,System.String)">
      <summary>
            从文件中导入文档内容
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportDocument(System.IO.Stream,System.String)">
      <summary>
            导入文档内容
            </summary>
      <param name="stream">文档流对象</param>
      <param name="format">文件格式</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportDocument(System.IO.TextReader,System.String)">
      <summary>
            导入文档
            </summary>
      <param name="reader">文本读取器</param>
      <param name="format">文件格式</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadUseAppendModeFromFileName(System.String,System.String)">
      <summary>
            已追加模式加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <returns>导入的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadUseAppendModeFromStream(System.IO.Stream,System.String)">
      <summary>
            以追加模式加载文档
            </summary>
      <param name="stream">文档流对象</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadUseAppendModeFromReader(System.IO.TextReader,System.String)">
      <summary>
            以追加模式加载文档
            </summary>
      <param name="reader">文本读取器</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadUseAppendModeFromString(System.String,System.String)">
      <summary>
            以追加模式加载文档
            </summary>
      <param name="txt">文本内容</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadUseAppendModeFromBase64String(System.String,System.String)">
      <summary>
            以追加模式加载文档
            </summary>
      <param name="txt">BASE64格式文本</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadDocumentInstance(System.String,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <param name="instance">承载加载文档的对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.String,System.String,System.Boolean,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <param name="fastMode">快速加载模式</param>
      <param name="instance">指定的文档对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromXmlReader(System.Xml.XmlReader,System.String)">
      <summary>
            以指定的格式从指定名称的XML读取器中加载文档
            </summary>
      <param name="reader">XML读取器</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.Stream,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">指定的格式</param>
      <param name="instance">指定的文档对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.Stream,System.String,System.Boolean,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">指定的格式</param>
      <param name="fastMode">快速加载模式</param>
      <param name="instance">指定的文档对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.TextReader,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="reader">文本读取器</param>
      <param name="format">指定的格式</param>
      <param name="instance">指定的文档对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.String,System.String)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromFile(System.String,System.String)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromFileFastMode(System.String,System.String)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromString(System.String,System.String)">
      <summary>
            以指定的格式从指定的文本中加载文档
            </summary>
      <param name="text">文本</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromStringFastMode(System.String,System.String)">
      <summary>
            以指定的格式从指定的文本中加载文档
            </summary>
      <param name="text">文本</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromBase64String(System.String,System.String)">
      <summary>
            从Base64的字符串中加载文档
            </summary>
      <param name="text">Base64字符串</param>
      <param name="format">指定的文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromBinary(System.Byte[],System.String)">
      <summary>
            从二进制数据块中加载文档
            </summary>
      <param name="bs">字节数组</param>
      <param name="format">指定的文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromBase64StringFastMode(System.String,System.String)">
      <summary>
            从Base64的字符串中加载文档
            </summary>
      <param name="text">Base64字符串</param>
      <param name="format">指定的文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.String,System.String,System.Boolean)">
      <summary>
            以指定的格式从指定名称的文件中加载文档
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <param name="fastMode">快速加载模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.Stream,System.String)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">指定的格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.Stream,System.String,System.Boolean)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">指定的格式</param>
      <param name="fastMode">快速加载模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.TextReader,System.String)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="reader">文本读取器</param>
      <param name="format">指定的格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Load(System.IO.TextReader,System.String,System.Boolean)">
      <summary>
            以指定的格式从文件流中加载文档。
            </summary>
      <param name="reader">文本读取器</param>
      <param name="format">指定的格式</param>
      <param name="fastMode">快速加载模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDeserializer(System.Object,System.String)">
      <summary>
            获得文件反序列化器
            </summary>
      <param name="source">
      </param>
      <param name="format">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerDeserialize(System.String,System.Object,System.String,System.Boolean,DCSoft.Writer.Dom.XTextDocument.DocumentLoadMode,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            文档反序列化
            </summary>
      <param name="fileSystemName">文件系统名称</param>
      <param name="source">文件来源</param>
      <param name="format">文件格式</param>
      <param name="fastMode">快速模式</param>
      <param name="loadMode">加载模式</param>
      <param name="instance">文档对象实例</param>
      <returns>加载生成的文档元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SendClientReport">
      <summary>
            发送客户端信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerDeserialize(DCSoft.Writer.Dom.FileContentSource,System.Boolean,System.Boolean,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            文档反序列化
            </summary>
      <param name="contentSource">文件来源</param>
      <param name="fastMode">快速模式</param>
      <param name="importMode">导入模式</param>
      <param name="instance">文档对象实例</param>
      <returns>加载生成的文档元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageFile(System.String)">
      <summary>
            保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageFileInPrintMode(System.String)">
      <summary>
            以打印模式保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageFile(System.Int32,System.String)">
      <summary>
            保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageFileInPrintMode(System.Int32,System.String)">
      <summary>
            以打印模式保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageFileZoom(System.String,System.Single)">
      <summary>
            保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
      <param name="zoomRate">缩放比率</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageFileZoom(System.Int32,System.String,System.Single)">
      <summary>
            保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="zoomRate">缩放比率</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerSavePageImageFile(System.Int32,System.String,System.Boolean,System.Single,DCSoft.Writer.Dom.DocumentRenderMode)">
      <summary>
            内部的保存图片文件
            </summary>
      <param name="pageIndex">页码号</param>
      <param name="fileName">文件名</param>
      <param name="longBmpMode">是否为长图片格式</param>
      <param name="zoomRate">缩放比率</param>
      <param name="renderMode">绘图模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageToBase64String(System.Int32,System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageToBase64StringInPrintMode(System.Int32,System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SavePageImageToBase64StringZoom(System.Int32,System.String,System.Single)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <param name="zoomRate">缩放比率</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageToBase64String(System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageToBase64StringInPrintMode(System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveLongImageToBase64StringZoom(System.String,System.Single)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <param name="zoomRate">缩放比率</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateUserInfoSaveTime(System.Boolean)">
      <summary>
            更新用户历史记录的时间
            </summary>
      <param name="addNewHistoryInfo">添加新的历史记录</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.IO.TextWriter,System.String)">
      <summary>
            以指定的格式将文档保存在文档文档中
            </summary>
      <param name="writer">文本书写器</param>
      <param name="format">文档格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.IO.TextWriter,System.String,System.Boolean)">
      <summary>
            以指定的格式将文档保存在文档文档中
            </summary>
      <param name="writer">文本书写器</param>
      <param name="format">文档格式</param>
      <param name="backgroundMode">后台模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.IO.TextWriter,System.String,System.Boolean,System.String)">
      <summary>
            以指定的格式将文档保存在文档文档中,DCWriter内部使用。
            </summary>
      <param name="writer">文本书写器</param>
      <param name="format">文档格式</param>
      <param name="backgroundMode">后台模式</param>
      <param name="descFileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.String,System.String)">
      <summary>
            以指定的格式将文档保存在文件中
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文档格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToFileFast(System.String,System.String)">
      <summary>
            快速的以指定的格式将文档保存在文件中
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文档格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToFile(System.String,System.String)">
      <summary>
            以指定的格式将文档保存在文件中
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文档格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToString(System.String)">
      <summary>
            以指定格式将文档保存而而生成文本
            </summary>
      <param name="format">文档格式</param>
      <returns>保存结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToBase64String(System.String)">
      <summary>
            以指定格式将文档保存为BASE64格式的字符串
            </summary>
      <param name="format">文档格式</param>
      <returns>保存的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToBinary(System.String)">
      <summary>
            以指定的格式将文档保存而生成二进制数据
            </summary>
      <param name="format">文档格式</param>
      <returns>保存结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SaveToCompressBinary(System.String)">
      <summary>
            以指定的格式将文档保存而生成压缩的二进制数据
            </summary>
      <param name="format">文档格式</param>
      <returns>保存结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LoadFromCompressBinary(System.Byte[],System.String)">
      <summary>
            以指定的格式从压缩的二进制数据加载文档
            </summary>
      <param name="bs">压缩的二进制数据</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BackgroundSave(System.String,System.String)">
      <summary>
            以后台模式存储文件
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文档格式</param>
      <remarks>
            后台模式存储文件时，不更新Modified状态
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BackgroundSaveToStream(System.IO.Stream,System.String)">
      <summary>
            以后台模式存储文件
            </summary>
      <param name="stream">文件流</param>
      <param name="format">文件格式</param>
      <remarks>
            后台模式存储文件时，不更新Modified状态
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.String,System.String,System.Boolean)">
      <summary>
            以指定的格式将文档保存在文件中
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文档格式</param>
      <param name="backgroundMode">后台模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AIReset">
      <summary>
            重置AI引擎,删除AI产生的后台数据.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AIAnalyseDocument">
      <summary>
            使用AI解析文档正文内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.IO.Stream,System.String)">
      <summary>
            以指定的格式将文档保存在文件流中。
            </summary>
      <param name="stream">文件流</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Save(System.IO.Stream,System.String,System.Boolean,System.String,System.Text.Encoding)">
      <summary>
            以指定的格式将文档保存在文件流中。
            </summary>
      <param name="stream">文件流</param>
      <param name="format">文件格式</param>
      <param name="backgroundMode">后台模式</param>
      <param name="descFileName">目标文件</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetSerializeOptionsOnce(DCSoft.Writer.Serialization.ContentSerializeOptions)">
      <summary>
            设置只使用一次的文档序列化设置
            </summary>
      <param name="opts">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PrepareSerialize(System.String)">
      <summary>
            准备执行序列化操作
            </summary>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AfterSerialize">
      <summary>
            完成序列化操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateWebClientCurrentElement">
      <summary>
            更新WebClientCurrentElement属性值，DCWriter内部使用。
            </summary>
      <remarks>
            从客户端返回的HTML代码加载文档后会调用本函数来更新客户端当前文档元素对象
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CopyContent(DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean)">
      <summary>
            从另外一个文本文档复制文档内容
            </summary>
      <param name="sourceDocument">文档内容来源</param>
      <param name="copyElements">是否复制元素</param>
      <remarks>
            本方法一般用于执行XML反序列化时，将文档内容从临时文档复制到本文档。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BeginCollecRowHeightChanged">
      <summary>
            开始收集行高发生改变的表格行元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CollectRowHeightChanged(DCSoft.Writer.Dom.XTextTableRowElement,System.Single)">
      <summary>
            收集行高发生改变的表格行元素
            </summary>
      <param name="row">表格行元素</param>
      <param name="oldHeight">旧高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EndCollectRowHeightChangedAndRaiseEvent">
      <summary>
            结束收集行为并触发事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerGlobalGridInfo">
      <summary>
            获得全局性的文档网格线排版设置
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetGlobalGridLineInfo">
      <summary>
            获得全局性的文档网格线设置
            </summary>
      <returns>设置信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateJumpPrintPosition(DCSoft.Printing.JumpPrintInfo)">
      <summary>
            更新续打线的位置
            </summary>
      <returns>操作是否修改了信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetRuntimeJumpPosition(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
             获得运行时使用的续打线的位置
            </summary>
      <param name="element">文档元素</param>
      <param name="useTopPosition">是否采用文档元素的上边缘</param>
      <returns>位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SuspendLayoutElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加挂起排版操作的元素
            </summary>
      <param name="element">元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ResumeLayoutElement(System.Boolean)">
      <summary>
            DCWriter内部使用。重新执行被挂起的文档元素排版。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckPageRefreshed">
      <summary>
            检查文档内容排版和布局
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshInnerViewForControlOnLoad">
      <summary>
            当文档为空白内容时的刷新文档内部排版和分页。不更新用户界面。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshInnerView(System.Boolean)">
      <summary>
            刷新文档内部排版和分页。不更新用户界面。
            </summary>
      <param name="bolFastMode">是否为快速模式，若为快速模式，则不刷新文档视图和用户界面</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshSizeWithoutParamter">
      <summary>
            无参数的重新计算文件元素大小
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshSize_2">
      <summary>
            仅供兼容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshSize(System.Drawing.Graphics)">
      <summary>
            重新计算大小
            </summary>
      <param name="g">画布对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshParagraphFlagSize(DCSoft.Drawing.DCGraphics)">
      <summary>
            计算段落符号元素的大小
            </summary>
      <param name="eof">元素对象</param>
      <param name="g">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshSize(DCSoft.Drawing.DCGraphics)">
      <summary>
            重新计算大小
            </summary>
      <param name="g">画布对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerRefreshSize(DCSoft.Drawing.DCGraphics,System.Boolean)">
      <summary>
            内部的计算文档元素大小
            </summary>
      <param name="g">画布对象</param>
      <param name="fastMode">是否为快速模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetStandartPapeViewHeight(DCSoft.Printing.XPageSettings)">
      <summary>
            采用视图单位的标准的页面高度,DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshPages">
      <summary>
            重新进行分页
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasBindingEventBeforeRefreshPages">
      <summary>
            判断是否绑定了EventBeforeRefreshPages事件
            </summary>
      <returns>是否绑定了事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshLabelContactString">
      <summary>
            刷新内容连接的标签文档元素对象的内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshDocument">
      <summary>
            刷新文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshDocumentExt(System.Boolean,System.Boolean)">
      <summary>
            刷新文档
            </summary>
      <param name="refreshSize">是否重新计算元素大小</param>
      <param name="executeLayout">是否进行文档内容重新排版</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCompressDomNode(DCSoft.Writer.Dom.XTextDocumentContentElement)">
      <summary>
            获得指定元素的压缩DOM结构
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerGetElementsByType``1">
      <summary>
            内部的基于获得文档中所有指定类型的元素
            </summary>
      <typeparam name="ElementType">
      </typeparam>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerRefreshDocumentExt(System.Boolean,System.Boolean,DCSoft.Writer.Controls.WriterViewControl)">
      <summary>
            刷新文档视图
            </summary>
      <param name="refreshSize">是否重新计算元素大小</param>
      <param name="executeLayout">是否进行文档内容排版</param>
      <param name="ctl">编辑器控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BeginUIRefresh">
      <summary>
            开始执行用户界面的刷新文档的操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EndUIRefresh">
      <summary>
            结束用户界面刷新文档的操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IncreaseLayoutVersion">
      <summary>
            增加内容排版版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteLayout">
      <summary>
            对整个文档执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerExecuteLayout">
      <summary>
            对整个文档执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckDisposed">
      <summary>
            检查文档是否已经被销毁掉了
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetNoLicencseFunctionInfo">
      <summary>
            获得没有授权的功能信息
            </summary>
      <returns>信息字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LastOverloadType">
      <summary>
            当前授权超限状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LicenseOutLimited">
      <summary>
            判断授权超过最大值，不能使用了。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.WCName_LicenseServer">
      <summary>
            命令名称
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AssemblyFileTime">
      <summary>
            核心程序集文件最后修改时间
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.MachineCode">
      <summary>
            机器码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsDamageLicenseData">
      <summary>
            是否是遭到破坏的授权数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckLicenseForFW">
      <summary>
            检查框架程序的授权是否通过
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetRunInLocalWebServer(System.Boolean)">
      <summary>
            编辑器控件运行在本地WEB服务器中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsWebApplicationMode">
      <summary>
            当前软件是否处于WEB应用程序模式
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AddWebServerSpeed">
      <summary>
            添加一个服务器端任务计数。为了迷惑破解者，故意返回一个字符串。其实返回值无用的。
            </summary>
      <returns>操作结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetRegisterCodeIndex(System.Int32)">
      <summary>
            设置当前使用的注册码序号
            </summary>
      <param name="index">序号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ASPNETSetResigerCode(System.String)">
      <summary>
            为ASP.NET而设置注册码。
            </summary>
      <param name="code">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ASPNETUpdateResigerCode">
      <summary>
            为ASP.NET而更新当前注册码。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasRegisterCode">
      <summary>
            是否设置了注册码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RegisterCodeVersion">
      <summary>
            注册码的版本号
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateRuntimeRegisterCode">
      <summary>
            更新当前注册码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetRuntimeRegisterCode(System.String,System.String)">
      <summary>
            更新当前注册码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsEnableCustomLogoImage">
      <summary>
            DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateUserTrackList">
      <summary>
            创建用户操作痕迹信息列表
            </summary>
      <returns>信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LockContentByTableRow(System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndexBase0">从0开始计算的表格行序号</param>
      <param name="userID">锁定操作的用户ID</param>
      <param name="authoriseUserIDList">授权操作的用户ID列表，各个列表之间用英文逗号分开</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LockContentByElementID(System.String,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="elementID">元素编号，必须为一个容器类型的元素的编号</param>
      <param name="userID">锁定操作的用户ID</param>
      <param name="authoriseUserIDList">授权操作的用户ID列表，各个列表之间用英文逗号分开</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LockContentByElement(DCSoft.Writer.Dom.XTextContainerElement,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="element">文档元素，必须为容器类文档元素</param>
      <param name="userID">
      </param>
      <param name="authoriseUserIDList">
      </param>
      <param name="logUndo">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetContentProtectedInfos(DCSoft.Writer.Dom.ContentProtectedInfoList)">
      <summary>
            内部使用：设置当前受保护的文档元素信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasContentProtectedInfos">
      <summary>
            判断是否存在内容保护相关信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearContentProtectedInfos">
      <summary>
            清空内容保护信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PromptProtectedContent(DCSoft.Writer.Dom.ContentProtectedInfoList)">
      <summary>
            提示遇到受保护的文档内容
            </summary>
      <param name="specifyInfos">指定的内容保护信息对象</param>
      <returns>是否显示的用户界面</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RejectUserTrace">
      <summary>
            拒绝对文档所有的修订
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CommitUserTrace">
      <summary>
            提交所有用户的修改记录。删除被逻辑删除的内容，清除用户修改痕迹。
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetCharElementHighlight(DCSoft.Writer.Dom.XTextCharElement,System.Drawing.Color,System.Drawing.Color,System.Boolean,System.Boolean)">
      <summary>
            设置文本高亮度设置 
            </summary>
      <param name="c">字符元素</param>
      <param name="foreColor">文本颜色</param>
      <param name="backColor">背景色</param>
      <param name="supportPrint">是否支持打印</param>
      <param name="supportPDF">是否支持导出为PDF</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerClearTextHighlight">
      <summary>
            清空所有的文本高亮度设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearTextHighlight">
      <summary>
            清空所有的文本高亮度设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CommitElementsStyle">
      <summary>
            内部使用：更新文档元素的样式状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateDocumentContentStyle">
      <summary>
            创建文档样式对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Update_InnerIsDeletedStyle">
      <summary>
            DCWriter内部使用，更新_InnerIsDeletedStyle数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CurrentStyleElement">
      <summary>
            获得当前文档内容样式的基准的元素对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CompressStyleList_UpdateSytleIndex(DCSoft.Writer.Dom.XTextElementList,System.Int32[])">
      <summary>
            更新文档元素的样式编号
            </summary>
      <param name="rootElement">
      </param>
      <param name="refs">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CompressStyleList">
      <summary>
            精简压缩文档样式列表,DCWriter内部使用。
            </summary>
      <remarks>
            加载的原始文档中，或者在文档编辑过程中，可能会产生没有任何文档元素使用到的文档样式，
            或者内容为空的文档样式。
            此时可以使用本方法来删除没有用的样式，减少文档数据量。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetParagraphStyle(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素所在段落的样式
            </summary>
      <param name="element">元素对象</param>
      <returns>段落样式对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetStyleIndexByString(System.String)">
      <summary>
            获得样式在列表中的编号。
            </summary>
      <param name="styleString">样式字符串，比如“FontName:宋体;FontSize:9”</param>
      <returns>编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetDefaultFont(DCSoft.Drawing.XFontValue,System.Boolean)">
      <summary>
            设置默认字体
            </summary>
      <param name="font">默认字体</param>
      <param name="raiseEvent">若修改了文档设置则是否触发事件</param>
      <returns>对视图的影响</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetDefaultFont(DCSoft.Drawing.XFontValue,System.Drawing.Color,System.Boolean)">
      <summary>
            设置默认字体
            </summary>
      <param name="font">默认字体</param>
      <param name="color">默认文本颜色</param>
      <param name="raiseEvent">若修改了文档设置则是否触发事件</param>
      <returns>对视图的影响</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetAssemblyVersion">
      <summary>
            获得编辑器程序集的版本号
            </summary>
      <returns>版本号字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StaticSetGlobalOptionValue(System.String,System.String)">
      <summary>
            设置DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <param name="Value">选项值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StaticGetGlobalOptionValue(System.String)">
      <summary>
            获得DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <returns>选项值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetGlobalOptionValue(System.String,System.String)">
      <summary>
            设置DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <param name="Value">选项值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetGlobalOptionValue(System.String)">
      <summary>
            获得DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <returns>选项值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerNullDateTime">
      <summary>
            内部的表示空的时间日期值，返回值必须和NullDateTime属性值一样。之所以写成独立的方法是为了迷惑破解者。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsAssemblyObfuscation">
      <summary>
            程序集是否混淆加密
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StaticCoreVersion">
      <summary>
            返回内核版本号的静态属性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StaticCoreVersion2">
      <summary>
            返回内核版本号的静态属性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateRaw">
      <summary>
            无任何初始化内容的创建对象
            </summary>
      <returns>文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateWithBaseDOM">
      <summary>
            创建对象,该对象具有最基本的DOM结构。
            </summary>
      <returns>文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.#ctor(System.Int32)">
      <summary>
            内部的创建对象
            </summary>
      <param name="v">创建模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetBodyTextSimilarity(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            将当前文档和指定文档进行比较，获得正文的纯文本内容的相似度，返回一个从0到1的浮点数
            </summary>
      <param name="doc">文档对象</param>
      <returns>相似度。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsFreeMode">
      <summary>
            是否处于免费模式。免费模式只能打印，不能编辑和显示
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            将ARGB的颜色值转换为整数
            </summary>
      <param name="a">A</param>
      <param name="r">R</param>
      <param name="g">G</param>
      <param name="b">B</param>
      <returns>颜色整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.COMDisposeImage(System.Int32)">
      <summary>
            销毁指定的图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerGetCOMImage(System.Int32)">
      <summary>
            获得COM中的图片对象
            </summary>
      <param name="imageIndex">图片编号</param>
      <returns>图片对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateContentSearchReplacer">
      <summary>
            创建一个文档内容查找替换器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsParentOrSupParent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断指定元素是否是本元素的父节点或者更高层次的父节点。
            </summary>
      <param name="parentElement">要判断的元素</param>
      <returns>是否是父节点或者更高级的父节点</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetLastAppErrorInfoOnce">
      <summary>
            获得最后一次应用程序错误信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HandleAppError(DCSoft.Writer.Dom.XTextElement,System.Exception,System.String)">
      <summary>
            处理应用程序错误
            </summary>
      <param name="element">
      </param>
      <param name="ext">
      </param>
      <param name="eventName">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ResetOutlineNodes">
      <summary>
            重新设置OutlineNodes属性值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetReadyState(DCSoft.Writer.Dom.DomReadyStates)">
      <summary>
            设置文档加载状态
            </summary>
      <param name="state">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ApplyRemoveLastParagraphFlagWhenInsertDocument(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            应用BehaviorOptions.RemoveLastParagraphFlagWhenInsertDocument选项。DCWriter内部使用。
            </summary>
      <param name="list">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetClientID(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得在客户端的元素ID
            </summary>
      <param name="element">文档元素对象</param>
      <returns>客户端编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.StaticGlobalClearInnerBuffer">
      <summary>
            清空内部的缓存的数据。本方法会比较耗时，不能频繁的调用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GlobalClearInnerBuffer">
      <summary>
            清空内部的缓存的数据。本方法会比较耗时，不能频繁的调用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearBufferForSimpleTextMode">
      <summary>
            清空一些缓存的数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearBuffer">
      <summary>
            清空一些缓存的数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InvalidateFixDomState">
      <summary>
            文档状态无效，需要重新刷新。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.FixDomStateWithCheckInvalidateFlag">
      <summary>
            带检查状态的修正文档对象模型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.FixDomState">
      <summary>
            修正文档对象模型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RuntimeAdornText">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDebugText">
      <summary>
            获得调试信息文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementAttribute(System.String,System.String)">
      <summary>
            获得指定文档元素的属性
            </summary>
      <param name="id">元素编号</param>
      <param name="attributeName">属性名称</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementAttribute(System.String,System.String,System.String)">
      <summary>
            设置文档元素的属性值
            </summary>
      <param name="id">元素编号</param>
      <param name="attributeName">属性名</param>
      <param name="attributeValue">属性值</param>
      <returns>操作是否完成</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加子元素
            </summary>
      <param name="element">新添加的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AllocElementID(System.String,DCSoft.Writer.Dom.XTextElement)">
      <summary>
             分配新的文档元素编号
            </summary>
      <param name="prefix">编号前缀</param>
      <param name="element">元素对象</param>
      <returns>是否修改了元素ID属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AllocElementID(System.String,System.Type)">
      <summary>
            分配新的文档元素编号
            </summary>
      <param name="prefix">编号前缀</param>
      <param name="elementType">文档元素类型</param>
      <returns>分配的编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CacheOptions">
      <summary>
            缓存文档选项，和ClearCachedOptions()成对使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ClearCachedOptions">
      <summary>
            清除缓存的文档选项,和CacheOptions()成对使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentViewOptions">
      <summary>
            获得视图文档选项
            </summary>
      <returns>视图文档选项</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentBehaviorOptions">
      <summary>
            获得文档行为配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentEditOptions">
      <summary>
            获得编辑配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentSecurityOptions">
      <summary>
            获得安全配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetDocumentOptions">
      <summary>
            获得文档选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UpdateElementState">
      <summary>
            更新文档元素的状态，包括OwernDocument、Parent、Content、PrivateContent属性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsCurrentContentElement(DCSoft.Writer.Dom.XTextDocumentContentElement)">
      <summary>
            快速判断是否为当前文档区域
            </summary>
      <param name="dce">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SelectContentByStartEndIndex(System.Int32,System.Int32)">
      <summary>
            根据起始编号和终止编号来选择内容
            </summary>
      <param name="startContentIndex">选择区域起始编号</param>
      <param name="endContentIndex">选择区域终止编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SelectContentByStartIndexLength(System.Int32,System.Int32)">
      <summary>
            根据起始编号和终止编号来选择内容
            </summary>
      <param name="startContentIndex">选择区域起始编号</param>
      <param name="length">选择区域长度</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SelectContentByStartEndElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            选择内容
            </summary>
      <param name="startElement">选择区域起始元素</param>
      <param name="endElement">选择区域终止元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCurrentElement(System.Type)">
      <summary>
            获得指定类型的插入点所在的文档对象
            </summary>
      <param name="elementType">指定的文档元素对象</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCurrentElement(System.Type,System.Boolean)">
      <summary>
            获得指定类型的插入点所在的文档对象
            </summary>
      <param name="elementType">指定的文档元素对象</param>
      <param name="includeThis">是否对当前元素本身进行类型判断</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCurrentElementByTypeName(System.String)">
      <summary>
            获得当前插入点所在的指定类型的文档元素对象。
            </summary>
      <param name="typeName">指定的文档元素类型的名称</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCurrentRangeWithSameStyle">
      <summary>
            获得当前元素具有相同样式的区域
            </summary>
      <returns>获得的区域</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateRange(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.CompareHandler)">
      <summary>
            获得指定元素前后相邻的元素对象，这些元素的某些方面相同。
            </summary>
      <param name="element">指定的元素</param>
      <param name="callBack">比较对象的委托</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象,对文档对象该参数无意义</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetJumpPrintInfo(System.Single)">
      <summary>
            根据视图坐标来获得续打信息对象
            </summary>
      <param name="pos">指定的文档位置</param>
      <returns>获得的续打信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetJumpPrintInfoWithouFixPosition(System.Single)">
      <summary>
            根据视图坐标来获得续打信息对象,不修正位置
            </summary>
      <param name="pos">指定的文档位置</param>
      <returns>获得的续打信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AllocObjectID">
      <summary>
            分配文档中使用的对象编号
            </summary>
      <returns>分配的新的编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnLinkClick(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            暂不支持
            </summary>
      <param name="sender">
      </param>
      <param name="link">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            处理ContentChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnContentChanging(DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            处理ContentChanging事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnControlGotFocus">
      <summary>
            处理编辑器控件获得焦点事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnControlLostFocus">
      <summary>
            处理编辑控件失去焦点事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnControlLostFocusExt">
      <summary>
            处理编辑控件失去焦点事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateGraphics">
      <summary>
            创建画布对象
            </summary>
      <returns>创建的画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateInnerPaintEventArgs(DCSoft.Drawing.DCGraphics,DCSoft.Writer.Dom.InnerDocumentRenderMode)">
      <summary>
            创建绘图事件参数
            </summary>
      <param name="g">画布对象</param>
      <param name="renderMode">呈现方式</param>
      <returns>创建的参数对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateDCGraphics">
      <summary>
            创建画布对象
            </summary>
      <returns>创建的画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerCreateDCGraphics">
      <summary>
            内部的创建画布对象
            </summary>
      <returns>创建的画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerClearDOM">
      <summary>
            内置的清空DOM结构
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Clear">
      <summary>
            清空文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BeginLogUndo">
      <summary>
            开始记录撤销操作信息
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AddUndo(DCSoft.Writer.Undo.IUndoable)">
      <summary>
            添加一个撤销动作对象到列表中
            </summary>
      <param name="undo">要添加的撤销动作对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.EndLogUndo">
      <summary>
            完成记录撤销操作信息
            </summary>
      <remarks>操作是否保存了新的撤销信息</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CancelLogUndo">
      <summary>
            撤销记录的重做/撤销操作信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateTextElements(System.String,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            创建多个文本元素
            </summary>
      <param name="strText">文本内容</param>
      <param name="paragraphStyle">段落样式</param>
      <param name="textStyle">文本样式</param>
      <returns>创建的字符元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateTextElementsExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean)">
      <summary>
            创建多个文本元素
            </summary>
      <param name="strText">文本内容</param>
      <param name="paragraphStyle">段落样式</param>
      <param name="textStyle">文本样式</param>
      <param name="enablePermission">是否启用授权标记</param>
      <returns>创建的字符元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            导入文档元素
            </summary>
      <param name="element">要导入的文档元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            导入文档元素
            </summary>
      <param name="elements">要导入的文档元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportElementsSpceifyImportPermssion(DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            导入文档元素
            </summary>
      <param name="elements">要导入的文档元素</param>
      <param name="preserveUserTrack">是否保留用户修改痕迹</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ImportElementsSpceifyImportPermssion(DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Boolean)">
      <summary>
            导入文档元素
            </summary>
      <param name="elements">要导入的文档元素</param>
      <param name="preserveUserTrack">是否保留用户修改痕迹</param>
      <param name="enablePermission">是否启用授权痕迹管理</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InsertElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            在当前位置插入一个元素
            </summary>
      <param name="element">要插入的元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InsertElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            插入多个元素到文档中
            </summary>
      <param name="newElements">要插入的新元素</param>
      <param name="updateContent">是否更新文档视图</param>
      <returns>插入的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InsertElements(DCSoft.Writer.Dom.InsertElementsArgs)">
      <summary>
            插入多个元素到文档中
            </summary>
      <param name="args3">参数</param>
      <returns>插入的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.MarkPermission(DCSoft.Writer.Dom.XTextElementList,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            对元素设置逻辑删除标记
            </summary>
      <param name="elements">元素对象</param>
      <param name="startIndex">开始删除的起始位置</param>
      <param name="length">要删除的区域的长度</param>
      <param name="addCreatorIndex">添加模式 true:添加创建者标记, false:添加删除者标记</param>
      <param name="logUndo">是否记录撤销信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.FixElementIDForInsertElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            DCWriter内部使用。修正文档元素编号
            </summary>
      <param name="elements">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ReplaceElements(DCSoft.Writer.Dom.ReplaceElementsArgs)">
      <summary>
            替换元素
            </summary>
      <param name="args">参数对象</param>
      <returns>操作的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateParagraphs(System.Collections.IEnumerable)">
      <summary>
            创建段落对象
            </summary>
      <param name="elements">元素对象列表</param>
      <returns>创建的段落对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.AllowInvalidateForUILayoutOrView">
      <summary>
            判断文档当前状态是否可以声明文档元素排版位置无效或者视图无效.只有存在编辑器控件而且不处于锁定状态才可以声明无效。
            </summary>
      <returns>是否允许声明无效</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.UIStartEditContent">
      <summary>
            是否可以启用UI层的编辑内容操作
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ApplyRepeatedImage">
      <summary>
            应用重用图片数据
            </summary>
      <returns>操作影响的图片元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteTableSubfield(System.Boolean)">
      <summary>
            执行文档中的表格的分栏操作
            </summary>
      <param name="updateView">是否更新视图</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCheckBoxElementsSpecifyName(System.String)">
      <summary>
            获得文档中所有指定名称的复选框元素列表
            </summary>
      <param name="name">指定的名称</param>
      <returns>元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetRadioBoxElementsSpecifyName(System.String)">
      <summary>
            获得文档中所有指定名称的单选框元素列表
            </summary>
      <param name="name">指定的名称</param>
      <returns>元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetTableCell(System.String,System.Int32,System.Int32)">
      <summary>
            获得指定表格中的指定单元格
            </summary>
      <param name="tableID">编号编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <returns>获得的单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetTableCellText(System.String,System.Int32,System.Int32)">
      <summary>
            获得表格单元格的文本内容
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <returns>单元格文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetTableCellText(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            设置单元格文本值
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <param name="newText">新文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetInputFieldInnerValue(System.String)">
      <summary>
            获得指定编号的输入域的InnerValue属性值。
            </summary>
      <param name="id">输入域编号</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetInputFieldInnerValue(System.String,System.String)">
      <summary>
            设置指定编号的输入域的InnerValue属性值。
            </summary>
      <param name="id">输入域编号</param>
      <param name="newValue">新的属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetSubDoumentContentXmlByID(System.String)">
      <summary>
            获得指定编号的子文档内容XML字符串
            </summary>
      <param name="id">子文档元素编号</param>
      <returns>获得的XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementXMLFragmentByID(System.String)">
      <summary>
            返回包含数据的XML片段,本函数返回的XML字符串可以作为编辑器控件或文档对象的函数CreateElementByXMLFragment()的参数。
            </summary>
      <param name="id">元素编号</param>
      <returns>生成的XML片段字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementOuterXmlByID(System.String)">
      <summary>
            返回元素内置内容的文档XML字符串
            </summary>
      <param name="id">文档元素对象</param>
      <returns>获得的XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementInnerXmlByID(System.String)">
      <summary>
            返回元素外置内容的文档XML字符串
            </summary>
      <param name="id">元素编号</param>
      <returns>XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementTextByID(System.String)">
      <summary>
            获得指定编号的元素文本值
            </summary>
      <param name="id">元素编号</param>
      <returns>文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementText(System.String)">
      <summary>
            获得指定编号的元素文本值
            </summary>
      <param name="id">元素编号</param>
      <returns>文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetInputFieldSelectedIndexs(System.String,System.String)">
      <summary>
            设置输入域选择多个下拉项目
            </summary>
      <param name="id">输入域编号</param>
      <param name="indexs">从0开始的下拉项目序号，各个序号之间用逗号分开</param>
      <returns>操作是否修改文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementTextByID(System.String,System.String)">
      <summary>
            设置文档元素文档的文本值
            </summary>
      <param name="id">文档元素编号</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementText(System.String,System.String)">
      <summary>
            设置文档元素文档的文本值
            </summary>
      <param name="id">文档元素编号</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementText(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            设置文档元素文本值
            </summary>
      <param name="element">文档元素对象</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementImageContent(System.String,System.Drawing.Image)">
      <summary>
            设置指定图片元素的图片内容
            </summary>
      <param name="id">编号</param>
      <param name="img">图片内容</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementVisible(System.String)">
      <summary>
            获得指定文档元素的可见性
            </summary>
      <param name="id">文档元素编号</param>
      <returns>可见性</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementVisible(System.String,System.Boolean)">
      <summary>
            设置文档元素的可见性
            </summary>
      <param name="id">文档元素编号</param>
      <param name="visible">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementByDOMIndex(System.String)">
      <summary>
            根据DOM编号获得文档元素对象
            </summary>
      <param name="index">DOM编号</param>
      <returns>找到的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementsById(System.String)">
      <summary>
            获得文档中所有指定编号的元素对象列表,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementById(System.String)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementChecked(System.String)">
      <summary>
            获得单复选框文档元素的勾选状态,如果没找到元素则返回false。
            </summary>
      <param name="id">文档元素编号</param>
      <returns>元素的勾选状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.SetElementChecked(System.String,System.Boolean)">
      <summary>
            设置单/复选框的勾选状态
            </summary>
      <param name="id">文档元素编号</param>
      <param name="newChecked">新的勾选状态</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetInputFieldElementById(System.String)">
      <summary>
            获得指定ID号的输入域对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">ID号</param>
      <returns>找到的输入域元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerGetTargetElementUseBuffer_ClearBuffer">
      <summary>
            DCWriter内部使用。清空InnerGetTargetElementUseBuffer()内部使用的缓存区。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerGetTargetElementUseBuffer(System.String)">
      <summary>
            DCWriter内部使用。带缓存的获取目标元素。
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetNextElementByTypeName(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementTypeName">要查找的元素的类型的名称</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetNextElement(DCSoft.Writer.Dom.XTextElement,System.Type)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementType">要查找的元素的类型</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetNextElement(DCSoft.Writer.Dom.XTextElement,System.Type,System.Boolean)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementType">要查找的元素的类型</param>
      <param name="includeHiddenElement">查找的时候是否查找隐藏的文档元素对象</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetCheckedValueList(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            获得文档中所有的勾选的复选框元素的值
            </summary>
      <param name="spliter">各个项目之间的分隔字符串</param>
      <param name="includeCheckbox">是否包含复选框</param>
      <param name="includeRadio">是否包含单选框</param>
      <param name="includeElementID">是否包含元素ID号</param>
      <param name="includeElementName">是否包含元素Name属性值</param>
      <returns>获得的字符串</returns>
      <remarks>
            例如调用 document.GetCheckedValueList(";",true,true,true,true) 返回类似字符串
            “xbzw;胸部正位;gpzw;骨盆正位;fbww;腹部卧位”
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InvalidateLayout(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            声明指定的元素的布局发生改变
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetViewBoundsForInvalidateElementView(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得声明元素对象视图无效时的视图坐标中的矩形区域
            </summary>
      <param name="element">文档元素对象</param>
      <returns>矩形区域</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InvalidateElementView(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            声明指定元素的视图无效,需要重新绘制
            </summary>
      <param name="element">文本元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InvalidateView(System.Drawing.RectangleF)">
      <summary>
            声明指定区域的视图无效,需要重新绘制
            </summary>
      <param name="bounds">指定的区域</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InvalidateView(DCSoft.Writer.Dom.XTextRange)">
      <summary>
            声明指定区域的文档视图无效,需要重新绘制
            </summary>
      <param name="range">指定的区域</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateElementByXMLFragment(System.String)">
      <summary>
            根据一个XML字符串创建一个文档元素对象
            </summary>
      <param name="xml">XML字符串</param>
      <returns>创建的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateComment">
      <summary>
            创建一个文档批注对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateDocumentFragment">
      <summary>
            创建一个新的文档
            </summary>
      <returns>创建的文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateElement(System.String)">
      <summary>
            创建一个文档元素
            </summary>
      <param name="typeName">指定的文档元素类型名称</param>
      <returns>创建的文档元素</returns>
      <remarks>
            例如 doc.CreateElement("XTextInputFieldElement");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateElementByType(System.Type)">
      <summary>
            创建一个文档元素
            </summary>
      <param name="elementType">指定的文档元素类型</param>
      <returns>创建的文档元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateImage">
      <summary>
            创建一个图片元素对象
            </summary>
      <returns>创建的图片元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateTextNode(System.String)">
      <summary>
            创建一个字符串节点对象
            </summary>
      <param name="txt">文本内容</param>
      <returns>生成的字符串元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateChars(System.String,System.Int32)">
      <summary>
            根据一个字符串创建若干个字符文本元素
            </summary>
      <param name="strText">字符串</param>
      <param name="styleIndex">指定的样式编号</param>
      <returns>创建的字符文本元素组成的列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateChar(System.Char,System.Int32)">
      <summary>
            创建字符元素
            </summary>
      <param name="v">字符值</param>
      <param name="styleIndex">样式编号</param>
      <returns>创建的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerComments">
      <summary>
            内部生成的文档批注对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasInnerComments">
      <summary>
            判断是否存在内部文档批注
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.DomHasComments(System.Boolean)">
      <summary>
            判断是否存在文档批注DOM数据
            </summary>
      <param name="checkItemVisible">判断是否是可见的批注</param>
      <returns>是否存在批注</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CheckFlagEvents">
      <summary>
            检查一些标志状态量，然后触发一些事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CompressUserHistories">
      <summary>
            压缩用户修改历史记录列表
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetParagraphEOFElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素所在段落的样式
            </summary>
      <param name="element">元素对象</param>
      <returns>段落样式对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ExecuteAllValueExpression">
      <summary>
            执行所有的数值表达式
            </summary>
      <returns>修改的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CanExecuteExpression(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素能否执行表达式
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ResetExpressionExecuter">
      <summary>
            重启表达式执行引擎
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetExpressionResolverErrorMessage(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素相关的表达式执行错误信息
            </summary>
      <param name="element">文档元素对象</param>
      <returns>获得的错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetHighlightInfos">
      <summary>
            方法无效
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsHover(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断鼠标是否悬停在对象上面
            </summary>
      <param name="element">文档元素</param>
      <returns>是否悬停</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.OnHoverElementChanged(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            鼠标悬停元素改变事件处理
            </summary>
      <param name="oldHoverElement">
      </param>
      <param name="newHoverElement">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理用户界面事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.BubbleHandleElementEvent(DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            进行冒泡式事件处理
            </summary>
      <param name="elements">要处理事件的元素列表</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.GetElementAt(System.Single,System.Single,System.Boolean)">
      <summary>
            获得文档视图中指定位置处的文档元素对象
            </summary>
      <param name="x">指定的X坐标</param>
      <param name="y">指定的Y坐标</param>
      <param name="strict">是否严格匹配</param>
      <returns>获得的文档元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsSelected(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            元素是否处于选择状态
            </summary>
      <param name="element">元素对象</param>
      <returns>是否选择</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsVisible(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            元素是否可见
            </summary>
      <param name="element">元素对象</param>
      <returns>是否可见</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.IsVisible(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            元素是否可见
            </summary>
      <param name="element">元素对象</param>
      <returns>是否可见</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PixelToDocumentUnit(System.Single)">
      <summary>
            将像素长度转换为文档长度
            </summary>
      <param name="Value">像素长度</param>
      <returns>文档长度</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PixelToDocumentUnit(System.Drawing.Size)">
      <summary>
            将像素大小转换为文档大小
            </summary>
      <param name="Value">像素大小</param>
      <returns>文档大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ToPixel(System.Single)">
      <summary>
            将文档长度转换为像素长度
            </summary>
      <param name="Value">文档长度</param>
      <returns>像素长度</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ToPixelFloat(System.Single)">
      <summary>
            将文档长度转换为浮点数的像素长度
            </summary>
      <param name="Value">文档长度</param>
      <returns>像素长度</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ToPixel(System.Drawing.Size)">
      <summary>
            将文档大小转换为像素大小
            </summary>
      <param name="Value">文档大小</param>
      <returns>像素大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PrintingViewMode">
      <summary>
            运行时的文档处于打印视图模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.HasLocalConfig">
      <summary>
            判断是否存在本地系统配置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateLongBmp(System.Boolean)">
      <summary>
            创建长的文档内容位图对象,一个图片中包含了文档中所有的内容。
            </summary>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreateLongBmp(System.Boolean,System.Single)">
      <summary>
            创建长的文档内容位图对象,一个图片中包含了文档中所有的内容。
            </summary>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <param name="zoomRate">缩放比率</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreatePageBmp(System.Int32,System.Boolean)">
      <summary>
            创建页面位图对象
            </summary>
      <param name="pageIndex">指定的页号</param>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CreatePageBmp(System.Int32,System.Boolean,System.Single)">
      <summary>
            创建页面位图对象
            </summary>
      <param name="pageIndex">指定的页号</param>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <param name="zoomRate">缩放比率</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerCreatePageBmp(System.Int32,System.Boolean,System.Single,DCSoft.Writer.Dom.DocumentRenderMode)">
      <summary>
            创建页面位图对象
            </summary>
      <param name="pageIndex">指定的页号</param>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <param name="zoomRate">缩放比率</param>
      <param name="renderMode">指定的呈现模式</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.PreparePageConentVersions">
      <summary>
            准备文档的页面内容版本信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RefreshPageContentVersions">
      <summary>
            刷新文档的页面内容版本信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.InnerDrawPageFrameContent(System.Object)">
      <summary>
            内部的绘制页面框架内容
            </summary>
      <param name="args2">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.RuntimeShowHeaderBottomLine">
      <summary>
            运行时是否显示页眉下面的横线
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.ToString">
      <summary>
            返回表示内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CloneWithoutBodyElements">
      <summary>
            复制对象，复制页眉页脚内容，但不复制正文内容。
            </summary>
      <returns>复制结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.LogHorizLinePosition(System.Single)">
      <summary>
            记录水平线的位置,包括水平边框线和下边框线。
            </summary>
      <param name="pos">位置</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocument.CanDrawGridLine(System.Single,System.Single)">
      <summary>
            判断是否绘制网格线
            </summary>
      <param name="pos">网格线位置</param>
      <param name="step">网格步长</param>
      <returns>是否绘制</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.WebClientHtmlText">
      <summary>
            WEB客户端输出的HTML代码,仅仅用于WEB开发.这里的HTML代码会原封不动的输出到WEB前端。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ScriptText">
      <summary>
            VBA脚本代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ScriptLanguage">
      <summary>
            脚本语言类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.JavaScriptTextForWebClient">
      <summary>
            WEB客户端使用的JAVASCRIPT脚本代码。仅仅在WEB版编辑器中才有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ScriptEngine">
      <summary>
            脚本引擎
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ExecutingScriptMethod">
      <summary>
            是否正在执行脚本代码。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BinaryBuffer">
      <summary>
            二进制缓存区
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PrivateDataSources">
      <summary>
            私有数据源对象，对DCSoft.FW提供支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DataProvider">
      <summary>
            数据操作功能提供者对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.FormValuesXml">
      <summary>
            获得XML格式的表单数据字典
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.FormValues">
      <summary>
            获得文档中的表单数据字典
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LocalExcludeKeywords">
      <summary>
            文档本地设置的排除内容的关键字列表
            </summary>
      <remarks>本属性值是保存在文档文件中的</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastAlertInfos">
      <summary>
            最后一次操作产生的系统警告信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastElementsForWriteDataSource">
      <summary>
            最后一次调用WriteDataSource()函数进行的填充数据源操作涉及的文档元素对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DisabledParameterNames">
      <summary>
            被禁止的数据源的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SpecifyDataSourceTree">
      <summary>
            用户指定的树状数据源对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SerializeParameterValue">
      <summary>
            序列化参数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Parameters">
      <summary>
            参数列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InnerParameters">
      <summary>
            内置参数列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ServerObject">
      <summary>
            服务器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.TransparentEncryptErrorMessage">
      <summary>
            透明加密相关的错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DataEncryptProviderName">
      <summary>
            数据加密器提供者名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ReadonlyForTransparentDecrypt">
      <summary>
            文档由于内容加密而只读了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DetectRepeatImageForSave">
      <summary>
            保存文档时是否检测重复的图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BaseUrl">
      <summary>
            基础URL路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InnerFlag">
      <summary>
            内部使用的一些标志。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.XMLTextUnFormatted">
      <summary>
            获得未格式化的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.XMLText">
      <summary>
            文档所有的XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RTFText">
      <summary>
            文档的所有的RTF文本代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HtmlText">
      <summary>
            文档的所有的Html文本代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Text">
      <summary>
            文档所有的文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.EnableAfterLoad">
      <summary>
            允许执行AfterLoad()功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsLoadingDocument">
      <summary>
            是否正在加载文档
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LoadedTime">
      <summary>
            加载文档内容时的时刻
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RunAtWebServer">
      <summary>
            运行在WEB服务器端
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.WebClientCurrentElement">
      <summary>
            Web客户端中的当前输入域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BodyGridLineOffset">
      <summary>
            文档正文网格线绘制时的偏移量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HasHeaderStyleTableRow">
      <summary>
            文档中是否存在表格标题行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageViewMode">
      <summary>
            页面视图方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SpecifyPageLinePosition">
      <summary>
            指定的分页线的位置,仅供DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LayoutVersion">
      <summary>
            内容排版版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.StaticIsRegistered">
      <summary>
            判断软件是否被注册了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsRegistered">
      <summary>
            判断软件是否被注册了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RegisterCode">
      <summary>
            注册码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ContentProtectedInfos">
      <summary>
            内部使用：当前受保护的文档元素信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.UserHistories">
      <summary>
            用户历史记录列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentUser">
      <summary>
            当前用户信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RuntimeStyle">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Style">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.StyleIndex">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DefaultFontSize">
      <summary>
            默认字体大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DefaultFont">
      <summary>
            默认字体
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ContentStyles">
      <summary>
            文档样式容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InternalCurrentStyle">
      <summary>
            当前文档样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentStyleInfo">
      <summary>
            编辑器中当前样式信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DefaultStyle">
      <summary>
            默认的文档样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.NullDateTime">
      <summary>
            表示空的时间日期值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PublishDate">
      <summary>
            内核程序发布日期时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocInstanceIndex">
      <summary>
            文档实例编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LogElementRenderResult">
      <summary>
            是否记录元素呈现结果信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.StatusTextForWebClient">
      <summary>
            在WEB客户端中展示的状态栏文本。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ContentBuilder">
      <summary>
            内容创建器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsTryCathForRaiseEvent">
      <summary>
            是否用TRY-CATCH模式触发事件
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.OutlineNodes">
      <summary>
            文档大纲层次的根节点列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentOutlineNode">
      <summary>
            当前文档大纲结构节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ReadyState">
      <summary>
            文档加载状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalOffsetX">
      <summary>
            文档全局性的横向偏移量,只在绘图中产生效果，不影响排版。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalOffsetY">
      <summary>
            文档全局性的纵向偏移量,只在绘图中产生效果，不影响排版。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BodyLayoutOffset">
      <summary>
            文档正文布局对于文档中的偏移量，不包含GlobalOffsetX/GlobalOffsetY的加成。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DomImageList">
      <summary>
            DOM使用的图标列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RepeatedImages">
      <summary>
            重复引用的图片对象,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ControlOptionsForDebug">
      <summary>
            为调试模式而存放的编辑器控件配置信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SaveDocumentOptionsToFile">
      <summary>
            保存文档选项设置到文件中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocumentOptionsToSaveFile">
      <summary>
            保存到文件中的文档选项对象.当SaveDocumentOptionsToFile==true时该属性值才有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.TypedElements">
      <summary>
            DCWriter内部使用，强类型的元素列表查询结果缓存区
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.MotherTemplate">
      <summary>
            文档母版信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument._ElementType">
      <summary>
            元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastPrintResult">
      <summary>
            最后一次打印的结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageContentVersions">
      <summary>
            页面内容版本号信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastSearchStartPosition">
      <summary>
            上一次开始搜索的起始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BoundsSelection">
      <summary>
            区域选择信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CopySource">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.OwnerCell">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocumentContentElement">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ContentElement">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.OwnerLine">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.OwnerParagraphEOF">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PreviousElement">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ViewIndex">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ColumnIndex">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ElementIndex">
      <summary>
            成员无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalJavaScriptReferences">
      <summary>
            全局性的JavaScript文件的引用路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalJavaScript">
      <summary>
            全局性的JavaScript脚本代码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SpecialTag">
      <summary>
            特殊的附加数据,这种数据能保存在复制粘贴过程中生成的临时XML文档，当不包含在其保存的XML文档。
            </summary>
      <remarks>
            这是一种特殊的附加数据,可用于复制粘贴操作时的额外处理,由于复制粘贴操作中
            被复制的文档内容会创建一个小的文档复制品然后进行XML序列化,此时该值也会
            随着被包含进去,粘贴时就会跟着还原出来,此时可用于额外控制.
            例如，若设置本标记为病历号，则可以通过这个属性来实现不同病历之间数据不能复制粘贴的功能。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocumentContentVersion">
      <summary>
            内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentEditorVersionString">
      <summary>
            当前编辑器组件版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentEditorVersion">
      <summary>
            当前编辑器组件版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.EditorVersionString">
      <summary>
            编辑器版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ContentSourceType">
      <summary>
            文档内容来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Options">
      <summary>
            文档相关的配置项目,该对象不参与二进制和XML序列化.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Info">
      <summary>
            文档相关信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Title">
      <summary>
            文档标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.RuntimeTitle">
      <summary>
            运行时标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.OwnerDocument">
      <summary>
            对象所属文档就是自己
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Parent">
      <summary>
            文档对象没有父节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.AppHost">
      <summary>
            应用程序宿主
            </summary>
      <remarks>
            本属性首先使用文档对象自己的宿主对象，若没有则使用文档对象绑定的编
            辑器控件的宿主对象，若没有则使用默认宿主对象。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocumentControler">
      <summary>
            文档控制器
            </summary>
      <remarks>
            本属性内部首先使用其绑定的编辑器控件的控制器，若没有使用
            文档自己的控制器，若没有则创建一个新的控制器。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HeaderForFirstPage">
      <summary>
            首页页眉对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Header">
      <summary>
            页眉对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Body">
      <summary>
            文档正文对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.BodyText">
      <summary>
            文档正文纯文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Footer">
      <summary>
            页脚对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.FooterForFirstPage">
      <summary>
            首页页脚对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentContentElement">
      <summary>
            当前插入点所在的文档内容块对象，它是Header,Body或Footer中的某个。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HasSelection">
      <summary>
            文档中是否有内容被选择
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentContentPartyStyle">
      <summary>
            当前文档内容模块样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Content">
      <summary>
            当前内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Selection">
      <summary>
            当前被选择的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SingleSelectedElement">
      <summary>
            获得当前被选中的唯一的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentElement">
      <summary>
            当前元素。在WEB开发中本属性也是有效的。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentField">
      <summary>
            当前文本域元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentInputField">
      <summary>
            当前输入域元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentSubDocument">
      <summary>
            当前子文档节元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentSection">
      <summary>
            当前文档节元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentTableCell">
      <summary>
            当前单元格元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentTable">
      <summary>
            当前表格元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentParagraphEOF">
      <summary>
            当前段落对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.UIIsUpdating">
      <summary>
            用户界面是否锁定了，正在更新中。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CanLogUndo">
      <summary>
            当前是否可以记录撤销操作信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.UndoList">
      <summary>
            撤销信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsCurrentPositionAtFirstCell">
      <summary>
            判断当前位置是否在一个表格的第一个单元格的第一个位置，而且
            在这个表格所在的文档容器元素中，该表格前面没有任何元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsCurrentPositionAtFirstSection">
      <summary>
            判断当前位置是否在一个文档节的第一个位置，而且
            在这个文档节所在的文档容器元素中，该文档节前面没有任何元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InnerFixCurrentStyleInfoForEnter">
      <summary>
            为插入回车而修正当前样式信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastNewElements">
      <summary>
            最后一次执行的操作而在文档中新增的元素列表，本属性值可以清除掉。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ReplaceElements_CurrentContainer">
      <summary>
            当前执行元素替换的容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.EditorControl">
      <summary>
            文档绑定的控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.WriterControl">
      <summary>
            文档所属编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Sections">
      <summary>
            获得文档中文档节列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Images">
      <summary>
            获得文档中包含的图片对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Tables">
      <summary>
            文档中包含的表格对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.SubDocuments">
      <summary>
            文档中包含的子文档对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Fields">
      <summary>
            文档中包含的文本域列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InputFields">
      <summary>
            文档中包含的文本输入域列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ModifiedInputFields">
      <summary>
            文档中包含的内容被修改的文本输入域列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CheckBoxGroupInfo">
      <summary>
            复选框分组信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.InvalidateLayoutFast">
      <summary>
            快速设置排版状态无效标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CommentManager">
      <summary>
      </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Comments">
      <summary>
            文档批注记录列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.MouseCapture">
      <summary>
            鼠标捕获操作对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalEvents">
      <summary>
            全局文档事件列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CopySourceExecuter">
      <summary>
            DCWriter内部使用。内容复制执行器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LinkListExecuter">
      <summary>
            联动列表执行器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ExpressionExecuter">
      <summary>
            表达式执行器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.ElementIDForEditableDependentExecuter">
      <summary>
            元素设置到容器可编辑性的行为执行器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.TabIndexManager">
      <summary>
            Tab切换操作管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HighlightManager">
      <summary>
            文档视图中高亮度显示区域管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.HoverElement">
      <summary>
            鼠标悬停的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Render">
      <summary>
            绘制文档内容的视图对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.MeasureMode">
      <summary>
            字符测量模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.States">
      <summary>
            文档状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LocalConfig">
      <summary>
            本地系统配置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.DocumentGraphicsUnit">
      <summary>
            文档坐标单位
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageSettings">
      <summary>
            页面设置信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.StdBodyWidth">
      <summary>
            标准正文宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.Pages">
      <summary>
            页面集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.LastPageIsEmpty">
      <summary>
            判断文档中最后一页是否为空白页而无需打印.DCWriter内部使用。
            </summary>
      <returns>最后一页是否为空白页</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalPages">
      <summary>
            全局页面集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageRefreshed">
      <summary>
            文档已经执行的排版和分页操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.CurrentPage">
      <summary>
            当前处理的文档页对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageIndexfix">
      <summary>
            显示的页码修正值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalPageIndex">
      <summary>
            从0开始计算的全局页码数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.PageIndex">
      <summary>
            从0开始计算的当前打印的页面序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.GlobalLastGridLineHeight">
      <summary>
            全局的最后一个内容网格线的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.EnclosingBoundsForDrawContent">
      <summary>
            最后一次绘制的所有文档内容的最小外切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.IsDrawingPageContent">
      <summary>
            正在绘制页面文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocument.AdornTextMan">
      <summary>
            扩展文本控制器 
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventExpressionFunction">
      <summary>
            执行表达式函数功能事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.DocumentContentChanged">
      <summary>
            文档内容发生改变事件,当用户修改了文档的任何内容时就会触发该事件。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.SelectionChanged">
      <summary>
            文档选择状态发生改变后的事件,包括选择区域改变或插入点位置的改变。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.SelectionChanging">
      <summary>
            文档选择状态正在发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.DocumentLoad">
      <summary>
            文档加载事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventElementValidating">
      <summary>
            文档元素内容校验事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventAfterPaintElement">
      <summary>
            元素绘制前事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventBeginPrint">
      <summary>
            开始打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventPrintQueryPageSettings">
      <summary>
            打印时查询页面设置事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventPrintPage">
      <summary>
            打印页面事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventAfterPrintPage">
      <summary>
            打印页面后事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventEndPrint">
      <summary>
            结束打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Dom.XTextDocument.EventDrawPageFrameContent">
      <summary>
            绘制页面框架事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentBodyElement">
      <summary>
            文档正文对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.LineZone.MatchMiddle(System.Single)">
      <summary>
            是否命中文档行的中央地带
            </summary>
      <param name="pos">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.LineZoneList.Match(System.Single)">
      <summary>
            二分法进行查找。
            </summary>
      <param name="pos">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.GetSectionElements">
      <summary>
            获得所有的子文档元素对象列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.GetRemainSpacingInLastPage">
      <summary>
            获得最后一页中剩余的空白高度，单位是1/300英寸。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.IsDrawGridLine(DCSoft.Writer.Dom.InnerDocumentRenderMode)">
      <summary>
            判断是否绘制网格线
            </summary>
      <param name="renderMode">呈现模式</param>
      <returns>是否绘制网格线</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.GetTextBoundsForLineNumber(DCSoft.Writer.Dom.XTextLine,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            获得绘制行号使用的边界区域
            </summary>
      <param name="line">文档行对象</param>
      <param name="args">绘图参数</param>
      <param name="isBreak">是否退出循环</param>
      <returns>文本边界区域</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.DrawLineNumber(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制行号
            </summary>
      <param name="args">绘制图形的参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.DrawBodyGridLine(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            通篇强制绘制网格线
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.GetLinesInPage(DCSoft.Printing.PrintPage)">
      <summary>
            获得指定页中包含的文档行对象集合
            </summary>
      <param name="page">文档页对象</param>
      <returns>文档行对象集合</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.GetLinesInPageIndex(System.Int32)">
      <summary>
            获得指定页中包含的文档行对象集合
            </summary>
      <param name="pageIndex">页码数，从1开始计算</param>
      <returns>文档行对象集合</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentBodyElement.ToDebugString">
      <summary>
            返回调试时显示的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentBodyElement.GridLine">
      <summary>
            返回页面设置中的网格线设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentBodyElement.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentBodyElement.PreviewString">
      <summary>
            获得预览文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentBodyElement.Sections">
      <summary>
            所有的文档节列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentBodyElement.PagePartyStyle">
      <summary>
            返回BODY样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentFooterElement">
      <summary>
            文档页脚对象
             </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentFooterElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentFooterElement.ToDebugString">
      <summary>
            返回调试时显示的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentFooterElement.PreviewString">
      <summary>
            返回预览用的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentFooterElement.PagePartyStyle">
      <summary>
            返回Footer
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentFooterForFirstPageElement">
      <summary>
            文档页脚对象
             </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentFooterForFirstPageElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentFooterForFirstPageElement.ToDebugString">
      <summary>
            返回调试时显示的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentFooterForFirstPageElement.PreviewString">
      <summary>
            返回预览用的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentFooterForFirstPageElement.PagePartyStyle">
      <summary>
            返回Footer
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentHeaderElement">
      <summary>
            文档页眉对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderElement.FixElements">
      <summary>
            修正元素内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderElement.ToDebugString">
      <summary>
            返回调试时显示的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentHeaderElement.PreviewString">
      <summary>
            返回预览文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentHeaderElement.PagePartyStyle">
      <summary>
            返回Header
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement">
      <summary>
            文档页眉对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement.FixElements">
      <summary>
            修正元素内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement.ToDebugString">
      <summary>
            返回调试时显示的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement.PreviewString">
      <summary>
            返回预览文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentHeaderForFirstPageElement.PagePartyStyle">
      <summary>
            返回Header
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentList">
      <summary>
            文档对象列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象并添加一个文档对象
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.SavePDF(System.IO.Stream)">
      <summary>
            保存到PDF文档中
            </summary>
      <param name="stream">文件流对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.SaveImagePDF(System.Single,System.IO.Stream)">
      <summary>
            保存到PDF文档中
            </summary>
      <param name="zoomRate">缩放比率</param>
      <param name="stream">文件流对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.PrintDocument(System.Boolean,System.Int32)">
      <summary>
            打印文档
            </summary>
      <param name="Prompt">是否显示打印机选择对话框</param>
      <param name="SpecialPageIndex">从0开始计算的要打印的指定序号的文档页,若该参数超出范围则打印文档的所有页</param>
      <returns>是否进行了打印</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.GetItem(System.Int32)">
      <summary>
            获得对象
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.MegeAddToLastDocument(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            追加内容到本列表的最后一个文档对象
            </summary>
      <param name="document">文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentList.ComSetItem(System.Int32,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.Attributes">
      <summary>
            额外的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.CurrentDocumentIndex">
      <summary>
            当前文档编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.FirstDocument">
      <summary>
            第一个文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.LastDocument">
      <summary>
            最后一个文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.AllPages">
      <summary>
            所有文档对象的文档页集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentList.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextElement">
      <summary>
            文档元素基础类型
            </summary>
      <remarks>
            本类型是文本文档对象模型的最基础的类型,任何其他的文本文档对象类型都是从该类型
            派生的,本类型定义了所有文本文档对象所需要的通用程序,并定义了一些常用例程.
            编制 袁永福 2012-1-12
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextElement.WriteTextArgs">
      <summary>
            输出文本的方法参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,System.Boolean,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="vIncludeOuterText">是否输出周边的标记文本</param>
      <param name="vIncludeHiddenText">是否输出隐藏的文本</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.Append(System.String)">
      <summary>
            添加文本内容
            </summary>
      <param name="txt">文本内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.Append(System.Char)">
      <summary>
            添加文本内容
            </summary>
      <param name="txt">文本内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.AppendLine(System.String)">
      <summary>
            添加文本内容并新增行
            </summary>
      <param name="txt">文本内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.AppendLine">
      <summary>
            添加新行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.ToString">
      <summary>
            获得输出的文本内容
            </summary>
      <returns>文本内容</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.WriteTextArgs.Length">
      <summary>
            文本长度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._ContentIndex">
      <summary>
            元素在Header/Body/Footer.Content列表中的序号。
            </summary>
      <remarks>
            当文档包含大量的元素时,XTextContent中包含了大量的元素,此时它的 IndexOf 函数执行
            缓慢,此处用该属性来预先设置到元素在 XTextContent中的序号,以此来代替或加速 IndexOf 函数
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._PrivateContentIndex">
      <summary>
            元素在所属的XTextContentElement.PrivateContent列表中的序号。
            </summary>
      <remarks>
            当文档包含大量的元素时,XTextContent中包含了大量的元素,此时它的 IndexOf 函数执行
            缓慢,此处用该属性来预先设置到元素在 PrivateContent中的序号,以此来代替或加速 IndexOf 函数
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Parent">
      <summary>
            父对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._OwnerLine">
      <summary>
            对象所在的文本行对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._RuntimeStyle">
      <summary>
            运行时使用的样式对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Style">
      <summary>
            当前样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._SizeInvalid">
      <summary>
            元素大小无效标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._ViewInvalid">
      <summary>
            元素视图无效标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Left">
      <summary>
            对象左端位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Top">
      <summary>
            对象顶端位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElement._WidthFix">
      <summary>
            对象宽度修正值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateLayoutInfo">
      <summary>
            创建保存文档元素排版信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SaveLayoutInfo(System.Collections.Generic.List{DCSoft.Writer.Dom.ElementLayoutInfo})">
      <summary>
            保存文档元素排版信息
            </summary>
      <param name="list">信息列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeDefaultCursor">
      <summary>
            获得运行时的鼠标光标对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ElementDefaultCursor">
      <summary>
            文档元素默认鼠标光标对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InitDomState(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextDocument,System.Int32)">
      <summary>
            初始化DOM状态
            </summary>
      <param name="parent">父元素对象</param>
      <param name="doc">文档对象</param>
      <param name="styleIndex">样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetIsNewInputContent(System.Boolean)">
      <summary>
            设置文档元素的IsNewInputContent状态。
            </summary>
      <param name="v">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeZOrderStyle">
      <summary>
            运行时的Z方向位置类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.IsInCollapsedSection">
      <summary>
            DCWriter内部使用。元素是否在一个收缩的文档节中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetRuntimeForeColor(System.Drawing.Color)">
      <summary>
            获得运行时使用的前景色
            </summary>
      <param name="c">前景色</param>
      <returns>运行时使用的前景色</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.HasScriptText(System.Boolean)">
      <summary>
            判断是否存在脚本文本
            </summary>
      <param name="deelpy">是否深入判断子孙节点</param>
      <returns>是否具有脚本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetRuntimePropertyExpressions">
      <summary>
            获得运行时用的成员表达式列表对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SupportElementViewHandle">
      <summary>
            是否支持文档视图小把柄对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateElementViewHandle">
      <summary>
            创建文档元素视图小把柄对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.AppendUserHistoryInfoText(System.Text.StringBuilder,DCSoft.Writer.Security.UserHistoryInfo,System.Boolean)">
      <summary>
            追加历史操作记录文本信息
            </summary>
      <param name="str">文本对象</param>
      <param name="info">历史记录对象</param>
      <param name="forCreator">是否为创建者</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateToolTipForUserHistory(System.String)">
      <summary>
            为历史操作记录文本而创建提示文本对象
            </summary>
      <param name="text">文本内容</param>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetToolTipInfo">
      <summary>
            获得提示文本信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeAdornText">
      <summary>
            扩展标记文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeScriptItems">
      <summary>
            返回运行时使用的脚本信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeSelectable">
      <summary>
            能否被选中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ExtSetPropertyValue(System.String,System.String)">
      <summary>
            扩展的设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="strValue">字符串形式的属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ExtGetPropertyValue(System.String)">
      <summary>
            扩展的获得属性值
            </summary>
      <param name="name">属性名</param>
      <returns>字符串格式的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetAttribute(System.String)">
      <summary>
            获得指定名称的属性值 
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.HasAttribute(System.String)">
      <summary>
            判断是否存在指定名称的属性
            </summary>
      <param name="name">属性名</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.DispalyTypeName">
      <summary>
            获得供显示的类型名称
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetValueEditor">
      <summary>
            获得文档元素数值编辑器
            </summary>
      <returns>获得的数值编辑器</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ResetWebClientIDCounter">
      <summary>
            内部使用。重置WebClientID累计器。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WebClientID">
      <summary>
            元素在WEB客户端的编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.IsEmptyWebClientID(System.String)">
      <summary>
            是否为空白的客户端编号。
            </summary>
      <param name="id">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetClientID">
      <summary>
            DCWriter内部使用。元素在客户端的编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ShadowElement">
      <summary>
            影子文档元素。
            </summary>
      <remarks>某些元素具有影子元素，当修改和删除本元素等价于修改和删除影子元素</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerCreateDCGraphics">
      <summary>
            创建画布对象
            </summary>
      <returns>画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ElementOwnerDocument">
      <summary>
            快速的获得对象所属文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDocumentViewOptions">
      <summary>
            获得视图文档选项
            </summary>
      <returns>视图文档选项</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDocumentBehaviorOptions">
      <summary>
            获得文档行为配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDocumentEditOptions">
      <summary>
            获得编辑配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDocumentSecurityOptions">
      <summary>
            获得安全配置选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDocumentOptions">
      <summary>
            获得文档选项
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerSetOwnerDocumentParentRaw(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            内部的直接设置文档和父对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="parent">父对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerSetOwnerDocumentParentRaw2(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            内部的直接设置文档和父对象
            </summary>
      <param name="srcElement">来源文档元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetXMLFragment">
      <summary>
            返回包含数据的XML片段,本函数返回的XML字符串可以作为编辑器控件或文档对象的函数CreateElementByXMLFragment()的参数。
            </summary>
      <returns>生成的XML片段字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.BelongToDocumentDom(DCSoft.Writer.Dom.XTextDocument,System.Boolean)">
      <summary>
            判断元素是否挂在指定文档的DOM结构中
            </summary>
      <param name="document">文档对象</param>
      <param name="checkLogicDelete">检查逻辑删除标记</param>
      <returns>是否挂在DOM结构中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.FixDomState">
      <summary>
            修正DOM结构信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.PrivateContentIndex">
      <summary>
            元素在所属的XTextContentElement.PrivateContent列表中的序号。
            </summary>
      <remarks>
            当文档包含大量的元素时,XTextContent中包含了大量的元素,此时它的 IndexOf 函数执行
            缓慢,此处用该属性来预先设置到元素在 PrivateContent中的序号,以此来代替或加速 IndexOf 函数
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RuntimeLayoutable">
      <summary>
            元素占据排版位置，能参与文档内容排版。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.Select">
      <summary>
            设置元素为选中状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.IsVisibleInHtml(DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter)">
      <summary>
            元素是否在HTML文档中可见
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorSetVisible(System.Boolean)">
      <summary>
            设置容器元素的可见性
            </summary>
      <param name="visible">新的可见性</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            设置容器元素的可见性
            </summary>
      <param name="visible">新的可见性</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="fastMode">是否启用快速模式，当使用快速模式时，
            只更新DOM结构，不更新用户界面视图</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerIsLogicDeletedFast">
      <summary>
            内部的快速判断是否是逻辑删除的内容。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ChangeCurrentCreator(System.Boolean)">
      <summary>
            将元素的创建者转移到当前用户名下
            </summary>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.HasSameParent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            文档元素是否具有相同的父元素
            </summary>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetParentRaw(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            内部的直接设置元素父节点对象
            </summary>
      <param name="c">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetParentAndDocumentRaw(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            内部的直接设置元素父节点及所属文档元素
            </summary>
      <param name="c">父元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.IsParentOrSupParent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断指定元素是否是本元素的父节点或者更高层次的父节点。
            </summary>
      <param name="parentElement">要判断的元素</param>
      <returns>是否是父节点或者更高级的父节点</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetOwnerLine(DCSoft.Writer.Dom.XTextLine)">
      <summary>
            设置元素所在的文档行对象
            </summary>
      <param name="line">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RightLayoutElement">
      <summary>
            获得排版的右边的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorSetStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            设置文档元素样式
            </summary>
      <param name="style">文档样式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.BeginSetStyle">
      <summary>
            开始设置文档元素样式
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EndSetStyle">
      <summary>
            结束设置文档元素样式
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EndSetStyleWithLogUndo">
      <summary>
            结束设置文档元素样式
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerCommitStyleDeeply">
      <summary>
            DCWriter内部使用。内置的提交样式信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CommitStyle(System.Boolean)">
      <summary>
            提交当前编辑的样式信息
            </summary>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否改变了元素状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ResetRuntimeStyle">
      <summary>
            重置RuntimeStyle属性值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnStyleChanged">
      <summary>
            元素样式发生改变事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InvalidateView">
      <summary>
            声明元素的视图无效,需要重新绘制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InvalidateDocumentLayoutFast">
      <summary>
            快速的声明文档排版状态无效。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InvalidateHighlightInfo">
      <summary>
            声明元素的高亮度显示信息无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.SetPositionForLineLayout(System.Single,System.Single)">
      <summary>
            为文档行排版而设置元素位置
            </summary>
      <param name="newLeft">新的左端位置</param>
      <param name="newTop">新的顶端位置</param>
      <returns>是否修改了位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateAbsBounds(System.Single,System.Single)">
      <summary>
            创建绝对坐标的对象边界
            </summary>
      <param name="parentAbsLeft">
      </param>
      <param name="parentAbsTop">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetAbsLeft">
      <summary>
            对象在文档中的绝对坐标位置，是AbsLeft的一个为了混淆的封装。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetAbsTop">
      <summary>
            对象在文档中的绝对坐标位置，是AbsTop的一个为了混淆的封装。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetAbsBounds">
      <summary>
            获得绝对边界，是AbsBounds的一个为了混淆的封装。
            </summary>
      <returns>数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetOwnerParent(System.Type,System.Boolean)">
      <summary>
            沿着DOM树逐级向上查找指定类型的父容器
            </summary>
      <param name="ParentType">父容器类型</param>
      <param name="includeThis">查找时是否包含元素本身</param>
      <returns>找到的父容器对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetOwnerParent2``1(System.Boolean)">
      <summary>
            沿着DOM树逐级向上查找指定类型的父容器
            </summary>
      <param name="ParentType">父容器类型</param>
      <param name="includeThis">查找时是否包含元素本身</param>
      <returns>找到的父容器对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetParentByType``1(System.Boolean)">
      <summary>
            沿着DOM树逐级向上查找指定类型的父容器
            </summary>
      <param name="includeThis">查找时是否包含元素本身</param>
      <returns>找到的父容器对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetParentList">
      <summary>
            获得所有的上层元素列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.UpdateContentVersion">
      <summary>
            修改元素内容版本号，这会导致所有父级元素的ContentVersion的值的改变。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorRefreshView">
      <summary>
            单独的更新元素状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorRefreshViewExt(System.Boolean)">
      <summary>
            单独的更新元素状态
            </summary>
      <param name="fastMode">快速模式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorRefreshView_Enum(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            为刷新视图而进行遍历
            </summary>
      <param name="eventSender">
      </param>
      <param name="args3">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>
            设置元素大小
            </summary>
      <param name="width">新的元素宽度</param>
      <param name="height">新的元素高度</param>
      <param name="updateView">操作是否更新视图</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.UpdateView(System.Boolean)">
      <summary>
            更新视图
            </summary>
      <param name="changeDocument">是否修改了文档内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.dispatchEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            发送事件
            </summary>
      <param name="args">
      </param>
      <seealso cref="!:https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/dispatchEvent" />
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档用户界面事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发获得输入焦点事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发失去输入焦点事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetDOMIndex">
      <summary>
            获得文档元素的内部DOM编号。该编号可以作为XTextDocument.GetElementByDOMIndex()的参数。
            </summary>
      <returns>DOM编号字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ThisRaiseJQueryEvent(System.String,System.Object,System.Boolean)">
      <summary>
            触发文档元素在JQuery中绑定的事件
            </summary>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="autoUpdateView">自动更新视图</param>
      <returns>是否执行了脚本事件处理代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseEnter(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理鼠标进入事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseLeave(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理鼠标离开事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseDown(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标按键按下事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseMove(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标移动事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseUp(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标按键松开事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标单击事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnMouseDblClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标双击事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnKeyDown(DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理键盘按键按下事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnKeyPress(DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理键盘按键按下事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.OnKeyUp(DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            处理键盘按键松开事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深入复制子元素</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ToString">
      <summary>
            输出元素包含的文本数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ToPlaintString">
      <summary>
            输出纯文本数据
            </summary>
      <returns>纯文本数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.ToDebugString">
      <summary>
            输出调试用的文本数据
            </summary>
      <returns>文本数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制文档元素对象
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制文档元素内容
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetHighlightInfos">
      <summary>
            高亮度信息对象列表
            </summary>
      <returns>获得的列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.CreateContentImage">
      <summary>
            创建包含元素内容的图片对象
            </summary>
      <returns>图片对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.PrepareSerialize(System.String)">
      <summary>
            准备执行序列化操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.AfterSerialize">
      <summary>
            执行序列化之后的操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            文档加载后的处理
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteState(DCSoft.Writer.Dom.StateBinaryWriter)">
      <summary>
            输出一些状态信息
            </summary>
      <param name="writer">书写器</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.WriteText(DCSoft.Writer.Dom.XTextElement.WriteTextArgs)">
      <summary>
            输出纯文本内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.GetText(DCSoft.Writer.Dom.GetTextArgs)">
      <summary>
            获得文档元素的文本内容
            </summary>
      <param name="args">参数</param>
      <returns>文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.InnerGetText(DCSoft.Writer.Dom.GetTextArgs)">
      <summary>
            获得文档元素的文本内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElement.FixInputFormulaValue(System.String)">
      <summary>
            修复输入的表达式的值
            </summary>
      <param name="txt">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.IsNewInputContent">
      <summary>
            新输入的内容
            </summary>
      <remarks>
            用户在用户界面上新输入的内容，这个状态不保存。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.IsRightToLeft">
      <summary>
            DCWriter内部使用。是否是从右到左排版的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ElementInstanceIndex">
      <summary>
            元素实例编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Attributes">
      <summary>
            自定义属性列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.TypeName">
      <summary>
            类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.DomDisplayName">
      <summary>
            元素在DOM树中的显示名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement._ElementType">
      <summary>
            元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Modified">
      <summary>
            内容是否修改标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.InnerID">
      <summary>
            文档元素内部编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ID">
      <summary>
            对象编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerDocument">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.WriterControl">
      <summary>
            文档元素所在的编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.InnerViewControl">
      <summary>
            获得内部文档视图控件
            </summary>
      <returns>视图控件对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.InnerText">
      <summary>
            元素内容的文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OuterText">
      <summary>
            元素内容和元素本身的文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.InnerXML">
      <summary>
            返回元素内置内容的文档XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.InnerXMLWithoutTrack">
      <summary>
            返回元素内置内容的文档XML字符串,而且不包含任何用户痕迹信息。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OuterXML">
      <summary>
            返回元素内置内容的文档XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OuterXMLWithoutTrack">
      <summary>
            返回元素内置内容的文档XML字符串,而且不包含任何用户痕迹信息。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.DocumentContentElement">
      <summary>
            元素所属的文档级内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerPagePartyStyle">
      <summary>
            元素所属的页面区域类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ContentElement">
      <summary>
            元素所属的内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerCell">
      <summary>
            获得该元素所在的表格单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerTable">
      <summary>
            获得该元素所在的表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerSection">
      <summary>
            获得该元素所在的文档节对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ViewIndex">
      <summary>
            本属性已过期，请采用ContentIndex属性。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ContentIndex">
      <summary>
            元素在Header/Body/Footer.Content列表中的序号。
            </summary>
      <remarks>
            当文档包含大量的元素时,XTextContent中包含了大量的元素,此时它的 IndexOf 函数执行
            缓慢,此处用该属性来预先设置到元素在 XTextContent中的序号,以此来代替或加速 IndexOf 函数
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LayoutIndex">
      <summary>
            排版序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.RuntimeVisible">
      <summary>
            运行时元素是否显示
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Visible">
      <summary>
             设计时元素是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.CreatorPermessionLevel">
      <summary>
            创建者权限许可等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.DeleterPermissionLevel">
      <summary>
            逻辑删除者权限许可等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.IsLogicDeleted">
      <summary>
            元素是否是逻辑删除的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Parent">
      <summary>
            父对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ElementIndex">
      <summary>
            元素在父节点的子节点列表中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerLine">
      <summary>
            对象所在的文本行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ColumnIndex">
      <summary>
            对象在文本行中的从1开始的列号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerPageIndex">
      <summary>
            获得一个从0开始计算的当前元素所在的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerLastPageIndex">
      <summary>
            获得一个从0开始计算的元素下边缘所能到达的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.HasSelection">
      <summary>
            判断是否本元素或者子孙元素处于选择状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.RuntimeStyle">
      <summary>
            绘制文档内容使用的样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Style">
      <summary>
            文档显示样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.StyleIndex">
      <summary>
            使用的样式编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Elements">
      <summary>
            子对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.FirstContentElementInPublicContent">
      <summary>
            元素中第一个显示在文档正文内容中的元素 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LastContentElementInPublicContent">
      <summary>
            元素中最后一个显示在文档正文内容中的元素 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.FirstContentElement">
      <summary>
            元素中第一个显示在文档内容中的元素 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LastContentElement">
      <summary>
            元素中最后一个显示在文档内容中的元素 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.SizeInvalid">
      <summary>
            元素大小无效标记
            </summary>
      <remarks>若设置该属性,则元素的大小发生改变,系统需要从该元素
            开始重新进行文档排版和分页</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ViewInvalid">
      <summary>
            元素视图无效标记
            </summary>
      <remarks>若设置该属性,则元素的显示样式无效,系统需要重新
            绘制该元素</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Left">
      <summary>
            对象左端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Top">
      <summary>
            对象顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LayoutWidth">
      <summary>
            文档内容布局时使用的宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LayoutHeight">
      <summary>
            文档内容布局时使用的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.PixelWidth">
      <summary>
            像素单位的对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.PixelHeight">
      <summary>
            像素单位的对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ViewWidth">
      <summary>
            在视图中的显示宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ClientWidth">
      <summary>
            对象客户区的宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.PixelClientHeigth">
      <summary>
            像素单位的客户端高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.PixelClientWidth">
      <summary>
            像素单位的客户端宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ClientHeight">
      <summary>
            对象客户区的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Size">
      <summary>
            对象大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.EditorSize">
      <summary>
            专为编辑器提供的对象大小属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Right">
      <summary>
            对象右边缘位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Bottom">
      <summary>
            对象底端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.WidthFix">
      <summary>
            对象宽度修正值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.LeftInOwnerPage">
      <summary>
            文档元素在文档页中的距离页面纸张左上角的水平距离。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.TopInOwnerPage">
      <summary>
            文档元素在文档页中的距离页面纸张左上角的垂直距离。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Bounds">
      <summary>
            对象边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.AbsLeft">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.AbsTop">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.AbsPosition">
      <summary>
            元素在文档视图中的绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.AbsBounds">
      <summary>
            绝对边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.AbsClientBounds">
      <summary>
            客户区的绝对边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ViewBounds">
      <summary>
            文档元素在视图中占据的边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.OwnerParagraphEOF">
      <summary>
            对象所属段落符号元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.PreviousElement">
      <summary>
            获得同一层次中的上一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.NextElement">
      <summary>
            获得元素的同一层次的下一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.ContentVersion">
      <summary>
            元素内容版本号，当元素内容发生任何改变时，该属性值都会改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Focused">
      <summary>
            判断元素是否获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Text">
      <summary>
            表示对象内容的纯文本数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.FormulaValue">
      <summary>
            表达式数值内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElement.Events">
      <summary>
            元素事件列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextElementList">
      <summary>
            元素对象列表
            </summary>
      <remarks>
            本列表专门用于放置若干个文本文档元素对象
            编制 袁永福 2006-11-13
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InnerSearchStringArgs.CheckForLogicDeleted(System.Int32)">
      <summary>
            为逻辑删除而进行检查是否参与判断
            </summary>
      <param name="styleIndex">文档样式编号</param>
      <returns>是否参与判断</returns>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElementList.NullList">
      <summary>
            表示空的列表对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElementList.IsElementsSplited">
      <summary>
            列表已经被拆分标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextElementList._OwnerElement">
      <summary>
            列表所属容器元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.HasContentForSave(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            对容器元素来说是否为有内容而需要存储。
            </summary>
      <param name="list">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.#ctor">
      <summary>
            初始化对象 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.#ctor(System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="capacity">指定的元素个数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Enumerate(DCSoft.Writer.Dom.ElementEnumerateEventHandler,System.Boolean,System.Boolean)">
      <summary>
            遍历子孙元素
            </summary>
      <param name="handler">遍历过程的委托对象</param>
      <param name="deeply">是否深入子孙节点递归遍历</param>
      <param name="includeCharAndParagraphFlag">是否处理字符和段落符号元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetTheSingleParagraphFlagElement">
      <summary>
            当元素只有一个段落符号，则获得这个唯一的段落符号元素，否则返回空。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.SearchString(System.String,System.Boolean,System.Boolean,System.Int32)">
      <summary>
            搜索字符串
            </summary>
      <param name="text">要搜索的字符串值,不得为空。</param>
      <param name="ignoreCase">是否忽略大小写</param>
      <param name="includeLogicDeleted">是否包含被逻辑删除的内容</param>
      <param name="maxResultCount">最大的查找结果的个数</param>
      <returns>查找区域的首字符元素组成的列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.EqualCharValue(System.Char,System.Char,System.Boolean)">
      <summary>
            比较两个字符值
            </summary>
      <param name="v1">字符1</param>
      <param name="v2">字符2</param>
      <param name="ignoreCase">是否忽略大小写</param>
      <returns>是否相同</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.ReplaceSameTypeElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            替换掉相同类型的元素
            </summary>
      <param name="element">新增的文档元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.CreateDeeplyElementEnumer">
      <summary>
            创建深度的元素枚举器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetElementsByTypeDeeply(System.Type)">
      <summary>
            获得本文档元素容器包含的所有的指定类型的文档元素列表
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetItem(System.Int32)">
      <summary>
            获得对象
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetPropertyValues(System.String)">
      <summary>
            获得所有元素的指定名称的属性值
            </summary>
      <param name="propertyName">属性名</param>
      <returns>属性值数组</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">默认就包含的元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetElement(System.Type)">
      <summary>
            获得指定类型的文档元素对象
            </summary>
      <param name="t">文档元素类型</param>
      <returns>获得的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.MoveElement(System.Int32,System.Int32)">
      <summary>
            移动元素位置
            </summary>
      <param name="oldIndex">旧位置</param>
      <param name="newIndex">新位置</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.SwapElement(System.Int32,System.Int32)">
      <summary>
            进行元素位置的交换
            </summary>
      <param name="index1">序号1</param>
      <param name="index2">序号2</param>
      <returns>操作是否修改了列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.CheckElementIndex(System.Int32)">
      <summary>
            检查元素序号是否合法
            </summary>
      <param name="index">元素序号</param>
      <returns>是否合法</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.FixElementIndex(System.Int32)">
      <summary>
            修正元素序号以保证需要在元素列表的范围内
            </summary>
      <param name="index">原始的序号</param>
      <returns>修正后的序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.SetOwnerElement(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            设置列表所属容器元素对象
            </summary>
      <param name="owner">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.IndexOfUseContentIndex(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            使用元素的ConentIndex属性值加速的查找元素序号。
            </summary>
      <param name="element">元素对象</param>
      <returns>元素序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.IndexOfUsePrivateContentIndex(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            使用元素的PrivateConentIndex属性值加速的查找元素序号。
            </summary>
      <param name="element">元素对象</param>
      <returns>元素序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetFirstParagraphFlag(System.Int32)">
      <summary>
            从指定位置开始获得第一个段落符号元素
            </summary>
      <param name="startIndex">开始的序号</param>
      <returns>获得的段落符号元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.FastIndexOfForPrivateContent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            快速的获得对象在列表中的序号
            </summary>
      <param name="element">对象</param>
      <returns>序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.FastIndexOf(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            快速的获得对象在列表中的序号
            </summary>
      <param name="element">对象</param>
      <returns>序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetRange(System.Int32,System.Int32)">
      <summary>
            获得子列表
            </summary>
      <param name="startIndex">开始区域位置</param>
      <param name="length">长度</param>
      <returns>子列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.SafeGetRange(System.Int32,System.Int32)">
      <summary>
            获得区域中的元素
            </summary>
      <param name="startIndex">开始序号</param>
      <param name="length">长度</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InsertRange(System.Int32,System.Collections.Generic.IEnumerable{DCSoft.Writer.Dom.XTextElement})">
      <summary>
            插入多个元素
            </summary>
      <param name="index">
      </param>
      <param name="collection">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InsertRangeRaw(System.Int32,System.Collections.Generic.IEnumerable{DCSoft.Writer.Dom.XTextElement})">
      <summary>
            原生态的插入多个元素
            </summary>
      <param name="index">
      </param>
      <param name="elements">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Insert(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            插入元素
            </summary>
      <param name="index">
      </param>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Add(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            向列表添加对象
            </summary>
      <param name="element">对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Remove(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            删除元素
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.AddCheckContains(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            向列表添加对象，若已经存在该对象则不添加
            </summary>
      <param name="element">对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.AddRaw(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            直接添加元素
            </summary>
      <param name="element">元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.RemoveToFixLenght(System.Int32)">
      <summary>
            若元素个数超过指定值,则删除元素直到元素个数等于指定值
            </summary>
      <param name="length">指定的元素个数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.RemoveRange(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            删除多个元素
            </summary>
      <param name="elements">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InsertBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            在指定的元素前面插入新的元素
            </summary>
      <param name="OldElement">指定的元素</param>
      <param name="NewElement">要插入的新的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InsertAfter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            在指定的元素后面插入新的元素
            </summary>
      <param name="OldElement">指定的元素</param>
      <param name="NewElement">要插入的新的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.InsertRangeBefore(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            在指定元素前面插入多个元素
            </summary>
      <param name="OldElement">指定的元素</param>
      <param name="list">要插入的新元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetElements(System.Int32,System.Int32)">
      <summary>
            获得子列表
            </summary>
      <param name="startIndex">开始元素的序号</param>
      <param name="length">元素的个数</param>
      <returns>获得的子列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetPreElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素前面的一个元素
            </summary>
      <param name="element">元素对象</param>
      <returns>该元素的前一个元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetNextElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素后面的一个元素
            </summary>
      <param name="element">元素对象</param>
      <returns>该元素后面的一个元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Split(System.Int32)">
      <summary>
            删除元素列表中指定序号后面的元素,并将删除的元素放置到一个新的元素列表中 
            </summary>
      <param name="index">指定删除开始的序号</param>
      <returns>放置删除的元素的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.GetInnerText">
      <summary>
            获得内置的文本
            </summary>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.CloneDeeply">
      <summary>
            进行深度复制
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.EqualsElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            比较两个列表的元素清单是否一致
            </summary>
      <param name="list">元素列表</param>
      <returns>两个对象的元素清单是否一致</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.ComSetItem(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementList.ComAddItem(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.HasLineEndElement">
      <summary>
            本文本行行尾是不是行结束类型的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.OwnerElement">
      <summary>
            列表所属容器元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.FirstElement">
      <summary>
            列表中的第一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.FirstContentElement">
      <summary>
            DCWriter内部使用。元素列表中第一个显示在文档视图中的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.LastContentElement">
      <summary>
            DCWriter内部使用。元素列表中最后一个显示在文档视图中的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementList.InnerDeserializing">
      <summary>
            正在反序列化标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextFieldBorderElement">
      <summary>
            输入域边界元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement.StandardPixelWidth">
      <summary>
            边框元素的标准像素宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement._TextHeight">
      <summary>
            文本高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement._TextWidth">
      <summary>
            文本宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement._FixedWidth">
      <summary>
            是否为固定宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement.RuntimeBorderWidth">
      <summary>
            运行时的边框宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldBorderElement._ButtonImageBounds">
      <summary>
            按钮图片边界
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.#ctor(DCSoft.Writer.Dom.XTextFieldElementBase,DCSoft.Writer.Dom.BorderElementPosition)">
      <summary>
            初始化对象
            </summary>
      <param name="parent">父对象</param>
      <param name="pos">位置</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.GetButtonStyle">
      <summary>
            表单按钮样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.RuntimeBorderColor">
      <summary>
            运行时使用的边框颜色
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.RuntimeBorderColor(DCSoft.Writer.DocumentViewOptions)">
      <summary>
            运行时使用的边框颜色
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.FixWidthForEmptyField">
      <summary>
            为空白的输入域修正元素宽度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.BelongToDocumentDom(DCSoft.Writer.Dom.XTextDocument,System.Boolean)">
      <summary>
            判断元素是否挂在指定文档的DOM结构中
            </summary>
      <param name="document">文档对象</param>
      <param name="checkLogicDelete">检查逻辑删除标记</param>
      <returns>是否挂在DOM结构中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.ShadowElement">
      <summary>
            本元素的影子元素就是其所处的输入域容器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.BorderText">
      <summary>
            边框文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.StandardHeight">
      <summary>
            标准高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.CreateContentDocument(System.Boolean)">
      <summary>
            返回空
            </summary>
      <param name="includeThis">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.ToPlaintString">
      <summary>
            返回纯文本数据
            </summary>
      <returns>文本数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldBorderElement.ToString">
      <summary>
            返回表示对象的文本
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.AbsLeft">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.AbsTop">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.AbsPosition">
      <summary>
            元素在文档视图中的绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.Width">
      <summary>
            元素宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.ViewWidth">
      <summary>
            视图宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.Position">
      <summary>
            位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.OwnerField">
      <summary>
            对象所属的文档域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.OwnerDocument">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.ContentWidth">
      <summary>
            内容宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldBorderElement.Events">
      <summary>
            文档域边框元素不能处理事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextFileBlockElement">
      <summary>
            文件引用块元素
            </summary>
      <remarks>文档块元素表示在文档中嵌入一个文本标签，该标签能引用到另外一个文档，当双击标签时
            会加载其引用的外部文档并插入到当前文档区域替换掉该文本标签。</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFileBlockElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFileBlockElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFileBlockElement.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFileBlockElement.LoadFileContent(System.Boolean)">
      <summary>
            加载文件
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFileBlockElement.Resizeable">
      <summary>
            对象大小是固定的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFileBlockElement.ContentSource">
      <summary>
            文档内容来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFileBlockElement.ContentSourceValue">
      <summary>
            内容来源值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextHorizontalLineElement">
      <summary>
            水平线文档元素对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextHorizontalLineElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextHorizontalLineElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextHorizontalLineElement.LineLengthInCM">
      <summary>
            以厘米单位计算的线条长度，如果为0则填充整页宽度.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextHorizontalLineElement.LineStyle">
      <summary>
            线条样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextHorizontalLineElement.LineSize">
      <summary>
            线条高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextHorizontalLineElement.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextHorizontalLineElement.Resizeable">
      <summary>
            对象宽度是固定的
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextImageElement">
      <summary>
            图片对象
            </summary>
      <remarks>编制袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextImageElement._WidthHeightRate">
      <summary>
            对象宽度和高度的比例,若大于等于0.1则该设置有效，否则无效
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextImageElement.EventCreateShapeDocumentXmlSerializer">
      <summary>
            创建ShapeDocument类型的XML序列化器对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextImageElement._Image">
      <summary>
            内部的图像数据对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextImageElement._InnerRepeatImageIndex">
      <summary>
            内置的重复图片数据编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.RuntimeSupportValueBinding">
      <summary>
            运行时的是否支持数据源绑定功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.EditorSetEnableRepeatedImage(System.Boolean)">
      <summary>
            设置是否重复引用图片数据
            </summary>
      <param name="v">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.ApplyRepeatedImage">
      <summary>
            应用重复图片设置
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.RuntimeVAlign">
      <summary>
            运行时使用的垂直对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.RuntimeSource">
      <summary>
            运行时使用的图片来源
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.LoadImageFromImageSourceSource(System.String)">
      <summary>
            根据Source属性加载的图片数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.OnMouseDblClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标双击事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.UpdateWidthHeightRate">
      <summary>
            更新宽度高度比
            </summary>
      <returns>操作是否导致文档元素大小需要发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.UpdateAdditionShapeSize">
      <summary>
            更新附件矢量图形的大小
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.EditorSetSize(System.Single,System.Single,System.Boolean,System.Boolean)">
      <summary>
            设置元素大小
            </summary>
      <param name="width">新的元素宽度</param>
      <param name="height">新的元素高度</param>
      <param name="updateView">操作是否更新视图</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.EditorSetImageContent(System.Drawing.Image,System.Boolean,System.Boolean)">
      <summary>
            设置图片元素内容
            </summary>
      <param name="img">新的图片内容</param>
      <param name="updateView">是否更新视图</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.PrepareSerialize(System.String)">
      <summary>
            为序列化对象而做一些准备
            </summary>
      <param name="format">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.LoadImageFromBase64String(System.String,System.Boolean)">
      <summary>
            加载图片数据
            </summary>
      <param name="base64">Base64字符串</param>
      <param name="setSize">是否设置大小</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.LoadImageFromBinary(System.Byte[],System.Boolean)">
      <summary>
            加载图片数据
            </summary>
      <param name="base64">Base64字符串</param>
      <param name="setSize">是否设置大小</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.LoadImage(System.Drawing.Image,System.Boolean)">
      <summary>
            加载图片数据
            </summary>
      <param name="img">图片对象</param>
      <param name="setSize">是否设置大小</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.LoadImage(System.String,System.Boolean)">
      <summary>
            从指定的资源地址加载图片数据
            </summary>
      <param name="strUrl">图片资源地址</param>
      <param name="setSize">是否设置对象大小</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.GetToolTipInfo">
      <summary>
            获得提示文本信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.UpdateImageContent">
      <summary>
            更新内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.OnResize">
      <summary>
            文档元素大小发生改变事件处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.UpdateSize(System.Boolean)">
      <summary>
            根据图片内容更新元素的大小
            </summary>
      <param name="keepSizePossible">是否尽量保持大小不变或少变化</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.DisposePreviewImage">
      <summary>
            销毁预览图片
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.HasAdditionalShape">
      <summary>
            是否有附加图形
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.SetPageImage(System.Int32,System.Drawing.Image)">
      <summary>
            设置页码图片值
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="img">图片对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.SetPageImageByImageValue(System.Int32,DCSoft.Drawing.XImageValue)">
      <summary>
            设置页码图片值
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="img">图片对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.SetPageImageByBase64String(System.Int32,System.String)">
      <summary>
            设置页码图片值
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="base64">BASE64文本值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.SetPageImageByFileName(System.Int32,System.String)">
      <summary>
            设置页码图片值
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制图片文档内容
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.RenderAdditionShapeContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制额外的附加图形
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.CreateContentImage">
      <summary>
            创建预览用的图片
            </summary>
      <returns>创建的图片对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextImageElement.ToPlaintString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.DataBoundNode">
      <summary>
            绑定的数据源对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.DataBoundNodeValueUsed">
      <summary>
            使用了数据源节点的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ValueBinding">
      <summary>
            内容绑定对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.EnabledTransprentEncrypt">
      <summary>
            是否启用透明加密
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.WidthHeightRate">
      <summary>
            对象宽度高度比,若大于等于0.1则该设置有效，否则无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.TransparentEncryptMode">
      <summary>
            透明加密使用的加密解密算法。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.TransparentColor">
      <summary>
            图片的透明色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.EnableEditImageAdditionShape">
      <summary>
            允许用户编辑图片上的附加图形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.EnableRepeatedImage">
      <summary>
            是否启用合并图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ValueIndexOfRepeatedImage">
      <summary>
            重复引用的图片数据的数据编号,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.VAlign">
      <summary>
            垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Alt">
      <summary>
            缺少图片数据时显示的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.KeepWidthHeightRate">
      <summary>
            保持宽度、高度比例。若本属性值为true，
            则用户鼠标拖拽改变图片大小时会保持图片的宽度高度比例，
            否则用户可以随意改变图片的宽度和高度。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Source">
      <summary>
            图片来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ImageFromSource">
      <summary>
            根据Source属性加载的图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.SaveContentInFile">
      <summary>
            保存图片数据到文件中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.AdditionShapePage">
      <summary>
            扩展图形的根页面对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.AdditionShape">
      <summary>
            附加图形对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.InnerAdditionShape">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.AdditionShapeContent">
      <summary>
            额外的图形数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.AdditionShapeFixSize">
      <summary>
            额外的图形数据采用固定大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.EditorSize">
      <summary>
            设置/获得对象在设计器中的大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.CompressSaveMode">
      <summary>
            压缩保存模式,以实际大小来设置保存的数据，这会导致大图片数据的损失。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.RuntimeImage">
      <summary>
            运行时使用的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ImageByteSize">
      <summary>
            图片内容的字节长度，为估计值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Image">
      <summary>
            内部的图像数据对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ImageValue">
      <summary>
            图像对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ImageDataForWebClient">
      <summary>
            WEB客户端使用的图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.InnerRepeatImageIndex">
      <summary>
            内置的重复图片数据编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.ImageData">
      <summary>
            图像数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.PreviewImage">
      <summary>
            预览使用的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.InnerNativeImageSource">
      <summary>
            DCWriter内部使用.原始图片数据来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.InnerHasNoImage">
      <summary>
            DCWriter内部使用.原始图片数据来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.SmoothZoom">
      <summary>
            平滑缩放图像
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.CustomAdditionShapeContent">
      <summary>
            自定义的额外图形数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextImageElement.Text">
      <summary>
            表示对象内容的纯文本数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextInputFieldElement">
      <summary>
            纯文本数据输入域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElement._ExtTextValueMaps">
      <summary>
            扩展的文本和数值映射表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElement._SingleWhitespaceAsEmptyWhenLoadHtml">
      <summary>
            在加载HTML时，遇到单个空格内容则认为输入域内容为空。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElement._DisableActiveEditorOnce">
      <summary>
            只有一次的禁止激活数值编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.AddExtTextValueMap(System.String,System.String)">
      <summary>
            添加扩展的文本和数值映射
            </summary>
      <param name="text">
      </param>
      <param name="innerValue">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.ConvertToInnerValueByExtTextValueMap(System.String)">
      <summary>
            根据扩展的文本和数值的映射将文本转换为InnerValue值
            </summary>
      <param name="text">文本值</param>
      <returns>InnerValue值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.GetRuntimeEnabledTransprentEncrypt">
      <summary>
            获得运行时是否支持透明加密
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.RuntimeShowInputFieldStateTag">
      <summary>
            运行时是否显示扩展标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.ResetToDefaultValue">
      <summary>
            根据DefaultValueType的属性值重置对象内容为默认值
            </summary>
      <returns>操作是否修改了输入域内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.RuntimeAdornTextType">
      <summary>
            运行时使用的扩展标记文字类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.EditorCheckItems(System.String)">
      <summary>
            勾选多个下拉项目
            </summary>
      <param name="indexs">从0开始计算的项目序号列表，各个序号之间用逗号分隔</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.GetRuntimeTextColor(System.Drawing.Color,DCSoft.Writer.Dom.RuntimeDocumentContentStyle,System.Boolean,DCSoft.Writer.DocumentViewOptions)">
      <summary>
            获得输入域内容文本运行时使用的文本颜色
            </summary>
      <param name="txtColor">初始化文本颜色</param>
      <param name="txtStyle">文本对象样式</param>
      <param name="forPrint">是否为打印模式</param>
      <param name="dvo">文档视图设置</param>
      <returns>文本颜色值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.RuntimeAdornText">
      <summary>
            运行时使用的扩展标记文字
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.RuntimeEditorActiveMode">
      <summary>
            运行时使用的数值编辑器激活模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.EnsureHasListItemsInstance">
      <summary>
            确保下拉列表实例存在
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.RuntimeFormButtonStyle">
      <summary>
            表单按钮样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.BeginEditValue">
      <summary>
            开始编辑元素数值
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.IsFastGetRuntimeListItems">
      <summary>
            是否能快速调用GetRuntimeListItems()。
            </summary>
      <returns>能快速调用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.GetRuntimeListItems(System.String,System.Boolean,System.String)">
      <summary>
            获得运行时使用的下拉列表项目
            </summary>
      <param name="spellCode">检索用的拼音码</param>
      <returns>获得的列表对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.FocusWithoutActiveEditor">
      <summary>
            让输入域获得节点而且不激发数值编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.OnGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            输入域获得输入焦点
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            输入域失去输入焦点
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.EditorSetSelectedIndexs(System.String)">
      <summary>
            设置选中的列表项目
            </summary>
      <param name="indexs">从0开始计算的项目编号，各个编号之间用逗号分开</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.TextToValue(System.String)">
      <summary>
            将前台文本转换为后台数值
            </summary>
      <param name="text">文本</param>
      <returns>数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.ValueToText(System.String,System.Boolean)">
      <summary>
            将后台数据转换为前台文本
            </summary>
      <param name="Value">原始文本</param>
      <returns>要显示的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.UpdateInnerValue(System.Boolean)">
      <summary>
            根据对象内容更新InnerValue值。
            </summary>
      <param name="updateParent">是否更新各级父输入域的值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.OnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            处理文档内容发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EnabledTransprentEncrypt">
      <summary>
            是否启用透明加密
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EnableUserEditInnerValue">
      <summary>
            允许用户直接编辑内容而修改InnerValue值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.ShowInputFieldStateTag">
      <summary>
            是否显示扩展标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.AutoSetSpellCodeInDropdownList">
      <summary>
            在下拉列表中自动设置拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.DefaultValueType">
      <summary>
            默认值类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.AdornTextType">
      <summary>
            扩展标记文字类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.CustomAdornText">
      <summary>
            自定义的扩展标记文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EditorControlTypeName">
      <summary>
            数据编辑器控件类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.LinkListBinding">
      <summary>
            联动列表信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EnableFieldTextColor">
      <summary>
            是否启用输入域文字颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EditorActiveMode">
      <summary>
            数值编辑器激活模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.SelectedIndex">
      <summary>
            选择的项目的从0开始的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.DefaultSelectedIndexs">
      <summary>
            默认的从0开始计算的下拉列表中选择的序号。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EnableLastSelectedListItems">
      <summary>
            是否启用LastSelectedListItems功能。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.LastSelectedListItems">
      <summary>
            最后一次从下拉列表中被选择的项目列表。用户直接修改输入域的内容会设置该属性值为空。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_ListValueSeparatorChar">
      <summary>
            列表值之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_ListValueFormatString">
      <summary>
            列表数值格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_ListSource">
      <summary>
            列表内容来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_DynamicListItems">
      <summary>
            动态加载列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_MultiSelect">
      <summary>
            允许多选列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_RepulsionForGroup">
      <summary>
            列表项目分组互斥
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_MultiColumn">
      <summary>
            多列项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_GetValueOrderByTime">
      <summary>
            从弹出式列表中获得数值时进行勾选操作时间排序
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.Settings_EditStyle">
      <summary>
            输入域操作类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.FieldSettings">
      <summary>
            输入域设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.CustomValueEditorTypeName">
      <summary>
            自定义的文档元素数值编辑器的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.CustomValueEditorType">
      <summary>
            自定义的文档元素数值编辑器类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.EnableValueEditor">
      <summary>
            是否允许元素数值编辑器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.ShowFormButton">
      <summary>
            是否显示表单按钮
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.FormButtonStyle">
      <summary>
            指定的表单按钮样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.AbsBounds">
      <summary>
            绝对边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.InnerMultiSelect">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.InnerEditStyle">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.InnerItemSpliter">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElement.InnerListSourceName">
      <summary>
            DCWriter内部使用
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextLabelElement">
      <summary>
            简单文本标签元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElement.RuntimeAutoSize">
      <summary>
            运行时的是否自动设置大小
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.EnabledTransprentEncrypt">
      <summary>
            是否启用透明加密
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.AllowUserEditCurrentPageLabelText">
      <summary>
            允许用户编辑当前页标签文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.ReferencedTopicID">
      <summary>
            引用的主题编号,DCWriter内部使用.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.ContactAction">
      <summary>
            文本连接模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.AttributeNameForContactAction">
      <summary>
            执行连接动作使用的属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.LinkTextForContactAction">
      <summary>
            各个项目之间的连接字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.Alignment">
      <summary>
            内容对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.Multiline">
      <summary>
            多行文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElement.AutoSize">
      <summary>
            自动计算大小
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextLine">
      <summary>
            文本行对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine.__NewLayoutMode">
      <summary>
            使用新的排版模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._LayoutElements">
      <summary>
            按照从左到右排版顺序而排列的元素列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._OwnerDocument">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._OwnerPage">
      <summary>
            对象所在的文档页对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._InvalidateState">
      <summary>
            行状态无效标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._PaddingLeft">
      <summary>
            左内边距
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._Left">
      <summary>
            对象左端位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._Top">
      <summary>
            对象顶端位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine.LineHeighFix">
      <summary>
            行高修正量
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine.AllowDetectBlankLine">
      <summary>
            是否允许检测空白行(只有一个段落符号的行)
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._LocalElementsAsCharElement">
      <summary>
            使用一个数组来缓存元素转换为字符元素的结果
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._LocalFixedElements">
      <summary>
            使用一个数组来缓存需要修正宽度的元素数组
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextLine._SupportRightToLeft">
      <summary>
            是否支持从右到左排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.#ctor(DCSoft.Writer.Dom.XTextContentElement,System.Int32)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.HasContainsSelection">
      <summary>
            是否包含被选择区域
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.HasRightToLeft">
      <summary>
            是否存在从右到左排版的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.SetVisible(System.Boolean)">
      <summary>
            设置文档行是否可见
            </summary>
      <param name="v">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.RuntimeVerticalAlign">
      <summary>
            运行时使用的垂直对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.ResetAbsLocation">
      <summary>
            重置对象在文档视图中的绝对地址,也就是重置AbsLeft、AbsTop的状态。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.HasEmphasisMarkChar">
      <summary>
            判断是否存在着重号字符
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.UpdateContentHeight">
      <summary>
            更新行内容高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.IsEmptyLine">
      <summary>
            是否为只包含一个段落符号的空白行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.RuntimeLayoutDirection">
      <summary>
            获得布局方式,内部使用.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.RefreshState">
      <summary>
            刷新状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.IsRightToLeft">
      <summary>
            是否是从右到左排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.RefreshStateNew">
      <summary>
            刷新状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.InnerRuntimeCompressLineSpaceing">
      <summary>
            运行时的是否压缩行间距
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.FixHeightForGridLine">
      <summary>
            根据网格线设置来调整行高
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.CheckElementype(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            检查文档元素类型
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.AddFreeLayoutElementShadow(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加自由布局元素的影子元素
            </summary>
      <param name="prepareAddElement">准备添加到文档行中的元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.PopupLastElement">
      <summary>
            删除并返回最后一个元素,并保证列表中有内容
            </summary>
      <returns>返回的最后一个元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLine.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.LayoutElements">
      <summary>
            按照从左到右排版顺序而排列的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Visible">
      <summary>
            文档行是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.InnerHtmlVisible">
      <summary>
            在输出HTML中是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.OwnerDocument">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ParagraphFlagElement">
      <summary>
            文档行所在的段落的段落标记文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.OwnerContentElement">
      <summary>
            对象所属的文档区域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.OwnerPage">
      <summary>
            对象所在的文档页对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.NextLine">
      <summary>
            下一个文档行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.PreLine">
      <summary>
            上一个文档行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.LastOwnerPage">
      <summary>
            对象所在的最后一个文档页对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.GlobalIndex">
      <summary>
            在整个文档中的从1开始的行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IndexInPage">
      <summary>
            在所在文档页中的从1开始的行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IndexInParagraph">
      <summary>
            在段落中的行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.PrivateIndexInPage">
      <summary>
            所在文档页中的从1开始的私有行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.VerticalAlign">
      <summary>
            垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Align">
      <summary>
            内容的水平对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.PaddingLeft">
      <summary>
            左内边距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.PaddingRight">
      <summary>
            右内边距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Left">
      <summary>
            对象左端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AbsLeft">
      <summary>
            文本行的绝对左端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Top">
      <summary>
            对象顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.NativeTop">
      <summary>
            原始的文档行顶端位置，一般的经过排版后，文档行的Top值等于该值，
            但由于进行二次分页线位置修正后，文档行的Top可能大于NativeTop值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AbsPosition">
      <summary>
            文档行在文档视图中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AbsTop">
      <summary>
            文档行在文档视图中的绝对顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.DesignWidth">
      <summary>
            文档行的设计宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.LayoutInvalidate">
      <summary>
            内容排版状态无效标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ViewHeight">
      <summary>
            文档行的显示高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ViewWidth">
      <summary>
            视图宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.SpacingBeforeForParagraph">
      <summary>
            由于段落前间距而导致的文档行额外的上间距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.SpacingAfterForParagraph">
      <summary>
            由于段落后间距而导致的文档行额外的下间距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.SpecifyLineSpacing">
      <summary>
            指定的行间距，这是由段落的行间距设置计算所得,为0表示自动行高
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.Bottom">
      <summary>
            对象底端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AbsBottom">
      <summary>
            底端绝对坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AbsBounds">
      <summary>
            采用绝对坐标下的对象边框
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ElementsWidth">
      <summary>
            文档行中所有元素的宽度和
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ContentWidth">
      <summary>
            文档行中所有元素的内容宽度和
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ContentTopFix">
      <summary>
            内容顶端位置修正
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.ContentHeight">
      <summary>
            内容高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.MaxFontHeight">
      <summary>
            获得本行中最大字体高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IsPageBreakLine">
      <summary>
            DCWriter内部使用。判断本行是分页行（只包含一个分页符）
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.PageBreakElement">
      <summary>
            获得分页元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IsTableLine">
      <summary>
            判断本行是否为表格行（只包含一个表格元素）
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.TableElement">
      <summary>
            文档行中所包含的表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IsSectionLine">
      <summary>
            DCWriter内部使用。判断本行是否为文档节行（只包含一个文档节元素）
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IsExpendedSectionLine">
      <summary>
            判断本行是否包含了一个内容展开的文档节行。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.SectionElement">
      <summary>
            DCWriter内部使用。文档行中所包含的文档节对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.IsCharOrParagraphFlagOnly">
      <summary>
            是否只包含字符和段落符号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLine.AllIsCharOrParaphFlag">
      <summary>
            内容全部都是字符或者段落符号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextLineBreakElement">
      <summary>
            换行元素
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLineBreakElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLineBreakElement.RefreshSize2(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            计算大小 
            </summary>
      <param name="PreElement">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLineBreakElement.ToString">
      <summary>
            返回对象包含的字符串数据
            </summary>
      <returns>字符串数据</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLineBreakElement.AutoGenerateFlag">
      <summary>
            自动创建的标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextLineList">
      <summary>
            文本行集合
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLineList.Replace(System.Int32,DCSoft.Writer.Dom.XTextLine)">
      <summary>
            将旧行对象替换成新的行对象
            </summary>
      <param name="index">序号</param>
      <param name="NewLine">新的行对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLineList.GetPreLine(DCSoft.Writer.Dom.XTextLine)">
      <summary>
            获得前面一行
            </summary>
      <param name="line">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLineList.FirstLine">
      <summary>
            第一个文本行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLineList.LastLine">
      <summary>
            最后一个文本行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLineList.Height">
      <summary>
            所有文本行的高度和
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextPageBreakElement">
      <summary>
            分页元素
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextPageBreakElement.Handled">
      <summary>
            是否处理过了分页
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageBreakElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageBreakElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制分页符内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextPageInfoElement">
      <summary>
            页码文档元素对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.OnMouseDblClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            处理鼠标双击事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.ToDisplayText(System.Int32)">
      <summary>
            将数值转换为要显示的文本
            </summary>
      <param name="number">从1开始计算的页码</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.ToPlaintString">
      <summary>
            返回纯文本数据
            </summary>
      <returns>文本数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextPageInfoElement.ToDebugString">
      <summary>
            获得调试信息字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.SpecifyPageIndexs">
      <summary>
            指定页码值信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.AutoHeight">
      <summary>
            自动高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.Resizeable">
      <summary>
            用户能否改变对象大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.PageIndexFix">
      <summary>
            页码数的修正量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.ChangePageIndexMidway">
      <summary>
            允许中途修改页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.ValueType">
      <summary>
            内容样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.DisplayFormat">
      <summary>
            显示样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.FormatString">
      <summary>
            格式化字符串，比如“[%PageIndex%] / [%NumOfPages%]”。
            </summary>
      <remarks>
            这是一个可选的字符串设置，使用“[%%]”来包含页码数值，区域之外的文本原样输出。
            支持[%PageIndex%]表示从1开始计算的页码，[%NumOfPages%]表示总页数。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.SpecifyPageIndexTextList">
      <summary>
            指定的页码编号文本列表，比如“1,2,3,8,9,10,11”，各个编号之间用半角逗号分开。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextPageInfoElement.ContentText">
      <summary>
            内容文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextParagraphFlagElement">
      <summary>
            段落结束标记对象,XWriterLib内部使用
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextParagraphFlagElement.IsRootLevelElement">
      <summary>
            是否为根元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextParagraphFlagElement._ViewWidth">
      <summary>
            视图宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextParagraphFlagElement.intListIndex">
      <summary>
            段落在段落列表中的序号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextParagraphFlagElement.ParentParagraph">
      <summary>
            上级段落元素对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.Focus">
      <summary>
            设置对象获得焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.IsLastElementInContentElement">
      <summary>
            判断是否是文档容器中最后一个段落元素 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            段落标记元素不能设置可见性
            </summary>
      <param name="visible">
      </param>
      <param name="logUndo">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.ListStyle">
      <summary>
            段落列表样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.ChildParagraphs">
      <summary>
            DCWriter内部使用。子段落元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.HasChildParagraphs">
      <summary>
            是否存在子段落元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深入复制子元素</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制段落符号
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算段落符号元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.ToString">
      <summary>
            返回对象包含的字符串数据
            </summary>
      <returns>字符串数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.ToPlaintString">
      <summary>
            返回纯文本
            </summary>
      <returns>文本内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.GetParagraphElements">
      <summary>
            获得整个段落中的文档元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphFlagElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.TopicID">
      <summary>
            主题编号,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ListItemElement">
      <summary>
            DCWriter内部使用。段落列表元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.FirstContentElementInPublicContent">
      <summary>
            在公共内容中的第一个元素就是自己
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.RuntimeLayoutDirection">
      <summary>
            运行时的内容排版方向
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.OwnerPageIndex">
      <summary>
            对象所属页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ViewWidth">
      <summary>
            视图宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ParagraphFirstContentElement">
      <summary>
            段落中第一个文档内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ListIndex">
      <summary>
            段落在段落列表中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.MaxListIndex">
      <summary>
            列表的最大值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.OutlineLevel">
      <summary>
            段落大纲层次
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ResetListIndexFlag">
      <summary>
            重新设置列表序号标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.AutoCreate">
      <summary>
            本对象是否是自动产生的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.FirstContentElement">
      <summary>
            所在段落的第一个内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.Text">
      <summary>
            表示对象内容的纯文本数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.ParagraphText">
      <summary>
            整个段落的文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphFlagElement.Visible">
      <summary>
            元素是否可见。本属性不参与XML序列化。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextRadioBoxElement">
      <summary>
            复选框控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRadioBoxElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRadioBoxElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRadioBoxElement.OnContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发内容已经改变事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRadioBoxElement.GroupName">
      <summary>
            组名,已作废
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRadioBoxElement.ControlStyle">
      <summary>
            控件类型为单选框类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSectionElement">
      <summary>
            文档节元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSectionElement.SectionViewHandle">
      <summary>
            文档节展开收缩控制小把柄信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSectionElement.CollapseGraphicsInfo">
      <summary>
            收缩时的图形信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.CollapseGraphicsInfo.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.CollapseGraphicsInfo.ForeColor">
      <summary>
            颜色
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSectionElement.HandledNewPage">
      <summary>
            已经处理的强制分页标记.DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.GetRuntimeEnabledTransprentEncrypt">
      <summary>
            获得运行时是否支持透明加密
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.RuntimeEnableCollapse">
      <summary>
            运行时的是否启用收缩功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.RuntimeIsCollapsed">
      <summary>
            DCWriter内部使用。运行时的是否处于收缩状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.Select">
      <summary>
            选择文档节
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.Collapse">
      <summary>
            收缩内容
            </summary>
      <returns>操作是否导致文档视图修改</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.Expand">
      <summary>
            展开内容
            </summary>
      <returns>操作是否导致文档视图修改</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制文档节
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.UpdateHeightByContentHeight">
      <summary>
            根据内容更新元素的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.InnerExecuteLayout">
      <summary>
            执行内容排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.ParticalRefreshLines(DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs)">
      <summary>
            重新分行
            </summary>
      <param name="args">参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.FixEmbedSectionElement">
      <summary>
            当出现内嵌文档节元素时，在此进行修正，确保不出现文档节套嵌。
            </summary>
      <returns>操作是否修改了DOM结构。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSectionElement.InnerFixEmbedSectionElement(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            当出现内嵌文档节元素时，在此进行修正，确保不出现文档节套嵌。
            </summary>
      <returns>操作是否修改了DOM结构。</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.EnabledTransprentEncrypt">
      <summary>
            是否启用透明加密
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.CheckBoxGroupInfo">
      <summary>
            复选框分组信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.ContentElement">
      <summary>
            元素所属的内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.NewPage">
      <summary>
            强制分页
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.InsertEmptyPageForNewPage">
      <summary>
            强制分页时是否插入空白页
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.ExpendForDataBinding">
      <summary>
            由于数据源绑定而扩展的表格行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.ForeColorForCollapsed">
      <summary>
            收缩时的前景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.ForeColorValueForCollapsed">
      <summary>
            收缩时的前景颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.EnableCollapse">
      <summary>
            能否被收缩
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.IsCollapsed">
      <summary>
            是否处于收缩状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.AcceptTab">
      <summary>
            能否接受制表符，默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.CompressOwnerLineSpacing">
      <summary>
            压缩所在文档行的行间距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.SpecifyHeight">
      <summary>
            用户指定的高度
            </summary>
      <remarks>
            若等于0则对象自动设置高度，
            若大于0则对象高度自动设置高度而且高度不小于用户指定的高度，
            若小于0则固定设置对象的高度为用户指定的高度。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.FirstContentElementInPublicContent">
      <summary>
            第一个在文档正文中的内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.LastContentElementInPublicContent">
      <summary>
            最后一个在文档正文中的内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.FirstContentElement">
      <summary>
            第一个内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.LastContentElement">
      <summary>
            最后一个内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSectionElement.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSelection">
      <summary>
            文档区域对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSelection.SelectionState">
      <summary>
            状态对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSelection._NativeStartIndex">
      <summary>
            原始的起始位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSelection._StartIndex">
      <summary>
            实际的起始位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSelection._ContentVersion">
      <summary>
            最后一次设置状态时的文档内容版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSelection._LineEndFlag">
      <summary>
            最后一次设置状态时的文档行尾标记值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.#ctor(DCSoft.Writer.Dom.XTextDocumentContentElement)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否包含在区域中
            </summary>
      <param name="element">元素对象</param>
      <returns>是否包含在区域中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.CompletedContainsForPrint(DCSoft.Writer.Dom.XTextTableCellElement)">
      <summary>
            判断是否完全包含单元格
            </summary>
      <param name="cell">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.ContainsForPrint(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否包含在区域中
            </summary>
      <param name="element">元素对象</param>
      <returns>是否包含在区域中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.NeedRefresh(System.Int32,System.Int32)">
      <summary>
            判断是否需要刷新选择区域状态
            </summary>
      <param name="newStartIndex">新的选择区域位置</param>
      <param name="newLength">新的选择区域长度</param>
      <returns>是否需要刷新选择区域状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.UpdateState">
      <summary>
            更新状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.Refresh(System.Int32,System.Int32)">
      <summary>
            更新文内容选择状态
            </summary>
      <param name="startIndex">选择区域的起始位置</param>
      <param name="length">选择区域的包含文档内容元素的个数</param>
      <returns>成功的改变了选择区域状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.IsBig">
      <summary>
            被选择区域是否很大。
            </summary>
      <returns>是否很大</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.IncreaseStateVersion">
      <summary>
            增加状态版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.AllBelongToContent">
      <summary>
            判断所有的内容是否属于文档内容
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.Refresh(System.Int32,System.Int32,System.Boolean)">
      <summary>
            更新文内容选择状态
            </summary>
      <param name="startIndex">选择区域的起始位置</param>
      <param name="length">选择区域的包含文档内容元素的个数</param>
      <param name="forceRefresh">强制刷新</param>
      <returns>成功的改变了选择区域状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.GetEnumerator">
      <summary>
            获得元素枚举器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.GetContentText(System.String)">
      <summary>
            获得指定格式的表示对象内容的文本值
            </summary>
      <param name="format">文件格式</param>
      <returns>文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.GetRTFText(System.Boolean)">
      <summary>
            获得表示内容的RTF文本
            </summary>
      <param name="excludeLogicDeleted">不包含逻辑删除的内容</param>
      <returns>获得的RTF字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.SetParagraphStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            设置段落样式
            </summary>
      <param name="newStyle">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.SetElementStyle(DCSoft.Writer.Dom.DocumentContentStyle,System.Boolean,System.Boolean,System.String)">
      <summary>
            设置文档元素的样式
            </summary>
      <param name="newStyle">新样式</param>
      <param name="causeUpdateLayout">操作是否导致刷新文档布局</param>
      <param name="includeCells">包含单元格</param>
      <param name="commandName">命令名称</param>
      <returns>是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.SetElementStyle(DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Writer.Dom.XTextDocument,System.Collections.IEnumerable,System.Boolean,System.String,System.Boolean)">
      <summary>
            设置多个元素的样式
            </summary>
      <param name="newContentStyle">新样式</param>
      <param name="newCellStyle">新的单元格样式</param>
      <param name="newParagraphStyle">新的段落采用的样式</param>
      <param name="document">文档对象</param>
      <param name="elements">要设置的元素列表</param>
      <param name="causeUpdateLayout">操作是否导致刷新文档布局</param>
      <param name="commandName">调用本方法的命令名称</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.CreateDocument">
      <summary>
            根据内容创建一个新的文档对象
            </summary>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.CreateDocument(System.Boolean)">
      <summary>
            根据内容创建一个新的文档对象
            </summary>
      <param name="excludeLogicDeleted">不包含逻辑删除的内容</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.SaveState">
      <summary>
            保存状态
            </summary>
      <returns>状态信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSelection.RestoreState(System.Object)">
      <summary>
            恢复状态
            </summary>
      <param name="obj">状态对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Mode">
      <summary>
            选择的内容的模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.DocumentContent">
      <summary>
            所属的文档容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Document">
      <summary>
            所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Content">
      <summary>
            内容容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Cells">
      <summary>
            对象包含的单元格对象列表，该列表包括被合并而隐藏的单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.CellsWithoutOverried">
      <summary>
            对象包含的单元格对象列表，该列表不包含合并而隐藏的单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.ContentElements">
      <summary>
            内容元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.SelectionParagraphFlags">
      <summary>
            被选择的段落标记符号元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.FirstElement">
      <summary>
            区域中第一个文档内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.LastElement">
      <summary>
            区域中最后一个文档内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.NativeStartIndex">
      <summary>
            原始的起始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.NativeLength">
      <summary>
            原始的区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.StartIndex">
      <summary>
            实际的起始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Length">
      <summary>
            实际的区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.AbsStartIndex">
      <summary>
            区域的绝对的开始位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.AbsEndIndex">
      <summary>
            绝对的结束位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.AbsLength">
      <summary>
            选择区域的长度的绝对值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.SelectionVersion">
      <summary>
            选择状态版本号，每修改一次选择状态则该版本号就会增加1
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.StateVersion">
      <summary>
            对象状态版本号，只要修改了选择区域该版本号就会自增1。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Ranges">
      <summary>
            文档区域信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.Text">
      <summary>
            获得纯文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.XMLText">
      <summary>
            获得表示内容的XML文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.RTFText">
      <summary>
            获得表示内容的RTF文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSelection.ParagraphsEOFs">
      <summary>
            获得区间包含的段落对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSignElement">
      <summary>
            锁定内容的元素
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSignElement.HasCreateInstance">
      <summary>
            是否创建过本类型的文档元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignElement.StandardIcon">
      <summary>
            元素使用的标准图标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSignImageElement">
      <summary>
            签章图片对象
            </summary>
      <remarks>编制袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSignImageElement.MyCheckTask">
      <summary>
            检查签名状态的后台任务对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSignImageElement._WarringBmp">
      <summary>
            表示警告的图标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.ClearSign">
      <summary>
            清除电子签名相关数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.GetSignContainerElement">
      <summary>
            获得签名对应的容器元素对象
            </summary>
      <returns>容器元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.DisposeImageValue">
      <summary>
            销毁运行时的图片对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.HasImageContent">
      <summary>
            是否具有图片数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.LoadImageBase64(System.String)">
      <summary>
            加载图片
            </summary>
      <param name="base64">图片内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.LoadImageData(System.Byte[])">
      <summary>
            加载图片
            </summary>
      <param name="bs">图片内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.LoadImageBase64UseTransparentColor(System.String,System.Drawing.Color)">
      <summary>
            加载图片，并指定透明色
            </summary>
      <param name="base64">图片内容</param>
      <param name="transparentColor">指定的透明色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.LoadImageDataUseTransparentColor(System.Byte[],System.Drawing.Color)">
      <summary>
            加载图片，并指定透明色
            </summary>
      <param name="bs">图片内容</param>
      <param name="transparentColor">指定的透明色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.Resign">
      <summary>
            重新进行签名操作
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.UpdateImageContent">
      <summary>
            更新内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.CheckContainerContentVersion">
      <summary>
            检查容器元素内容版本号是否一致
            </summary>
      <returns>检查是否通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制图片文档内容
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSignImageElement.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.HasCreateInstance">
      <summary>
            系统运行后是否曾经创建过该类型的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignUserID">
      <summary>
            签名用户ID
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignUserName">
      <summary>
            签名用户名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignClientName">
      <summary>
            签名的客户端编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignMessage">
      <summary>
            签名相关的信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignErrorMessage">
      <summary>
            签名错误信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.ContainerContentVersion">
      <summary>
            容器元素内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.DefaultSignMode">
      <summary>
            默认的签名模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignProviderName">
      <summary>
            提供者的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignTime">
      <summary>
            签名时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignState">
      <summary>
            校验状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.LastVerifyResult">
      <summary>
            最后一次签名结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.SignRange">
      <summary>
            签名负责范围。默认为Parent。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.ImageValue">
      <summary>
            图像对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.DataForSelfCheck">
      <summary>
            元素自检使用的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.ImageData">
      <summary>
            图像数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSignImageElement.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextSubDocumentElement">
      <summary>
            子文档对象文档节元素类型
            </summary>
      <remarks>
            本类型在文档节(XTextSectionElement)的基础上实现了子文档操作
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextSubDocumentElement._DocuemntForMerge">
      <summary>
            为执行内容合并而使用的文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.EditorSetStateCOM(System.Boolean,System.String,System.String)">
      <summary>
            EditorSetState函数的COM包装
            </summary>
      <param name="readOnly">是否只读</param>
      <param name="backgroundColor">新的背景色</param>
      <param name="borderColor">新的边框颜色</param>
      <returns>操作是否成功</returns>
      <remarks>
            本函数是EditorSetState()函数的COM接口，可以如下方式调用
            <br /> element.EditorSetStateCOM( true, "#0000ff","#ffffff");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.EditorSetState(System.Boolean,System.Drawing.Color,System.Drawing.Color)">
      <summary>
            设置编辑状态
            </summary>
      <param name="readOnly">是否只读</param>
      <param name="backgroundColor">新的背景色</param>
      <param name="borderColor">新的边框颜色</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.SaveDocumentToFileName(System.String,System.String)">
      <summary>
            保存文档到文件中
            </summary>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.SaveDocumentToStream(System.IO.Stream,System.String)">
      <summary>
            保存文档到文件流中
            </summary>
      <param name="stream">文件流</param>
      <param name="format">文件格式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.SaveDocumentToBinary(System.String)">
      <summary>
            保存文档为二进制数据
            </summary>
      <param name="format">文件格式</param>
      <returns>保存的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.SaveDocumentToCompressBinary(System.String)">
      <summary>
            保存文档为二进制数据
            </summary>
      <param name="format">文件格式</param>
      <returns>保存的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.SaveDocumentToString(System.String)">
      <summary>
            保存文档到字符串中
            </summary>
      <param name="format">文件格式</param>
      <returns>生成的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.CreateRecordDocument">
      <summary>
            创建单个病程记录文档对象
            </summary>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextSubDocumentElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.DocumentID">
      <summary>
            子文档编号，对应生成的文档的document.ID。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.Printed">
      <summary>
            记录已经打印了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.PrintedPageIndex">
      <summary>
            打印时所在的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.PrintPositionInPage">
      <summary>
            打印时元素在页面中的顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.Locked">
      <summary>
            内容被锁定，不能再次修改,也不能设置可读写操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.DocumentInfo">
      <summary>
            文档信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.ImportUserTrack">
      <summary>
            加载文档时导入权限及用户痕迹信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.DelayLoadWhenExpand">
      <summary>
            延迟加载，只有在内容展开时才执行加载
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextSubDocumentElement.ContentLoaded">
      <summary>
            文件内容已经成功的加载了，无需再次加载了。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextTableCellElement">
      <summary>
            单元格元素
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableCellElement.IndexInSelectionCells">
      <summary>
            在选择区域中的单元格列表中的编号，用于改善大量单元格被选中的性能。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableCellElement.InnerHtmlOutputFlag">
      <summary>
            DCWriter内部使用。在HTML中是否输出的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableCellElement._RowSpan">
      <summary>
            跨行数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableCellElement._ColSpan">
      <summary>
            跨列数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableCellElement._RowIndex">
      <summary>
            运行时的行号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeTabStop">
      <summary>
            获取或设置一个运行时的值，该值指示用户能否使用 Tab 键将焦点放到该元素中上。 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeValidateStyle">
      <summary>
            获得运行时使用的校验样式设置
            </summary>
      <returns>获得的设置对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.GetRuntimeVisibleValue(DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs)">
      <summary>
            获得运行时可见性的值
            </summary>
      <returns>可见性</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            不支持该方法
            </summary>
      <param name="visible">
      </param>
      <param name="logUndo">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeAutoFixFontSizeMode">
      <summary>
            运行时使用的自动修字体大小设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.UpdateForAutoFixFontSize">
      <summary>
            为自动缩放字体而更新状态，DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.SetFontSizeZoomRateRaw(System.Single,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Boolean)">
      <summary>
            内部的设置字体缩小比率
            </summary>
      <param name="rate">缩放比率</param>
      <param name="pe">参数</param>
      <param name="refreshLayout">是否刷新排版</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.SetOverrideCell(DCSoft.Writer.Dom.XTextTableCellElement)">
      <summary>
            设置单元格被合并覆盖后的父单元格对象
            </summary>
      <param name="cell">父单元格对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.FixRowSpan(System.Int32)">
      <summary>
            修正单元格跨行数
            </summary>
      <param name="rowSpan">单元格跨行数</param>
      <returns>修正后的值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeRowSpan">
      <summary>
            运行时的跨行数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.SpanRows">
      <summary>
            本单元格跨越的表格行列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.FixColSpan(System.Int32)">
      <summary>
            修正单元格跨列数
            </summary>
      <param name="colSpan">单元格跨列数</param>
      <returns>修正后的值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.InternalSetColSpan(System.Int32)">
      <summary>
            内部调用
            </summary>
      <param name="colSpan">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.InternalSetRowSpan(System.Int32)">
      <summary>
            内部调用
            </summary>
      <param name="rowSpan">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.UpdateHeightByContentHeight">
      <summary>
            无操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeMirrorViewForCrossPage(DCSoft.Printing.PrintPage)">
      <summary>
            判断是否真的需要进行跨页视图镜像处理
            </summary>
      <param name="page">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制单元格内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.CheckMirrorViewForCrossPage(DCSoft.Printing.PrintPage,DCSoft.Common.VoidEventHandler)">
      <summary>
            检查并执行跨页镜像功能。
            </summary>
      <param name="page">页码对象</param>
      <param name="handler">绘制内容的回调函数</param>
      <returns>是否执行了该功能</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.InnerExecuteLayout">
      <summary>
            执行排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.Select">
      <summary>
            选择单元格
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.OnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            处理内容改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorSetBorderColor(DCSoft.Drawing.DCDirection,System.Boolean,System.Drawing.Color)">
      <summary>
            设置单元格的边框线颜色
            </summary>
      <param name="direction">边框方向</param>
      <param name="borderVisible">边框是否可见</param>
      <param name="color">颜色</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorSetCellWidthSingle(System.Single,System.Boolean)">
      <summary>
            单独的设置单元格的宽度
            </summary>
      <param name="newWidth">新宽度</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorSplitCellExt(System.Int32,System.Int32,System.Boolean)">
      <summary>
            编辑器中拆分单元格
            </summary>
      <param name="newRowsNum">新的横向合并行数,该行数必须是单元格跨行数的约数</param>
      <param name="newColsNum">新的纵向合并列数</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorSetCellSpan(System.Int32,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableCellElement,DCSoft.Writer.Dom.XTextElementList})">
      <summary>
            编辑器中设置单元格的合并信息
            </summary>
      <param name="newRowSpan">新的横向合并行数</param>
      <param name="newColSpan">新的纵向合并列数</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="cellContents">单元格内容</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorDelete(System.Boolean)">
      <summary>
            方法无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorClone">
      <summary>
            为编辑器的上层操作而复制表格行对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableCellElement.EditorCloneSpecifyCloneType(DCSoft.Writer.Dom.TableRowCloneType)">
      <summary>
            指定复制模式的为编辑器复制表格行对象
            </summary>
      <param name="cloneType">复制模式</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.EnabledTransprentEncrypt">
      <summary>
            是否启用透明加密
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.AcceptTab">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.TabStop">
      <summary>
            获取或设置一个值，该值指示用户能否使用 Tab 键将焦点放到该元素中上。 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeVisible">
      <summary>
            单元格可否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.BorderPrintedWhenJumpPrint">
      <summary>
            在续打的时候已经打印了边框，和XTextTableElement.PrintBothBorderWhenJumpPrint属性搭配使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.ElementIndex">
      <summary>
            元素在父节点的子节点列表中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.OwnerPageIndex">
      <summary>
            对象所属页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.StressBorder">
      <summary>
            边框是重点突出的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.AutoFixFontSizeMode">
      <summary>
            自动修改字体大小以适应内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.AutoFixFontSize">
      <summary>
            本属性已经被AutoFixFontSizeMode属性替换掉了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.RuntimeMoveFocusHotKey">
      <summary>
            实际使用的移动焦点所使用的快捷键样式.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.Title">
      <summary>
            不推荐使用，被ToolTip属性代替了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.SlantSplitLineStyle">
      <summary>
            斜分割线样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.OwnerTable">
      <summary>
            对象所属表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.OwnerRow">
      <summary>
            对象所属表格行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.AbsLeft">
      <summary>
            左端绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.AbsTop">
      <summary>
            顶端绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.LastOwnerRow">
      <summary>
            对象所属的最下面的表格行对象
            </summary>
      <remarks>当对象没有合并单元格时，该属性就返回单元格所在表格行对象，
            当纵向合并了单元格时( RowSpan 属性大于1)则该属性返回该单元格所跨过的
            表格行中最下面的一个表格行对象</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.OwnerColumn">
      <summary>
            单元格所属表格列对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.LastOwnerColumn">
      <summary>
            对象所属的最右边的表格列对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.OverrideCell">
      <summary>
            若单元格被其他单元格合并了则返回合并本单元格的单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.IsSelected">
      <summary>
            单元格是否处于选择状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.CellID">
      <summary>
            单元格在表格中的编号,这个编号是只读的，比如“A1”、“B2”、“C3”等。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.ContentVertialAlign">
      <summary>
            内容垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.IsOverrided">
      <summary>
            判断本单元格是否被其他单元格合并了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.RowSpan">
      <summary>
            跨行数
            </summary>
      <remarks>
            单元格所占据的表格行数，本属性为1则占据一行，单元格纵向没有合并单元格，若该属性值大于1则纵向合并
            单元格。本属性类似于 HTML 的 TD 元素的 ROWSPAN 属性。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.ColSpan">
      <summary>
            跨列数
            </summary>
      <remarks>
            单元格所占据的表格列数，本属性值为1则单元格占据一列，单元格横向没有合并单元格，若该属性值大于1则横向合并
            单元格。本属性类似 HTML 的 TD 元素的 COLSPAN 属性。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.RowIndex">
      <summary>
            从0开始的行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.ColIndex">
      <summary>
            从0开始的列号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.DesignRowIndex">
      <summary>
            设计时行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.DesignColIndex">
      <summary>
            设计时列号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.RightVisibleCell">
      <summary>
            获得右边的可见单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.LeftVisibleCell">
      <summary>
            获得左边的可见单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.TopVisibleCell">
      <summary>
            获得上面的可见单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.BottomVisibleCell">
      <summary>
            获得下面的可见的单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.Expression">
      <summary>
            本属性已经废止了，请使用ValueExpression属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.MirrorViewForCrossPage">
      <summary>
            跨页视图镜像
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableCellElement.CloneType">
      <summary>
            复制方式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextTableColumnElement">
      <summary>
            表格列元素
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableColumnElement.InnerCells">
      <summary>
            内置的单元格元素列表,程序内部临时使用
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.GetAttribute(System.String)">
      <summary>
            获得指定名称的属性值
            </summary>
      <param name="name">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.HasAttribute(System.String)">
      <summary>
            判断是否存在指定名称的属性
            </summary>
      <param name="name">属性名</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.BelongToDocumentDom(DCSoft.Writer.Dom.XTextDocument,System.Boolean)">
      <summary>
            判断元素是否挂在指定文档的DOM结构中
            </summary>
      <param name="document">文档对象</param>
      <param name="checkLogicDelete">检查逻辑删除标记</param>
      <returns>是否挂在DOM结构中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.ZeroWidth">
      <summary>
            宽度是否为零
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.Select">
      <summary>
            选择整个表格列
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.EditorDelete(System.Boolean)">
      <summary>
            删除表格列
            </summary>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象,对表格列该参数无作用</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableColumnElement.EditorSetWidth(System.Single,System.Boolean,System.Boolean)">
      <summary>
            在编辑器中设置表格列的宽度
            </summary>
      <param name="newWidth">新表格列宽度</param>
      <param name="logUndo">是否记录撤销操作</param>
      <param name="setNextColumnWidth">设置右边一个表格列的宽度</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.StateVersion">
      <summary>
            表示文档元素状态版本号。本属性供第三方调用。编辑器内核不使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.FormulaValue">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Visible">
      <summary>
             元素是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.ValueBinding">
      <summary>
            内容绑定对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Modified">
      <summary>
            元素内容是否改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Attributes">
      <summary>
            用户自定义属性列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Width">
      <summary>
            属性可见可序列化
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Height">
      <summary>
            作废
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Index">
      <summary>
            列号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.OwnerTable">
      <summary>
            本表格列所属的表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableColumnElement.Cells">
      <summary>
            表格列所属的单元格对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextTableElement">
      <summary>
            表格元素
            </summary>
      <remarks>
            本表格支持多行多列，支持横向和纵向合并单元格
            编写  袁永福 2012-7-12</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableElement.LayoutInvalidate">
      <summary>
            表格内容排版无效标志
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableElement.MainThreadFlag">
      <summary>
            主线程标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableElement.SpeedupLayoutByMultiThread">
      <summary>
            是否允许多线程加速排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.#ctor(System.Int32,System.Int32)">
      <summary>
            创建表格对象
            </summary>
      <param name="rowsCount">总行数</param>
      <param name="columnsCount">总列数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetContainsUnHandledPageBreak">
      <summary>
            是否包含未处理的分页标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.ResetPrintBorderStateForJumPrint">
      <summary>
            重置续打单元格边框的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.RuntimeShowCellNoneBorder">
      <summary>
            运行时的是否显示无边框的单元格边框。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.HasHeaderRow">
      <summary>
            判断是否存在标题行
            </summary>
      <returns>是否存在标题行</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetHeaderRowHeight">
      <summary>
            获得标题行的总高度
            </summary>
      <returns>总高度</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.Build(System.Int32,System.Int32,System.Single)">
      <summary>
            创建表格结构
            </summary>
      <param name="rowCount">总行数</param>
      <param name="colCount">总列数</param>
      <param name="colWidth">表格列宽度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetRow(System.Int32)">
      <summary>
            获得指定序号的表格行对象
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>表格行对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.SplitRowsByContentLines(System.Int32,System.Int32,System.Boolean)">
      <summary>
            根据单元格文档行的行数拆分表格行，使得每个单元格只有一行文本。
            </summary>
      <param name="startRowIndexBase0">从0开始的行号</param>
      <param name="rowsCount">要处理的表格行数</param>
      <param name="updateView">是否更新文档视图</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.SortRows(System.Int32,System.Int32,DCSoft.Writer.Dom.IDCTableRowComparer,System.Boolean)">
      <summary>
            表格行排序
            </summary>
      <param name="startRowIndexBase0">排序区域的从0开始计算的开始行号</param>
      <param name="rowsCount">排序区域的行数</param>
      <param name="comparer">表格行比较器</param>
      <param name="updateView">是否更新文档视图</param>
      <returns>操作是否改变了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetAllElements">
      <summary>
            获得所有的文档元素对象，包括自己
            </summary>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.Select">
      <summary>
            设置文档元素为选中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象,对表格对象该参数无意义</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.FixPageLine(DCSoft.Writer.Dom.PageLineInfo)">
      <summary>
            修正分页线位置
            </summary>
      <param name="info">分页线位置信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.NewFixPageLine(DCSoft.Writer.Dom.PageLineInfo)">
      <summary>
            修正分页线位置
            </summary>
      <param name="info">分页线位置信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.InnerDrawTable(System.Object,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            内部的绘制对象内容
            </summary>
      <param name="args_InnerDocumentPaintEventArgs">参数</param>
      <param name="drawTableBorder">是否绘制表格边框</param>
      <param name="drawCellBorder">是否绘制单元格边框</param>
      <param name="drawCellContent">是否绘制单元格内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetRangeArray(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            获得指定区域内的单元格对象
            </summary>
      <param name="rowIndex">开始行号</param>
      <param name="colIndex">开始列号</param>
      <param name="rowSpan">行数</param>
      <param name="colSpan">列数</param>
      <param name="includeOverriedCell">是否包含被合并的单元格</param>
      <returns>单元格对象集合</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            获得指定区域内的单元格对象
            </summary>
      <param name="rowIndex">开始行号</param>
      <param name="colIndex">开始列号</param>
      <param name="rowSpan">行数</param>
      <param name="colSpan">列数</param>
      <param name="includeOverriedCell">是否包含被合并的单元格</param>
      <returns>单元格对象集合</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.InsertChildElement(System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            插入子元素
            </summary>
      <param name="index">指定的序号</param>
      <param name="element">新添加的元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            将对象内容添加到文档视图元素内容中
            </summary>
      <param name="content">文档内容对象</param>
      <param name="privateMode">私有模式</param>
      <returns>添加的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加子元素
            </summary>
      <param name="element">子元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorRefreshView">
      <summary>
            刷新视图
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.FixDomState">
      <summary>
            修复DOM状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.InnerFixDomState(System.Boolean,System.Boolean)">
      <summary>
            修复DOM状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.InnerUpdateElementsRuntimeVisible(DCSoft.Writer.Dom.XTextContainerElement.UpdateElementsRuntimeVisibleArgs)">
      <summary>
            更新文档元素的可见性
            </summary>
      <param name="deeply">是否深入设置子孙元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.SetCellBorder(System.Single,System.Drawing.Drawing2D.DashStyle,System.Drawing.Color)">
      <summary>
            统一设置单元格的边框样式
            </summary>
      <param name="lineWidth">边框线宽度</param>
      <param name="lineStyle">线条类型</param>
      <param name="lineColor">颜色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.RefreshInvalidateCellSize(DCSoft.Drawing.DCGraphics)">
      <summary>
            刷新表格中部分大小状态无效的单元格的内容大小
            </summary>
      <param name="g">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            重新计算对象大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.InnerExecuteLayout">
      <summary>
            执行表格排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.UpdateCellOverrideState">
      <summary>
            更新单元格的合并状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.UpdateRowPosition">
      <summary>
            更新表格行的位置
            </summary>
      <remarks>当应用程序</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.FixCells(System.Boolean)">
      <summary>
            修正单元格对象的个数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.UpdatePagesForTable(System.Boolean)">
      <summary>
             表格高度发生改变，需要重新设置行状态和重新分页
            </summary>
      <param name="forceFixHeight">强制修正高度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetElementByType(System.Type)">
      <summary>
            获得本文档元素容器包含的指定类型的第一个文档元素
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetElementsByType(System.Type)">
      <summary>
            获得本文档元素容器包含的所有的指定类型的文档元素列表
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetElementByInnerid(System.Int32)">
      <summary>
            找到指定内部编号的元素
            </summary>
      <param name="innerID">内部编号值</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetElementById(System.String)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetElementByInstanceIndex(System.Int32)">
      <summary>
            获得指定实例编号的文档元素对象。
            </summary>
      <param name="instanceIndex">内部编号</param>
      <returns>找到的文档元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EnumerateAllCells(System.Action{DCSoft.Writer.Dom.XTextTableCellElement})">
      <summary>
            遍历所有的单元格
            </summary>
      <param name="handler">遍历使用的委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCell(System.String,System.Boolean)">
      <summary>
            获得指定序号的单元格对象
            </summary>
      <param name="strCellIndex">单元格序号字符串</param>
      <param name="throwException">若未找到单元格是否抛出异常</param>
      <returns>找的单元格对象，若未找到而且不抛出异常则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCellByCellIndex(System.String,System.Boolean)">
      <summary>
            获得指定序号的单元格对象
            </summary>
      <param name="strCellIndex">单元格序号字符串</param>
      <param name="throwException">若未找到单元格是否抛出异常</param>
      <returns>找的单元格对象，若未找到而且不抛出异常则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCellTextByCellIndex(System.String,System.Boolean)">
      <summary>
            获得指定序号的单元格文本内容
            </summary>
      <param name="strCellIndex">单元格序号字符串</param>
      <param name="throwException">若未找到单元格是否抛出异常</param>
      <returns>单元格文本内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCellText(System.Int32,System.Int32,System.Boolean)">
      <summary>
            获得指定序号的单元格文本内容
            </summary>
      <param name="rowIndex">从0开始的行号</param>
      <param name="colIndex">从0开始的列号</param>
      <param name="throwException">若未找到单元格是否抛出异常</param>
      <returns>获得的单元格文本内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCell(System.Int32,System.Int32,System.Boolean)">
      <summary>
            获得指定序号的单元格对象
            </summary>
      <param name="rowIndex">从0开始的行号</param>
      <param name="colIndex">从0开始的列号</param>
      <param name="throwException">若未找到单元格是否抛出异常</param>
      <returns>找的单元格对象，若未找到而且不抛出异常则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetSelectionCells(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            根据两个单元格位置获得区域中被选择的单元格列表，包括被合并而隐藏的单元格
            </summary>
      <param name="rowIndex1">第一个单元格的行号</param>
      <param name="colIndex1">第一个单元格的列号</param>
      <param name="rowIndex2">第二个单元格的行号</param>
      <param name="colIndex2">第二个单元格的列号</param>
      <returns>单元格对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetCellByAbsPosition(System.Single,System.Single)">
      <summary>
            根据文档绝对位置获得单元格对象
            </summary>
      <param name="absX">绝对X坐标值</param>
      <param name="absY">绝对Y坐标值</param>
      <returns>获得的单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.SetTableWidth(System.Single)">
      <summary>
            设置表格的宽度
            </summary>
      <param name="newWidth">新宽度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CompressRowsColumns">
      <summary>
            压缩行列数
            </summary>
      <remarks>操作是否修改了表格结构</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorGotoCell(System.Int32,System.Int32)">
      <summary>
            将插入点跳到指定单元格中
            </summary>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorInsertRows2(System.Int32,DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableCellElement,System.Int32},System.Boolean)">
      <summary>
            在编辑器中插入表格行
            </summary>
      <param name="index">新表格行的序号</param>
      <param name="newRows">新表格行对象</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="specifyRowSpan">用户指定的单元格跨行数</param>
      <param name="autoSetRowSpan">自动设置跨行数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorDeleteRows2(System.Int32,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableCellElement,System.Int32})">
      <summary>
            在编辑器中删除多个连续的表格行
            </summary>
      <param name="startRowIndex">开始行号</param>
      <param name="rowsCount">要删除的行数</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="specifyRowSpan">用户指定的单元格跨行数修正值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorInsertColumns2(System.Int32,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableCellElement,System.Int32},System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableColumnElement,System.Single})">
      <summary>
            在编辑器中插入多个表格列.DCWriter内部使用。
            </summary>
      <param name="index">插入的表格列的开始序号</param>
      <param name="newColumns">新表格列对象</param>
      <param name="newCells">指定的新表格列对应的单元格对象</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="specifyColSpan">用户指定的新跨列数</param>
      <param name="keepTableWidth"> 保持表格宽度</param>
      <param name="specifyColumWidths">指定的列宽</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorDeleteColumns2(System.Int32,System.Int32,System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableCellElement,System.Int32},System.Boolean,System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableColumnElement,System.Single})">
      <summary>
            在编辑器中删除多个连续的表格列对象
            </summary>
      <param name="startColumnIndex">要删除的表格列的开始序号</param>
      <param name="colCount">表格列个数</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="specifyColSpan">指定的跨列数</param>
      <param name="keepTableWidth">保持表格宽度</param>
      <param name="specifyColumnWidths">指定的列宽</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorApplyTableStructInfo(DCSoft.Writer.Dom.TableStructInfo)">
      <summary>
            应用表格状态
            </summary>
      <param name="tableInfo">表格状态信息对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.EditorSetHeaderRow(System.Collections.Generic.Dictionary{DCSoft.Writer.Dom.XTextTableRowElement,System.Boolean},System.Boolean)">
      <summary>
            设置表格标题行样式
            </summary>
      <param name="headerStyles">新的标题行样式</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateCellInstance">
      <summary>
            创建一个新的单元格对象
            </summary>
      <remarks>
            从XDesignerLib上派生的设计器中可以实现扩展表格模型,实现自己的
            表格单元格元素类型,此时需要重载该函数来返回扩展的表格单元格
            对象实例.
            </remarks>
      <returns>新的单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateCellInstance(DCSoft.Writer.Dom.XTextTableCellElement)">
      <summary>
            创建一个新的单元格对象
            </summary>
      <param name="templateCell">用作模板的单元格对象</param>
      <remarks>
            从XDesignerLib上派生的设计器中可以实现扩展表格模型,实现自己的
            表格单元格元素类型,此时需要重载该函数来返回扩展的表格单元格
            对象实例.
            </remarks>
      <returns>新的单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateColumnInstance">
      <summary>
            创建一个新的表格列对象
            </summary>
      <remarks>
            从XDesignerLib上派生的设计器中可以实现扩展表格模型,实现自己的
            表格单元格元素类型,此时需要重载该函数来返回扩展的表格列
            对象实例.
            </remarks>
      <returns>新的表格列对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateRowInstance">
      <summary>
            创建一个新的表格行对象
            </summary>
      <remarks>
            从XDesignerLib上派生的设计器中可以实现扩展表格模型,实现自己的
            表格单元格元素类型,此时需要重载该函数来返回扩展的表格行
            对象实例.
            </remarks>
      <returns>新的表格行对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetRowIndex(DCSoft.Writer.Dom.XTextTableRowElement)">
      <summary>
            获得行号
            </summary>
      <param name="row">表格行对象</param>
      <returns>从0开始的行号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否复制子孙节点</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.ContainsChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断是否包含直接子元素
            </summary>
      <param name="element">子元素</param>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.GetSelectionRowsCells(DCSoft.Writer.Dom.XTextElementList@,DCSoft.Writer.Dom.XTextElementList@)">
      <summary>
            获得被选中的表格行和单元格对象列表
            </summary>
      <param name="selectionRows">被选中的表格行列表</param>
      <param name="selectionCells">被选中的表格单元格列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableElement.CreateElementViewHandle">
      <summary>
            创建视图小把柄对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AcceptTab">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.__ElementsForSerialize2">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowReBindingDataSource">
      <summary>
            允许重复绑定数据源
            </summary>
      <remarks>
            当某个表格行允许复制绑定数据源后，执行数据源绑定操作会导致原先设计时的
            表格行的丢失，从而导致不能重复绑定。而当本属性值为true时。则执行绑定时
            会将表格行列表给备份，这样就成重复绑定了。
            对于内置数据源包含了SQL语句，可能存在安全风险，因此本属性默认为false。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.DataForReValueBinding">
      <summary>
            DCWriter内部使用。用于重复绑定数据源而备份的数据信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Alignment">
      <summary>
            表格对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.FormulaValue">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.CompressOwnerLineSpacing">
      <summary>
            压缩所在文档行的行间距
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.HoldWholeLine">
      <summary>
            在排版时占据整个一行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.PrintBothBorderWhenJumpPrint">
      <summary>
            在续打的时候打印所有单元格边框
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowUserDeleteRow">
      <summary>
            允许用户删除表格行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowUserInsertRow">
      <summary>
            允许用户新增表格行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowUserToResizeEvenInFormViewMode">
      <summary>
            即使在表单模式下用户仍然可以拖拽修改表格大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowUserToResizeColumns">
      <summary>
            是否允许用户鼠标拖拽操作改变表格列宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.AllowUserToResizeRows">
      <summary>
            是否允许用户鼠标拖拽操作改变表格行高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.CellBorderVisibility">
      <summary>
            单元格边框线可见性设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.CellBackgroundVisibility">
      <summary>
            单元格背景色可见性设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.ShowCellNoneBorder">
      <summary>
            是否显示无边框的单元格的边框。当本属性设置为Inherit值时系统采用Options.ViewOptions.ShowCellNoneBorder的值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.LeftIndent">
      <summary>
            左边缩进量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.NumOfRows">
      <summary>
            表格行数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.NumOfColumns">
      <summary>
            表格的列数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.HeaderRowCount">
      <summary>
            标题行个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.HeaderRows">
      <summary>
            标题行集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.RuntimeRows">
      <summary>
            运行时的表格行对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.OwnerDocument">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Columns">
      <summary>
            表格列对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Rows">
      <summary>
            表格行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.RowsCount">
      <summary>
            表格行数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Elements">
      <summary>
            子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.ColumnsCount">
      <summary>
            表格列数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Cells">
      <summary>
            获得所有的单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.VisibleCells">
      <summary>
            获得所有可见的单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.FirstCell">
      <summary>
            表格中第一个单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.FirstVisibleCell">
      <summary>
            表格中第一个单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.LastCell">
      <summary>
            表格中最后一个单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.LastVisibleCell">
      <summary>
            获得最后一个可见的单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.FirstContentElementInPublicContent">
      <summary>
            第一个在正文中的内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.LastContentElementInPublicContent">
      <summary>
            最后一个在文档正文中的内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.FirstContentElement">
      <summary>
            第一个内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.LastContentElement">
      <summary>
            最后一个内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.HasSelection">
      <summary>
            表格中是否有内容被选择
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.NeastLevel">
      <summary>
            表格套嵌层次，文档中第一层表格的层次为1，子表格为2,再内部的子表格为3，以此类推.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.TableWidth">
      <summary>
            表格的宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.OuterText">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.Text">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.SubfieldMode">
      <summary>
            分栏模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableElement.SubfieldNumber">
      <summary>
            分栏数量
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextTableRowElement">
      <summary>
            表格行元素
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextTableRowElement.HandledNewPage">
      <summary>
            已经处理的强制分页标记.DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.RuntimeAllowUserToResizeHeight">
      <summary>
            运行时的用户能否改变表格行高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.MaxCellHeight">
      <summary>
            表格行中最高的单元格的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.ElementIDPrefix">
      <summary>
            文档元素编号前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.RuntimeCanSplitByPageLine">
      <summary>
             运行时的是否允许被分页线分割。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.GetCell(System.Int32)">
      <summary>
            获得指定序号的单元格对象
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.RuntimeSpecifyHeight">
      <summary>
            运行时使用的指定表格行高度
            </summary>
      <returns>高度值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorSetSpecifyFixedLineHeight(System.Single,System.Boolean,System.Boolean)">
      <summary>
            设置表格行固定文档内容行高
            </summary>
      <param name="lineHeight">指定的行高</param>
      <param name="showGridLine">是否显示网格线</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorRefreshView">
      <summary>
            表格行的刷新内容和排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorSetVisibleExt(System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            不支持设置表格行的可见性
            </summary>
      <param name="visible">
      </param>
      <param name="logUndo">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象,对表格行该参数无作用</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.Select">
      <summary>
            选中整个表格行
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorSetRowSpecifyHeight(System.Single,System.Boolean)">
      <summary>
            在编辑器中设置表格行的用户指定高度,DCWriter内部使用。
            </summary>
      <param name="newHeight">新高度</param>
      <param name="logUndo">是否记录撤销操作信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorDelete(System.Boolean)">
      <summary>
            删除表格行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.CalcuteRowHeight">
      <summary>
            计算表格行的高度，DCWriter内部使用
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorClone">
      <summary>
            为编辑器复制表格行对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorCloneSpecifyCloneType(DCSoft.Writer.Dom.TableRowCloneType)">
      <summary>
            指定复制模式的为编辑器复制表格行对象
            </summary>
      <param name="cloneType">复制模式</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTableRowElement.EditorFillDataSource(System.Object)">
      <summary>
            表格行填充数据源
            </summary>
      <param name="dataSource">数据源对象</param>
      <returns>生成的表格行个数</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.GroupName">
      <summary>
            数据组名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AcceptTab">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.__ElementsForSerialize2">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.Elements">
      <summary>
            子元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.RowIndex">
      <summary>
            行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.DataSourceRowSpan">
      <summary>
            数据源绑定跨行数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.CloneMultipleBaseForBindingDataSource">
      <summary>
            执行数据源绑定时的复制操作的倍数基数。，不足补充空白行。
            </summary>
      <remarks>
            比如设置为3，则生成的复制的次数必须为3的倍数，不足则补充空白行。
            本属性只有在ExpendForDataBinding=true时有效。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.GenerateByValueBingding">
      <summary>
            DCWriter内部使用。本表格行是多行数据源绑定操作而产生的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.IndexBase1">
      <summary>
            从1开始计算的元素序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.FormulaValue">
      <summary>
            属性无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.NewPage">
      <summary>
            强制分页
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.PrintCellBorder">
      <summary>
            打印单元格边框线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.PrintCellBackground">
      <summary>
            打印单元格背景
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AllowInsertRowDownUseHotKey">
      <summary>
            使用快捷键向下插入表格行时的行为。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AllowUserPressTabKeyToInsertRowDown">
      <summary>
            本属性已经过时，请使用InsertRowDownUseHotKey属性替代。
            </summary>
      <remarks>
            允许用户按下Tab键来向下插入表格行,即使表格行不是表格的最后一行。本属性值默认为false。
            如果表格的AllowUserInsertRow属性值为false，则不能插入表格行。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AllowUserToResizeHeight">
      <summary>
            是否允许用户鼠标拖拽操作改变表格行高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.CanSplitByPageLine">
      <summary>
            能否被分页线分割，也就是是否允许被分配到两页上
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.OwnerPageIndex">
      <summary>
            从0开始计算的表格行所在的页码数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.ExpendForDataBinding">
      <summary>
            由于数据源绑定而扩展的表格行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.OwnerTable">
      <summary>
            对象所属的表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.Index">
      <summary>
            行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AbsLeft">
      <summary>
            左端绝对坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.AbsTop">
      <summary>
            顶端绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.Cells">
      <summary>
            本表格行包含的单元格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.LastVisibleCell">
      <summary>
            表格行中最后一个可见的单元格（未被其他单元格合并覆盖的单元格）
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.SpecifyHeight">
      <summary>
            用户指定的高度
            </summary>
      <remarks>
            若等于0则表格行自动设置高度，
            若大于0则表格行高度自动设置高度而且高度不小于用户指定的高度，
            若小于0则固定设置表格行的高度为用户指定的高度。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.HeaderStyle">
      <summary>
            标题行样式
            </summary>
      <remarks>
            在分页时，若导致分页的表格行的DataRow属性为false则不自动插入临时标题行
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.RuntimeHeaderStyle">
      <summary>
            运行时的是否是标题行模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.PreviousElement">
      <summary>
            获得同一层次中的上一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.NextElement">
      <summary>
            获得元素的同一层次的下一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.ElementIndex">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.HasSelection">
      <summary>
            是否包含被选中的单元格
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTableRowElement.CloneType">
      <summary>
            复制方式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextTextElement">
      <summary>
            纯文本文档元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTextElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTextElement.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">文本内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextTextElement.CheckWhitespaceCount">
      <summary>
            检查纯空格文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTextElement.WhitespaceCount">
      <summary>
            纯空格文本的长度,用于修复XML中压缩纯空格导致的文本丢失问题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTextElement.WhiteSpaceLength">
      <summary>
            仅用于兼容性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextTextElement.TextValue">
      <summary>
            文本值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs">
      <summary>
            保存文档后事件参数对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.#ctor(System.Object,System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
            初始化对象
            </summary>
      <param name="output">文档输出目标</param>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <param name="backgroundMode">是否为后台保存模式</param>
      <param name="contentEncoding">文本编码格式</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.ContentEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.BackgroundMode">
      <summary>
            是否为后台保存模式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterSaveDocumentEventArgs.Output">
      <summary>
            文件输出目标，可以是TextReader或Stream。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs">
      <summary>
            加载文档前事件参数对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.#ctor(System.String,System.Object,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="fileSystemName">文件系统名称</param>
      <param name="obj">文件来源</param>
      <param name="format">文件格式</param>
      <param name="instance">另外的文档对象实例</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.Source">
      <summary>
            文件来源，可以是文件名，TextReader或Stream。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.AfterLoadDocumentEventArgs.Instnace">
      <summary>
            文档对象实例
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.AssemblyHelper.IsAssemblyObfuscation">
      <summary>
            程序集是否混淆加密
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.AssemblyHelper.IsAssemblyDemaged">
      <summary>
            程序集是否破坏了。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs">
      <summary>
            保存文档前事件参数对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.#ctor(System.Object,System.String,System.String,System.Boolean,System.Text.Encoding)">
      <summary>
            初始化对象
            </summary>
      <param name="output">文档输出目标</param>
      <param name="fileName">文件名</param>
      <param name="format">文件格式</param>
      <param name="backgroundMode">是否为后台保存模式</param>
      <param name="contentEncoding">文本编码格式</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.ContentEncoding">
      <summary>
            文本编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.BackgroundMode">
      <summary>
            是否为后台保存模式。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.Output">
      <summary>
            文件输出目标，可以是TextReader或Stream。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeSaveDocumentEventArgs.Cancel">
      <summary>
            是否取消操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs">
      <summary>
            加载文档前事件参数对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.#ctor(System.String,System.Object,System.String,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="fileSystemName">文件系统名称</param>
      <param name="obj">文件来源</param>
      <param name="format">文件格式</param>
      <param name="instance">另外的文档对象实例</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.Source">
      <summary>
            文件来源，可以是文件名，TextReader或Stream。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.Instnace">
      <summary>
            文档对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.BeforeLoadDocumentEventArgs.Cancel">
      <summary>
            是否取消操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.COMImageValueList">
      <summary>
            面向COM的图片列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.LastErrorMessage">
      <summary>
            最后一次操作的错误信息
            </summary>
      <returns>错误信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.LoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.LoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.COMDisposeImage(System.Int32)">
      <summary>
            销毁指定的图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.COMImageValueList.GetImage(System.Int32)">
      <summary>
            内部的获得图片对象
            </summary>
      <param name="index">图片句柄</param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCCompressDom">
      <summary>
            文档DOM中大多数是字符和段落符号元素和输入域边界元素，为了提高一些DOM遍历的操作，
            本类型提供了一种压缩DOM，不含字符和段落元素。提高遍历速度。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCCompressDom._Document">
      <summary>
            文档节点
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCCompressDom._Body">
      <summary>
            正文节点对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCCompressDom.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCCompressDom.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCAutoFixTextMode">
      <summary>
            文本自动修复模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.None">
      <summary>
            无自动修正
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.Auto">
      <summary>
            自动设置修正模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.yyyyMMdd">
      <summary>
            8位数字的年月日
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.yyyyMMddHHmm">
      <summary>
            12位数字的年月日时分秒
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.yyyyMMddHHmmss">
      <summary>
            14位数字的年月日时分秒
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCAutoFixTextMode.HHmmss">
      <summary>
            6位数字的时分秒。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CheckBoxGroupInfo">
      <summary>
            复选框分组信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxGroupInfo._Checkboxs">
      <summary>
            复选框分组信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxGroupInfo._Radioboxs">
      <summary>
            单选框分组信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CheckBoxGroupInfo.Invalidate">
      <summary>
            状态无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CheckBoxGroupInfo.InvalidateAll">
      <summary>
            状态无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CheckBoxGroupInfo.GetCheckBoxOrRadioBoxElementsSpecifyName(System.String,System.Type)">
      <summary>
            获得文档中所有指定名称的单、复选框元素列表
            </summary>
      <param name="name">名称</param>
      <param name="elementType">文档元素类型</param>
      <returns>元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.CheckBoxGroupInfo.GetElementsInSameGroup(DCSoft.Writer.Dom.XTextCheckBoxElementBase)">
      <summary>
            获得同一组的复选框元素对象
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.CheckBoxGroupInfo.CheckState">
      <summary>
            检查状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CheckBoxGroupInfo.RootElement">
      <summary>
            所属文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DCGraphicsForWASM.ObjectCache`1.CloneObject(`0)">
      <summary>
            复制对象
            </summary>
      <param name="v">
      </param>
      <returns>
      </returns>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCGraphicsForWASM.FormatVersion">
      <summary>
            版本号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCTableAlignment">
      <summary>
            表格对齐方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTableAlignment.Default">
      <summary>
            默认值。采用和所在段落相同的设置。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTableAlignment.Left">
      <summary>
            左对齐
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTableAlignment.Center">
      <summary>
            居中对齐
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTableAlignment.Right">
      <summary>
            右对齐
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCTabMoveDirection">
      <summary>
            Tab键移动方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTabMoveDirection.None">
      <summary>
            无方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTabMoveDirection.Forward">
      <summary>
            向前
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCTabMoveDirection.Next">
      <summary>
            向后
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentContentMergerBase">
      <summary>
            文档内容合并器，合并过程自动留下痕迹。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentContentMergerBase.XTextElementListComparer">
      <summary>
            文档元素列表对比器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.XTextElementListComparer.Merge">
      <summary>
            合并文档元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.XTextElementListComparer.IsTooManyPieces(System.Collections.Generic.IList{DCSoft.Writer.Dom.XTextElement},System.Collections.Generic.IList{DCSoft.Writer.Dom.XTextElement})">
      <summary>
            判断分析结果是否过于破碎
            </summary>
      <param name="oldList">
      </param>
      <param name="newList">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.XTextElementListComparer.CalculateSameRate">
      <summary>
            计算内容相似比率
            </summary>
      <returns>
      </returns>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentMergerBase.GlobalDebugSaveFileDirectory">
      <summary>
            全局性的调试用保存文件的目录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.DebugSaveFiles(DCSoft.Writer.Dom.XTextDocument,System.String)">
      <summary>
            为调试而保存旧文档和新文档
            </summary>
      <param name="doc">
      </param>
      <param name="pathPrefix">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.Append(DCSoft.Writer.Dom.XTextDocument,System.String,System.String,System.DateTime,System.Int32,System.String)">
      <summary>
            添加并合并文档
            </summary>
      <param name="doc">文档对象</param>
      <param name="userID">用户编号</param>
      <param name="userName">用户名</param>
      <param name="savedTime">文档保存时间</param>
      <param name="userLevel">用户授权等级</param>
      <param name="clientName">客户端名称</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.CollapseDeletedElements(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            收缩被逻辑删除的节点
            </summary>
      <remarks>
            连续的被逻辑删除的内容视作一个整体。
            </remarks>
      <param name="container">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.GetComparer(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            获得比较器
            </summary>
      <param name="oldContainer">旧的容器元素</param>
      <param name="newContainer">新的容器元素</param>
      <returns>比较器对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.IsSameTableStruct(DCSoft.Writer.Dom.XTextTableElement,DCSoft.Writer.Dom.XTextTableElement)">
      <summary>
            判断两个表格的大框架是否一致
            </summary>
      <param name="table1">
      </param>
      <param name="table2">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentMergerBase.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentMergerBase.ResultDocument">
      <summary>
            合并结果文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentMergerBase.RunForWeb">
      <summary>
            为WEB程序而运行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentMergerBase.LastCompareResultMessage">
      <summary>
            最后一次文档内容比较操作的结果信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentControlerSnapshot">
      <summary>
            DCWriter内部使用。文档控制状态快照对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.OwnerControler">
      <summary>
            控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.DocumentContentVersion">
      <summary>
            文档内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.SelectionVerion">
      <summary>
            选择区域版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.CanDeleteSelection">
      <summary>
            能否删除被选中的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.CanModifySelection">
      <summary>
            能否修改被选中的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentControlerSnapshot.CanModifyParagraphs">
      <summary>
            能否修改被选中的段落
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentRenderMode">
      <summary>
            正在呈现的的文档模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.Paint">
      <summary>
            正在WinForm用户界面上绘制图形
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.Bitmap">
      <summary>
            正在创建包含对象内容的位图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.ReadPaint">
      <summary>
            阅读版式而绘制文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.Print">
      <summary>
            正在打印
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.Html">
      <summary>
            正在输出HTML文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.PDF">
      <summary>
            正在输出PDF文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentRenderMode.RTF">
      <summary>
            正在输出RTF文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMDataEncryptHelper.RemoveUnExemptElements(System.Xml.XmlElement)">
      <summary>
            删除未豁免的子节点
            </summary>
      <param name="rootElement">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMDataEncryptHelper.EncryptXMLElement(System.Xml.XmlElement,DCSoft.Writer.DataEncryptProvider)">
      <summary>
            加密XML元素
            </summary>
      <param name="rootElement">根元素</param>
      <param name="provider">加密器提供者</param>
      <returns>处理的XML元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMDataEncryptHelper.DecryptXmlDocument(System.Xml.XmlDocument)">
      <summary>
            解密文档
            </summary>
      <param name="document">
      </param>
      <returns>
      </returns>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseData._CurrentLevel">
      <summary>
            当前授权等级，数值为DCFunctionLevel下的常量。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseData._CurrentCustomFunctiontIDs">
      <summary>
            自定义功能清单，为一个 int[] 类型。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseData._StdInfos">
      <summary>
            标准功能清单信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseData._MyLicenseDataContainer">
      <summary>
            当前授权信息容器对象，为DCSoft.MyLicense.MyLicenseDataContainer类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseHelper._LastWebServerOnlineInfo">
      <summary>
            最后一次获得的在线用户数统计信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DOMLicenseHelper.LastTimeWhenLoadLicenseDataForClusterServer">
      <summary>
            上一次为集群服务器体系而加载本地授权数据的时间
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.CreatePageTitleInfoAppID(System.Boolean,System.Int32)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.CreatePageTitleInfoPageIndex(System.Boolean,System.Int32,System.String)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.InnerCreatePageTitleInfo(System.Boolean,System.Int32,System.Int32,System.String)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.InnerPromptFunctionLimited(System.Object,System.Int32,System.String)">
      <summary>
            提示功能是否受到限制
            </summary>
      <param name="ctl">控件对象</param>
      <param name="id">功能编号</param>
      <param name="name">功能名称</param>
      <returns>是否受到限制</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.InnerCheckLicenseAdvFunction(System.Object,System.Int32)">
      <summary>
            判断是否支持高级功能
            </summary>
      <param name="lic">指定的授权信息对象</param>
      <param name="id">功能编号</param>
      <returns>是否支持指定功能</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.GetNoLicencseFunctionInfo">
      <summary>
            获得未用授权的功能信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.HasNoLicencseFunctionInfo">
      <summary>
            判断是否具有功能点无授权的风险提示
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.InnerCheckLicenseAdvFunction(System.Int32)">
      <summary>
            判断是否支持高级功能
            </summary>
      <param name="id">功能编号</param>
      <returns>是否支持指定功能</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.IsRegistered(System.Int32)">
      <summary>
            判断控件是否是已经注册了
            </summary>
      <param name="pageIndex">从0开始的页码</param>
      <returns>是否注册</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.GetWebServerInfoJSON(System.Boolean)">
      <summary>
            获得WEB服务器端连接的客户端信息清单JSON字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.GetWebServerOnlineInfo">
      <summary>
            获得WEB服务器信息
            </summary>
      <returns>获得的信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.GetPageSettingsFunctionIDs">
      <summary>
            获得可用的页面设置功能编号组合
            </summary>
      <returns>编号组合</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.GetRequiredLevel(System.Int32,System.Boolean@)">
      <summary>
            返回指定功能编号对应的授权等级。参数实际是DCFunctionIDConsts，输出实际为DCFunctionLevel。
            </summary>
      <param name="id">编号</param>
      <param name="outofRange">编号是否超出范围</param>
      <returns>所需等级</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.AddClusterServer(System.String)">
      <summary>
            添加集群服务器地址
            </summary>
      <param name="servicePageUrl">服务页面地址</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.ApplyLicenseDataSettings(System.Object,System.Object)">
      <summary>
            更新注册信息设置
            </summary>
      <param name="data_MyLicenseDataSnapshort">
      </param>
      <param name="container_MyLicenseDataContainer">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.InnerValidateMaxOnlineNumber">
      <summary>
            检查在线人数最大个数的限制
            </summary>
      <returns>true:没超过限制，false:超过限制。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelper.RuntimeAppicationID">
      <summary>
            针对软件授权的运行时使用的应用产品编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementPositionStyle">
      <summary>
            文档元素排版位置样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementPositionStyle.Static">
      <summary>
            标准模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementPositionStyle.Relative">
      <summary>
            相对坐标定位模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementRenderResult">
      <summary>
            文档元素打印结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementRenderResult.RenderMode">
      <summary>
            呈现模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementRenderResult.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementRenderResult.Printing">
      <summary>
            文档正在打印中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementRenderResult.PrintPreviewing">
      <summary>
            文档正在生成打印预览内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementZOrderStyle">
      <summary>
            元素Z坐标位置类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementZOrderStyle.Normal">
      <summary>
            正常模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementZOrderStyle.UnderText">
      <summary>
            在文本之下
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementZOrderStyle.InFrontOfText">
      <summary>
            在文本前面
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCEncryptMode">
      <summary>
            加密模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.None">
      <summary>
            不加密
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.DES">
      <summary>
            DES加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.DSA">
      <summary>
            DSA加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.AES">
      <summary>
            AES加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.RC2">
      <summary>
            RC2加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.Rijindael">
      <summary>
            Rijindael加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.RSA">
      <summary>
            RSA加密解密算法
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCEncryptMode.Custom">
      <summary>
            自定义的加密解密算法
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.GetTextArgs">
      <summary>
            获得文本元素参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.GetTextArgs.IncludeHiddenText">
      <summary>
            是否包含隐藏的内容，默认false.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.GetTextArgs.IncludeLogicDeletedContent">
      <summary>
            是否包含被逻辑删除的内容，默认false.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.GetTextArgs.IncludeBorderText">
      <summary>
            是否包含输入域边界文本，默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.GetTextArgs.IncludeBackgroundText">
      <summary>
            是否包含输入域背景文本，默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.GetTextArgs.IncludeLabelUnitText">
      <summary>
            是否包含输入域的标签和单位文本，默认true。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDCElementIDForEditableDependentExecuter.SynchronForModifyElementID(DCSoft.Writer.Dom.XTextElementList,System.Collections.Generic.Dictionary{System.String,System.String})">
      <summary>
            由于元素编号发生改变而自动更新设置
            </summary>
      <param name="elements">要操作的文档元素列表</param>
      <param name="idMaps">新旧元素编号映射表</param>
      <returns>操作修改的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDCElementIDForEditableDependentExecuter.Execute(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            执行操作
            </summary>
      <param name="srcElement">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.DomReadyStates">
      <summary>
            元素加载状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomReadyStates.UnInitialized">
      <summary>
            元素尚未初始化
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomReadyStates.Loading">
      <summary>
            正在加载
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomReadyStates.Loaded">
      <summary>
            数据加载完毕
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomReadyStates.Complete">
      <summary>
            完全的加载完毕。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DomTreeNodeEnumerable">
      <summary>
            文档树节点遍历器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DomTreeNodeEnumerable.#ctor(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            初始化对象
            </summary>
      <param name="elements">文档元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DomTreeNodeEnumerable.#ctor(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="rootElement">根节点</param>
      <param name="includeRootElement">遍历时是否包含根节点</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.DomTreeNodeEnumerable.ExcludeCharElement">
      <summary>
            忽略字符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DomTreeNodeEnumerable.ExcludeParagraphFlag">
      <summary>
            忽略段落符号元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementViewHandle">
      <summary>
            文档元素视图中的小把柄
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Priority">
      <summary>
            优先级。数字越小，优先级越高。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Index">
      <summary>
            序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.ToolTip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Icon">
      <summary>
            图标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Left">
      <summary>
            左端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Top">
      <summary>
            顶端位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Width">
      <summary>
            宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Height">
      <summary>
            高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementViewHandle.Cursor">
      <summary>
            鼠标光标
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementViewHandleManager">
      <summary>
            文档元素视图小把柄管理器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementViewHandleManager._Elements">
      <summary>
            文档中所有支持扩展小把柄的元素对象列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementViewHandleManager._LastDrawItems">
      <summary>
            最后一次在用户界面中绘制的扩展把柄对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementViewHandleManager.Invalidate">
      <summary>
            声明对象状态无效，需要刷新
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementViewHandleManager.InvalidateView">
      <summary>
            声明对象视图状态无效，需要重新绘制。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementViewHandleManager.CheckState">
      <summary>
            检查状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementViewHandleManager.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Dom.ICopySourceExecuter">
      <summary>
            内容复制执行器接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ICopySourceExecuter.ClearBuffer">
      <summary>
            清空缓存的数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ICopySourceExecuter.Execute(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            执行内容复制
            </summary>
      <param name="sourceElement">文档元素对象</param>
      <returns>修改的文档内容次数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ICopySourceExecuter.CollectionExecuteInfos">
      <summary>
            收集内容复制执行信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.CopySourceExecuteInfo">
      <summary>
            内容复制动作执行信息对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IMedicalExpressionElement">
      <summary>
            DCWRITER内部使用。医学表达式的接口。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IMedicalExpressionElement.ClearValues">
      <summary>
            清空数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IMedicalExpressionElement.Modified">
      <summary>
            数据是否修改了。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InnerDocumentRenderMode">
      <summary>
            正在呈现的的文档模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.Paint">
      <summary>
            正在WinForm用户界面上绘制图形
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.Bitmap">
      <summary>
            正在创建包含对象内容的位图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.ReadPaint">
      <summary>
            阅读版式而绘制文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.Print">
      <summary>
            正在打印
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.Html">
      <summary>
            正在输出HTML文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.PDF">
      <summary>
            正在输出PDF文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentRenderMode.RTF">
      <summary>
            正在输出RTF文档
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs">
      <summary>
            DCWriter内部使用的文档内容绘图事件参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.IsPrintOrReadPaintOrPDF_RenderMode">
      <summary>
            是否为Print或ReadPaint或PDF呈现模式。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.AllowDrawCommentBackground">
      <summary>
            是否允许显示文档批注造成的背景色
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.HasScript_DrawContent">
      <summary>
             文档是否具有DrawContent事件脚本。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.HasScript_EventBeforePaintElement">
      <summary>
            文档是否具有BeforePaintElement事件脚本。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.HasScript_EventAfterPaintElement">
      <summary>
            文档是否具有AfterPaintElement事件脚本。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Render">
      <summary>
            图形内容呈现器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Document">
      <summary>
            相关的文档对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ViewOptions">
      <summary>
            视图选项
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.AllowDrawHighlightBackground">
      <summary>
            是否允许绘制高亮度区域的背景色
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ActiveMode">
      <summary>
            要绘制的内容处于激活模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.RenderMode">
      <summary>
            正在呈现的文档样式。这个字段应该是DocumentRenderMode枚举类型，但为了迷惑破解者而改用整数类型。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Graphics">
      <summary>
            绘图对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.myClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs._DrawRectangles">
      <summary>
            绘图区域的矩形数组
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ViewBounds">
      <summary>
            对象的区域
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Drawing.DCGraphics,System.Drawing.RectangleF,DCSoft.Writer.Dom.InnerDocumentRenderMode)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="g">绘图对象</param>
      <param name="clipRectangle">剪切矩形</param>
      <param name="vRenderMode">呈现模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GetRuntimeForeColor(System.Drawing.Color)">
      <summary>
            获得运行时使用的前景色
            </summary>
      <param name="c">前景色</param>
      <returns>运行时使用的前景色</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GetPublishArgs">
      <summary>
            获得本参数的公开版本
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.CreatePublishEventArgs">
      <summary>
            创建对外公开的绘图事件参数
            </summary>
      <returns>创建的参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GraphicsLogContent(System.String)">
      <summary>
            记录日志信息
            </summary>
      <param name="txt">日志内容</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GraphicsGetFontHeight(DCSoft.Writer.Dom.RuntimeDocumentContentStyle)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GraphicsGetFontHeight(DCSoft.Drawing.XFontValue)">
      <summary>
            获得字体高度
            </summary>
      <param name="font">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.GraphicsDrawString(System.String,DCSoft.Writer.Dom.RuntimeDocumentContentStyle,DCSoft.Drawing.XFontValue,System.Drawing.Color,System.Drawing.RectangleF,DCSoft.Drawing.DCStringFormat)">
      <summary>
            绘制字符串
            </summary>
      <param name="s">字符串</param>
      <param name="rs">样式</param>
      <param name="specifyFontSize">指定字体大小</param>
      <param name="brush">画刷对象</param>
      <param name="layoutRectangle">排版矩形</param>
      <param name="format">格式化对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.PrintSelectionMode">
      <summary>
            正在打印文档中被选中的区域的模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.IsVisible(DCSoft.Drawing.RenderVisibility)">
      <summary>
            是否可见
            </summary>
      <param name="visi">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.IsVisible(DCSoft.Drawing.RenderVisibility,DCSoft.Writer.Dom.InnerDocumentRenderMode)">
      <summary>
            是否可见
            </summary>
      <param name="visi">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.HasBoundSelection">
      <summary>
            是否处于区域选择显示模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Clone">
      <summary>
            复制对象的一个复本
            </summary>
      <returns>复制的对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.EnabledDrawGridLine">
      <summary>
            允许绘制网格线
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.CheckSizeInvalidateWhenRefreshSize">
      <summary>
            在计算元素大小时是否检查元素的SizeInvalidte属性值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.JumpPrintMode">
      <summary>
            处于续打模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ViewMode">
      <summary>
            视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.DocumentContentElement">
      <summary>
            内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Element">
      <summary>
            相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Type">
      <summary>
            文档内容类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Style">
      <summary>
            绘制文档内容使用的样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Cancel">
      <summary>
            用户取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ForCreateImage">
      <summary>
            正在为创建图片而绘制图形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.PageLinePositions">
      <summary>
            分页线位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.PageClipRectangle">
      <summary>
            页面剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Page">
      <summary>
            页面对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.PageIndex">
      <summary>
            从0开始计算的页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.PageCount">
      <summary>
            总页数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Options">
      <summary>
            打印文档选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.Bounds">
      <summary>
            边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.DrawRectangles">
      <summary>
            绘图区域的矩形数组
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ScaleRate">
      <summary>
            缩放比率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InnerDocumentPaintEventArgs.ClientViewBounds">
      <summary>
            对象客户区的边界
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InsertElementsArgs">
      <summary>
            插入文档元素的参数.DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InsertElementsArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.CurrentElement">
      <summary>
            指定插入位置的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.NewElements">
      <summary>
            要插入的文档元素对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.LogUndo">
      <summary>
            是否记录撤销操作信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.DetectOnly">
      <summary>
            检测模式，不真的执行插入操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.Result">
      <summary>
            操作结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InsertElementsArgs.UpdateContent">
      <summary>
            更新文档内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IDCTableRowComparer">
      <summary>
            比较两个表格行对象的接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.UpdateDataBindingArgs.AddHandledElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加数据源绑定操作而设置过的文档元素对象
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.DataNode">
      <summary>
            数据节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.DataSource">
      <summary>
            数据源对象 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.FastMode">
      <summary>
            是否为快速模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.SpecifyParameterNames">
      <summary>
            指定的文档参数的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.DetectValueModified">
      <summary>
            用于检测是否导致文档数据发生改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.UpdateDataBindingArgs.DetectResults">
      <summary>
            检测结果列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.LicenseStateVersion">
      <summary>
            授权状态版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.ExecuteClusterServer(DCSoft.WebServerHost)">
      <summary>
            响应集群服务器状态同步操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.AddClusterServer(System.String)">
      <summary>
            添加集群服务器
            </summary>
      <param name="servicePageUrl">页面地址</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.IsRegistered(System.Int32)">
      <summary>
            判断控件是否是已经注册了
            </summary>
      <param name="pageIndex">页码</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.GetNoLicencseFunctionInfo">
      <summary>
            获得未用授权的功能信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.GetWebServerOnlineInfo">
      <summary>
            获得WEB服务器信息
            </summary>
      <returns>获得的信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.GetWebServerInfoJSON(System.Boolean)">
      <summary>
            获得WEB服务器端连接的客户端信息清单JSON字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.DrawLimitedFunctionStringOnBmp(System.Object)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.InnerGetCurrentLicenseData">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.CreatePageTitleInfoPageIndex(System.Boolean,System.Int32,System.String)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.CreatePageTitleInfoAppID(System.Boolean,System.Int32)">
      <summary>
            创建页面标题信息对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.ValidateMaxOnlineNumber">
      <summary>
            检查在线人数最大个数的限制
            </summary>
      <returns>true:没超过限制，false:超过限制。</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.CheckLicenseAdvFunction(System.Int32)">
      <summary>
            判断是否支持高级功能
            </summary>
      <param name="id">功能编号</param>
      <returns>是否支持指定功能</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.CheckLicenseAdvFunction2(System.Object,System.Int32)">
      <summary>
            判断是否支持高级功能
            </summary>
      <param name="lic">指定的授权信息对象</param>
      <param name="id">功能编号</param>
      <returns>是否支持指定功能</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DOMLicenseHelperPub.PromptFunctionLimited(System.Object,System.Int32,System.String)">
      <summary>
            提示功能是否受到限制
            </summary>
      <param name="ctl">控件对象</param>
      <param name="id">功能编号</param>
      <param name="name">功能名称</param>
      <returns>是否受到限制</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.LayoutHelper">
      <summary>
            排版帮助类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.IsNewLine(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否是强制分行
            </summary>
      <param name="element">元素对象</param>
      <returns>元素是否是强制分行</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.OwnerHoleLine(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否单独占据一行
            </summary>
      <param name="element">元素对象</param>
      <returns>元素是否单独占据一行</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.IsEnglishLetterOrDigit(System.Char)">
      <summary>
            判断指定的字符是否是应为字母或者数字
            </summary>
      <param name="c">字符值</param>
      <returns>判断结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.CanBeLineHead(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否可以出现在行首
            </summary>
      <param name="element">元素对象</param>
      <returns>元素是否可以出现在行首</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.CanBeLineEnd(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断元素是否可以出现在行尾
            </summary>
      <param name="element">元素对象</param>
      <returns>元素是否可以出现在行尾</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.CanBeLineHead(System.Char)">
      <summary>
            判断指定字符能否放在行首
            </summary>
      <param name="c">字符值</param>
      <returns>判断结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.LayoutHelper.CanBeLineEnd(System.Char)">
      <summary>
            判断指定字符能否放置在行尾
            </summary>
      <param name="c">字符值</param>
      <returns>判断结果</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.RepeatedImageValue">
      <summary>
            重复引用的图片对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RepeatedImageValue.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RepeatedImageValue.#ctor(DCSoft.Drawing.XImageValue)">
      <summary>
            初始化对象
            </summary>
      <param name="img">图片数据</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.RepeatedImageValue.ReferenceCount">
      <summary>
            对象引用的次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.RepeatedImageValue.ValueIndex">
      <summary>
            编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.RepeatedImageValueList">
      <summary>
            重复引用的图片数据信息列表，DCWriter内部使用。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RepeatedImageValueList._Used_EnableRepeatedImage">
      <summary>
            是否启用本功能。在大多数情况下，图片元素没有设置重复引用，因此不启动本功能。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RepeatedImageValueList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RepeatedImageValueList.Compress(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            DCWriter内部使用。压缩数据
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.RepeatedImageValueList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.RepeatedImageValueList.ItemCount">
      <summary>
            元素个数,DCWriter内部使用
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.RuntimeDocumentContentStyle">
      <summary>
            运行时的样式值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasFullVisibleBorder">
      <summary>
            是否具有可见的完整的边框线
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasVisibleBorder">
      <summary>
            是否存在可见的边框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasVisibleBottomBorder">
      <summary>
            是否存在可见的下边框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasSameBorderSettings">
      <summary>
            四个边框是否具有相同的边框线颜色和可见性设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasSameBorderColor">
      <summary>
            是否具有相同的边框线颜色
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.FontHeight">
      <summary>
            字体高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.FontName">
      <summary>
            原始的字体名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.FixedFontName">
      <summary>
            修正后的字体名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.Spacing">
      <summary>
            无效属性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.#ctor(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            初始化对象
            </summary>
      <param name="style">样式值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.CreateBackgroundBrush">
      <summary>
            根据设置创建绘制背景的画刷对象
            </summary>
      <returns>创建的画刷对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.CreateBackgroundBrush(System.Drawing.GraphicsUnit)">
      <summary>
            根据设置创建绘制背景的画刷对象
            </summary>
      <param name="unit">单位</param>
      <returns>创建的画刷对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.CreateBackgroundBrush(System.Drawing.RectangleF,System.Drawing.GraphicsUnit)">
      <summary>
            根据设置创建绘制背景的画刷对象
            </summary>
      <param name="rect">矩形区域</param>
      <param name="unit">单位</param>
      <returns>创建的画刷对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.EqualsBorderStyle(DCSoft.Writer.Dom.RuntimeDocumentContentStyle)">
      <summary>
            比较两个样式的边框设置是否一样
            </summary>
      <param name="style">另外一个样式对象</param>
      <returns>边框设置是否一样</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.CreateBorderPen">
      <summary>
            根据设置创建绘制边框的画笔对象
            </summary>
      <returns>创建的画笔对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.GetLineSpacing(System.Single,System.Single,System.Drawing.GraphicsUnit)">
      <summary>
            获得实际使用的行间距
            </summary>
      <param name="contentHeight">文本行内容高度</param>
      <param name="maxFontHeight">文本行中最大的字体高度</param>
      <param name="documentUnit">文档采用的度量单位</param>
      <returns>使用的行间距</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.DrawBorder(DCSoft.Drawing.DCGraphics,System.Drawing.RectangleF)">
      <summary>
            根据对象设置绘制边框
            </summary>
      <param name="g">
      </param>
      <param name="rectangle">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.GetClientRectangleF(System.Drawing.RectangleF)">
      <summary>
            获得客户区边界
            </summary>
      <param name="bounds">原始边界</param>
      <returns>获得的客户区边界</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.GetClientRectangleF(System.Single,System.Single,System.Single,System.Single)">
      <summary>
            获得客户区边界
            </summary>
      <param name="left">原始边界左端位置</param>
      <param name="top">原始边界顶端位置</param>
      <param name="width">原始边界宽度</param>
      <param name="height">原始边界高度</param>
      <returns>获得的客户区边界</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.CreateXFontValueWithoutUnderLine">
      <summary>
            创建一个没有下划线标记的字体信息对象
            </summary>
      <returns>创建的字体信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.GetFontValue(DCSoft.Drawing.XFontValue)">
      <summary>
            获得实际使用的字体对象
            </summary>
      <param name="f">参考的字体信息对象</param>
      <returns>底层字体对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasLeftBorder">
      <summary>
            是否存在左边界线
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasTopBorder">
      <summary>
            是否存在上边界线
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasRightBorder">
      <summary>
            是否存在右边界线
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RuntimeDocumentContentStyle.HasBottomBorder">
      <summary>
            是否存在下边界线
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.SearchStringResultList">
      <summary>
            搜索字符串的结果信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SearchStringResultList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SearchStringResultList.GetEnumerator">
      <summary>
            返回枚举器
            </summary>
      <returns>枚举器</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResultList.Count">
      <summary>
            记录个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResultList.Item(System.Int32)">
      <summary>
            获得指定序号处的信息对象
            </summary>
      <param name="index">序号</param>
      <returns>信息对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.SearchStringResult">
      <summary>
            搜索字符串的结果信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.SearchStringResult.#ctor(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.XTextCharElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="container">
      </param>
      <param name="firstElement">
      </param>
      <param name="text">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.SearchStringResult.Select">
      <summary>
            选中元素
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResult.ContainerElement">
      <summary>
            容器元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResult.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResult.FirstElement">
      <summary>
            第一个字符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.SearchStringResult.Elements">
      <summary>
            所有的字符元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.StateBinaryWriter">
      <summary>
            文档元素状态书写器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.StateBinaryWriter.Mode">
      <summary>
            书写模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentAutoFixFontSizeMode">
      <summary>
            单元格内容自适应设置字体大小模式。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentAutoFixFontSizeMode.None">
      <summary>
            无设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentAutoFixFontSizeMode.SingleLine">
      <summary>
            单行设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentAutoFixFontSizeMode.MultiLine">
      <summary>
            多行设置,只有单元格所在表格行为固定高度（XTextTableRowElement.SpecifyHeight属性值不为0）
            该设置才有效，否则等于SingleLine。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.TableSubfieldMode">
      <summary>
            表格分栏模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableSubfieldMode.None">
      <summary>
            不分栏
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableSubfieldMode.LeftRightAndUpDown">
      <summary>
            从左到右，从上到下分栏
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableSubfieldMode.UpDownAndLeftRight">
      <summary>
            从上到下，从左到右分栏
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.TypedElementListBuffer">
      <summary>
            DCWriter内部使用。指定类型的元素列表的缓存区.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.TypedElementListBuffer.SyncContentVersion">
      <summary>
            同步内容版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.TypedElementListBuffer.Clear">
      <summary>
            清空缓存区。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.ReflectionGetElementPropertyValue(DCSoft.Writer.Dom.XTextDocument,System.String,System.String)">
      <summary>
            通过反射来获得指定编号的元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="document">文档对象</param>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <returns>获得的属性值转换的字符串</returns>
      <remarks>
            例如 var strStyle = document.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.ReflectionSetElementPropertyValue(DCSoft.Writer.Dom.XTextDocument,System.String,System.String,System.String)">
      <summary>
            通过反射来设置指定编号的文档元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="document">文档对象</param>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <param name="newValue">新的属性值</param>
      <returns>操作是否成功</returns>
      <remarks>
            例如 document.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle","DropdownList");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.ReflectionCallElementMethod(DCSoft.Writer.Dom.XTextDocument,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            通过反射来执行指定编号的文档元素的方法。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="document">文档对象</param>
      <param name="id">元素编号</param>
      <param name="path">方法路径,可以使用"属性名1.属性名2.属性名3.方法名"的方式来深入调用方法</param>
      <param name="parameter1">参数1</param>
      <param name="parameter2">参数2</param>
      <param name="parameter3">参数3</param>
      <param name="parameter4">参数4</param>
      <param name="parameter5">参数5</param>
      <param name="parameter6">参数6</param>
      <returns>方法返回值转换的字符串，对于void类型返回【null】。</returns>
      <remarks>
            例如 document.ReflectionCallElementMethod("field1","Select",null,null,null,null,null,null);
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.SetElementText(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            设置文档元素文本值
            </summary>
      <param name="element">文档元素对象</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.GetCheckedValueList(DCSoft.Writer.Dom.XTextDocument,System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            获得文档中所有的勾选的复选框元素的值
            </summary>
      <param name="spliter">各个项目之间的分隔字符串</param>
      <param name="includeCheckbox">是否包含复选框</param>
      <param name="includeRadio">是否包含单选框</param>
      <param name="includeElementID">是否包含元素ID号</param>
      <param name="includeElementName">是否包含元素Name属性值</param>
      <returns>获得的字符串</returns>
      <remarks>
            例如调用 document.GetCheckedValueList(";",true,true,true,true) 返回类似字符串
            “xbzw;胸部正位;gpzw;骨盆正位;fbww;腹部卧位”
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.GetDataSourceBindingDescriptionsXML(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述数据源绑定信息的XML字符串。</returns>
      <example>
            本函数返回的是类似以下的XML字符串，注意：此处使用了方括号替换了尖括号。
            [DCDataSourceBindingDescriptions]
                [Binding DataSource="Patient" BindingPath="Name" ElementID="field1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Age" ElementID="field2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Address.Street" ElementID="field3" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="年龄" BindingPath="" ElementID="field4" FormatString="" AutoUpdate="False" Readonly="False" /]
            [/DCDataSourceBindingDescriptions]
            </example>[System.Reflection.Obfuscation(Exclude = true, ApplyToMembers = true)]
        </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.GetBindingDataSources(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得文档中绑定的数据源名称字符串列表。各个名称之间用逗号分开。
            </summary>
      <returns>数据源名称列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.GetDataSourceBindingDescriptions(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.AddDropdownListItem(DCSoft.Writer.Dom.XTextDocument,System.String,System.String,System.String,System.Boolean)">
      <summary>
            为下拉列表元素添加下拉列表项目
            </summary>
      <param name="id">元素编号</param>
      <param name="text">项目的文本值</param>
      <param name="Value">项目的数值</param>
      <param name="saveToXml">添加的项目是否保存在XML中</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.CheckMaxTextLengthForCopyPaste(DCSoft.Writer.Dom.XTextDocument,System.String,System.Boolean)">
      <summary>
            为MaxTextLengthForCopyPaste选项而检查内容
            </summary>
      <param name="list">要检查的内容</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>检查过后的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.CheckMaxTextLengthForCopyPaste(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            为MaxTextLengthForCopyPaste选项而检查内容
            </summary>
      <param name="list">要检查的内容</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>检查是否通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.AppendSubDocument(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextSubDocumentElement)">
      <summary>
            追加子文档元素
            </summary>
      <param name="newSubDoc">子文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentProvider.InsertSubDocuentAtCurrentPosition(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextSubDocumentElement,System.Boolean)">
      <summary>
            在当前位置处插入子文档元素
            </summary>
      <param name="newSubDoc">要插入的子文档对象</param>
      <param name="insertUp">true:在上面插入；false:在下面插入</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextLabelElementBase">
      <summary>
            简单文本标签元素基础类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.RuntimeAutoSize">
      <summary>
            运行时的是否自动设置大小
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.SetPageLabelText(System.Int32,System.String)">
      <summary>
            设置页码文本值
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="text">文本值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.GetDisplayText(System.Int32)">
      <summary>
            获得用于显示的文本
            </summary>
      <param name="pageIndex">从0开始计算的页码号</param>
      <returns>文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextLabelElementBase.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>返回的文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.DataBoundNode">
      <summary>
            绑定的数据源对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.DataBoundNodeValueUsed">
      <summary>
            使用了数据源节点的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.ValueBinding">
      <summary>
            内容绑定对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.Resizeable">
      <summary>
            用户能否改变对象大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.Text">
      <summary>
            文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.PageTexts">
      <summary>
            各个页面的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.StrictMatchPageIndex">
      <summary>
            调用PageTexts时严格匹配页码
            </summary>
      <remarks>
            如果本属性为true，则严格匹配PageTexts列表中指定的页码，如果没找到对应页码的信息，则显示本对象的Text值。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextLabelElementBase.PageTextsPreview">
      <summary>
            分页文本的预览文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextShadowLineBreakElement">
      <summary>
            阴影的换行元素
            </summary>
      <remarks>
            这是一种内部临时产生的元素，用于控制换行
            </remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContainerAutoHideMode">
      <summary>
            容器元素自动隐藏模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContainerAutoHideMode.None">
      <summary>
            不做设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContainerAutoHideMode.HideWhenEmpty">
      <summary>
            内容为空时自动隐藏
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContainerAutoHideMode.HideWhenChildFieldEmpty">
      <summary>
            子输入域内容为空时自动隐藏
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentProtectedInfo">
      <summary>
            内容保护信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ContentProtectedInfo.#ctor(DCSoft.Writer.Dom.XTextElement,System.String,DCSoft.Writer.Dom.ContentProtectedReason)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
      <param name="msg">消息</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.ContentProtectedInfo.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ContentProtectedInfo.Message">
      <summary>
            消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ContentProtectedInfo.Reason">
      <summary>
            内容被保护的理由
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentProtectedReason">
      <summary>
            内容保护的理由
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentProtectedReason.None">
      <summary>
            无理由
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentProtectedReason.LogicDeleteAgain">
      <summary>
            不能被重复逻辑删除
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentProtectedInfoList">
      <summary>
            内容报表提示信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ContentProtectedInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ContentProtectedInfoList.Add(DCSoft.Writer.Dom.XTextElement,System.String,DCSoft.Writer.Dom.ContentProtectedReason)">
      <summary>
            添加项目
            </summary>
      <param name="element">文档元素对象</param>
      <param name="msg">提示信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.ContentProtectedInfoList.GetInfo(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得提示信息
            </summary>
      <param name="element">文档元素对象</param>
      <returns>获得的信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ContentProtectedInfoList.ToDetailsString">
      <summary>
            显示详细内容的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementStateDetectEventArgs">
      <summary>
            文档元素状态检测事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementStateDetectEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.DomAccessFlags)">
      <summary>
            输出对象
            </summary>
      <param name="element">文档元素对象</param>
      <param name="flags">标记</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementStateDetectEventArgs.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.ForContent">
      <summary>
            为修改内容而执行判断
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.Flags">
      <summary>
            标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.SetMessage">
      <summary>
            设置消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.Message">
      <summary>
            消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.Result">
      <summary>
            检测结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.ProtectedReason">
      <summary>
            保护理由
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStateDetectEventArgs.CacheParentStateResult">
      <summary>
            是否缓存父元素状态信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IDeleteable">
      <summary>
            对象能否被删除
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IDeleteable.Deleteable">
      <summary>
            对象能否被删除
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InputFieldAdornTextType">
      <summary>
            输入域扩展标记文本类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.Default">
      <summary>
            无文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.DataSource">
      <summary>
            数据源
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.ToolTip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.ValidateMessage">
      <summary>
            数据校验结果信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.ID">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.Name">
      <summary>
            元素名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.TabIndex">
      <summary>
            切换焦点序号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldAdornTextType.Custom">
      <summary>
            自定义
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextBlankLineElement">
      <summary>
            空白行元素
            </summary>
      <remarks>
            本元素用于在文档中创建一个空白文档行，而且该文档行的高度不受段落行间距和段落间距的影响。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBlankLineElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextBlankLineElement.Resizeable">
      <summary>
            对象大小修改样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextBlankLineElement.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextWhiteSpacesElement">
      <summary>
            表示连续空格的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextWhiteSpacesElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextWhiteSpacesElement.Length">
      <summary>
            长度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentStates">
      <summary>
            文档状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentStates._ExecutingUndo">
      <summary>
            正在执行全局文档内容布局
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentStates.#ctor">
      <summary>
            文档状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.JumpPrintModeForCurrentPage">
      <summary>
            当前页使用的续打方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.Layouted">
      <summary>
            文档内容已经经过排版了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.RenderMode">
      <summary>
            文档当前使用的呈现模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.Printing">
      <summary>
            文档正在打印中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.PrintPreviewing">
      <summary>
            文档正在生成打印预览内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.ExecutingUndo">
      <summary>
            正在执行UNDO操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.ExecutingRedo">
      <summary>
            正在执行REDO操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.GenerateLongBmp">
      <summary>
            正在生成长图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentStates.GenerateBmp">
      <summary>
            正在生成文档内容图片
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementStack">
      <summary>
            快速的文档元素堆栈
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementStack.LastPopElement">
      <summary>
            上一次弹出的文档元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IContentReadonlyable">
      <summary>
            表示可以设置内容是否只读的接口
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IContentReadonlyable.ContentReadonly">
      <summary>
            内容只读性设置
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IDocumentCommentManager">
      <summary>
            文档批注管理器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentCommentManager.Refreshview">
      <summary>
            重新绘制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentCommentManager.ExecuteLayout(DCSoft.Drawing.DCGraphics)">
      <summary>
            执行排版
            </summary>
      <param name="g">
      </param>
      <returns>操作是否导致重新绘制图形</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentCommentManager.UpdateElementStates(System.Int32)">
      <summary>
            指定注释编号更新文档元素状态，DCWriter内部使用
            </summary>
      <param name="specifyCommentIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentCommentManager.UpdateElementStates(DCSoft.Writer.Dom.DocumentCommentList,DCSoft.Writer.Dom.DocumentCommentList)">
      <summary>
            根据新旧文档批注列表来更新文档元素的状态,DCWriter内部使用。
            </summary>
      <param name="oldList">
      </param>
      <param name="newList">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.IDocumentCommentManager.Settings">
      <summary>
            批注显示的设置参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IDocumentCommentManager.CurrentComment">
      <summary>
            当前批注对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.FixIndexDirection">
      <summary>
            插入点位置修正方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.FixIndexDirection.Forward">
      <summary>
            向前修正
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.FixIndexDirection.Back">
      <summary>
            向后修正
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.FixIndexDirection.Both">
      <summary>
            所有的方向
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.RenderBorderInfo">
      <summary>
            呈现文档元素边框线的信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.RenderBorderInfo.Elements">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.RenderBorderInfo.Bounds">
      <summary>
            边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.RenderBorderInfo.Style">
      <summary>
            使用的样式信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.RenderBorderInfo.Line">
      <summary>
            文档行对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.RenderBorderInfoList">
      <summary>
            边框呈现信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.RenderBorderInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextBeanFieldElement">
      <summary>
            数据豆元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBeanFieldElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.LabelTextContactActionMode">
      <summary>
            标签文本连接模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.Disable">
      <summary>
            禁止文本连接
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.Normal">
      <summary>
            正常模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.FirstSectionInPage">
      <summary>
            只显示当前页面中第一个文档节的文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.LastSectionInPage">
      <summary>
            只显示当前页面中最后一个文档节的文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.TableRow">
      <summary>
            表格行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.FirstTableRowInPage">
      <summary>
            页面中的第一个表格行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.LabelTextContactActionMode.LastTableRowInPage">
      <summary>
            页面中的最后一个表格行
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CharacterMeasurer">
      <summary>
            字符大小测量对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CharacterMeasurer.StdSize10FontInfo.IsSupportChar(System.Char)">
      <summary>
            判断是否支持指定的字符
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.CharacterMeasurer.StdSize10FontInfo.#ctor(DCSoft.Writer.Dom.CharacterMeasurer.StdSize10FontInfo.StdSize10FontInfoKey,System.Drawing.Graphics)">
      <summary>
            初始化对象
            </summary>
      <param name="key">
      </param>
      <param name="g">
      </param>
    </member>
    <member name="F:DCSoft.Writer.Dom.CharacterMeasurer.Options_MeasureUseTrueTypeFont">
      <summary>
            使用TrueTypeFont文件内容进行字符测量
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.CharacterMeasurer.IsChinese(System.Char)">
      <summary>
            判断是否是中文
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.CharacterMeasurer.SetDefaultFont(System.Char,System.Char,System.String)">
      <summary>
            设置默认字体
            </summary>
      <param name="startChar">字符开始编号</param>
      <param name="endChar">字符结束编号</param>
      <param name="fontNameList">字体名称列表，名称之间用英文逗号分开</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.CharacterMeasurer.MeasureString(System.Drawing.Font,System.String,System.Drawing.Graphics,System.Drawing.GraphicsUnit)">
      <summary>
            计算一个字符串的大小
            </summary>
      <param name="font">字体对象</param>
      <param name="str">字符串</param>
      <param name="g">画布对象</param>
      <param name="pageUnit">页面单位</param>
      <returns>计算出来的大小</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.CharacterMeasurer.CharTopFix">
      <summary>
            字符顶端位置修正量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.CharacterMeasurer.OldWhitespaceWidth">
      <summary>
            使用旧的空格宽度计算方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.TableStructInfo.Read(DCSoft.Writer.Dom.XTextTableElement,System.Boolean)">
      <summary>
            读取表格DOM结构信息
            </summary>
      <param name="table">表格对象</param>
      <param name="backElements">备份内容文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.TableStructInfo.Write(DCSoft.Writer.Dom.XTextTableElement,System.Boolean)">
      <summary>
            保存表格DOM结构
            </summary>
      <param name="table">表格对象</param>
      <param name="updateCellLayout">更新单元格排版</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.TableStructInfo.LeftIndent">
      <summary>
            左边缩进量
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.TableCellStructInfo.Expression">
      <summary>
            表达式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextShadowElement">
      <summary>
            DCWriter内部使用。影子文档元素对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShadowElement.#ctor(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="entryElement">对应的实体文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShadowElement.EntryElement">
      <summary>
            影子元素所对应的实体元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShadowElement.LayoutWidth">
      <summary>
            文档内容布局时使用的宽度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IDocumentHostedObject">
      <summary>
            和文档交互的控件接口
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentHostedObject.LoadViewState(DCSoft.Writer.Dom.DocumentHostElementEventArgs)">
      <summary>
            加载视图
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentHostedObject.SaveViewState(DCSoft.Writer.Dom.DocumentHostElementEventArgs)">
      <summary>
            保存视图
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentHostedObject.CreatePreviewImage(DCSoft.Writer.Dom.DocumentHostElementEventArgs)">
      <summary>
            创建展现控件数据的图片对象
            </summary>
      <param name="args">参数对象</param>
      <returns>获得的图片对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentHostElementEventArgs">
      <summary>
            文档和被承载的对象交互时使用的参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentHostElementEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentHostElementEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentHostElementEventArgs.ViewState">
      <summary>
            视图状态容器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentHostElementEventArgs.Element">
      <summary>
            承载控件的元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentHostElementEventArgs.Cancel">
      <summary>
            是否取消事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IDocumentImage">
      <summary>
            表示文档中图像
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentImage.GetPreferredSize(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            获得对象推荐的大小
            </summary>
      <param name="args">参数</param>
      <returns>推荐的大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.IDocumentImage.Draw(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            绘制图片内容
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.IDocumentImage.ImageFlags">
      <summary>
            标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentImageFlags">
      <summary>
            文档图形对象标志
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentImageFlags.None">
      <summary>
            无状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentImageFlags.CustomBackground">
      <summary>
            自定义的绘制背景
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ObjectParameterList">
      <summary>
            对象参数列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.ObjectParameterList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ObjectParameterList.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.ObjectParameterList.ComSetItem(System.Int32,DCSoft.Writer.Dom.ObjectParameter)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.ObjectParameterList.Item(System.String)">
      <summary>
            获得指定名称的参数对象
            </summary>
      <param name="name">参数名</param>
      <returns>获得的参数对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.ObjectParameter">
      <summary>
            文档中承载的对象的参数
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.ObjectParameter.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ObjectParameter.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.ObjectParameter.Name">
      <summary>
            参数名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ObjectParameter.Value">
      <summary>
            参数值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ObjectHostMode">
      <summary>
            控件承载模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ObjectHostMode.Disable">
      <summary>
            禁止承载。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ObjectHostMode.Static">
      <summary>
            静态承载,只显示预览图片，无法和用户互动。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ObjectHostMode.Dynamic">
      <summary>
            动态承载，显示承载的对象，允许和用户互动。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.HostedControlType">
      <summary>
            承载的对象类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.AutoDetect">
      <summary>
            自动检测
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.Control">
      <summary>
            WinForm控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.OCX">
      <summary>
            OCX控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.NativeWinControl">
      <summary>
            原生态的Windows控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.WPF">
      <summary>
            WPF控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.DocumentImage">
      <summary>
            实现了IDocumentImage接口的对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HostedControlType.InvalidateType">
      <summary>
            无效的类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentReferenceState">
      <summary>
            内容引用状态
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentReferenceState.Disable">
      <summary>
            禁止引用
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentReferenceState.AutoUpdate">
      <summary>
            每次都自动更新。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentReferenceState.OnceUpdate">
      <summary>
            只更新一次，成功后不再更新。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentReferenceState.Loaded">
      <summary>
            加载成功，不再更新。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ReplaceElementsEventHandler">
      <summary>
            替换元素事件委托类型,DCWriter内部使用。
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Dom.ReplaceElementsArgs">
      <summary>
            执行ReplaceElements函数使用的参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ReplaceElementsArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ReplaceElementsArgs.#ctor(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,System.Int32,DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="container">要替换子元素的容器元素对象</param>
      <param name="startIndex">替换区域的开始序号</param>
      <param name="deleteLength">要删除的子元素的个数</param>
      <param name="newElements">要插入的新元素列表</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <param name="updateContent">是否更新文档视图</param>
      <param name="raiseEvent">是否触发事件</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.LockScrollPosition">
      <summary>
            操作锁定滚动位置，不进行视图滚动。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.DetectOnly">
      <summary>
            仅仅是检测模式,并不真的执行替换元素操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.TickSpan">
      <summary>
            操作执行销毁的时刻数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.EventSource">
      <summary>
            事件来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.Container">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.StartIndex">
      <summary>
            操作的开始区域序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.DeleteLength">
      <summary>
            要删除的区域的长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.NewElements">
      <summary>
            新插入的元素对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.AutoFixNewElements">
      <summary>
            自动过滤新插入的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.LogUndo">
      <summary>
            是否记录撤销操作信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.UpdateContent">
      <summary>
            是否更新文档视图
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.ExecuteCopySource">
      <summary>
            执行内容复制操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.RaiseEvent">
      <summary>
            是否触发相关事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.DisablePermission">
      <summary>
            禁止权限控制
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.AccessFlags">
      <summary>
            访问行为标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.ChangeSelection">
      <summary>
            是否修改文档文档的选择状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.FocusContainer">
      <summary>
            容器获得焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.AfterReplaceDOM">
      <summary>
            替换文档元素后事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.Tag">
      <summary>
            额外的参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ReplaceElementsArgs.Result">
      <summary>
            执行结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageInfoValueType">
      <summary>
            页码信息类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageInfoValueType.PageIndex">
      <summary>
            从1开始计算的页码
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageInfoValueType.NumOfPages">
      <summary>
            文档总页数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageInfoValueType.LocalPageIndex">
      <summary>
            在本文档中的从1开始计算的页码数
            </summary>
      <remarks>
            当在一个打印预览控件中显示多个文档，或者批量打印文档时，该页码数就是该页
            在文档中的页码数，而不是所有文档的文档页集合在一起时的页码数。
            </remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageInfoValueType.LocalNumOfPages">
      <summary>
            在本文档中的文档总页数
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextCheckBoxElementBase">
      <summary>
            复选框控件基础对象类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextCheckBoxElementBase._FlowLayoutContainer">
      <summary>
            流式排版时用的临时容器元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeAdornText">
      <summary>
            运行时使用的扩展标记文字
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeVAlign">
      <summary>
            运行时使用的文档行垂直对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.FixForFlowlayoutCheckBox(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            为流式排版的勾选框而修正文档元素
            </summary>
      <param name="element">文档元素</param>
      <returns>修正后的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeSupportValueBinding">
      <summary>
            运行时的是否支持数据源绑定功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            文档加载后的处理
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CreateDataBindingDescriptor">
      <summary>
            创建数据绑定信息对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.UpdateByDataBindingDescriptor(DCSoft.Writer.FieldValueDescriptor,System.Boolean)">
      <summary>
            根据数据源绑定信息更新文档
            </summary>
      <param name="descriptor">数据绑定信息对象</param>
      <param name="fastMode">快速模式</param>
      <returns>操作是否修改了内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DisplayImage">
      <summary>
            显示在用户界面上的图片
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeGroupName">
      <summary>
            运行时使用的分组名称
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GetElementsInSameGroup">
      <summary>
            获得文档中所有同组的复选框对象列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GetToolTipInfo">
      <summary>
            获得提示文本信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnMouseEnter(DCSoft.Writer.ElementEventArgs)">
      <summary>
            鼠标光标进入事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnMouseLeave(DCSoft.Writer.ElementEventArgs)">
      <summary>
            鼠标光标离开事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            获得焦点事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            失去焦点事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.InvalidateHighlightInfo">
      <summary>
            声明同组的所有的复选框元素高亮度显示信息无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.SetEditorChecked(System.Boolean)">
      <summary>
            编辑器中设置或获得选择状态，就完全模拟用户鼠标点击设置勾选状态。触发表达式和事件。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.SetInnerEditorChecked(System.Boolean)">
      <summary>
            DCWriter内部使用。编辑器中设置或获得选择状态，该属性内部使用，而且不会记录撤销操作信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeEnableHighlight">
      <summary>
            运行时的是否允许高亮度显示模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GetHighlightInfos">
      <summary>
            获得高亮度显示区域
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnContentChanging(System.Object,DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发内容正在改变事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.OnContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发内容已经改变事件
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GetCheckBoxText">
      <summary>
            复选框标题文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GetRuntimeVisualStyle">
      <summary>
            运行时使用的控件样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckBoxText">
      <summary>
            复选框标题文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.ToPlaintString">
      <summary>
            返回纯文本
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深入复制，无效</param>
      <returns>复制的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeVisualStyle">
      <summary>
            运行时使用的控件样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算元素大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckedUserHistories">
      <summary>
            用户勾选操作历史记录列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DataFeedback">
      <summary>
            数据回填信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Requried">
      <summary>
            必填项。必须设置元素的Name属性，本设置才有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DataName">
      <summary>
            数据名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CanBeReferenced">
      <summary>
            数据能否被其他地方引用。需要应用程序支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.BringoutToSave">
      <summary>
            保存文档时是否将该节点数据单独拿出来保存。需要应用程序支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.ReferencedDataName">
      <summary>
            引用的数据名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckboxVisibility">
      <summary>
            勾选框可见性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.PrintVisibilityWhenUnchecked">
      <summary>
            未勾选时的打印可见性设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.PrintTextForChecked">
      <summary>
            勾选时的打印输出的文本。在打印或者输出HTML/PDF文件时不输出勾选图像，而是输出此文本。如果输出空格，则要使用两个双引号包围起来。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.PrintTextForUnChecked">
      <summary>
            不勾选时的打印输出的文本。在打印或者输出HTML/PDF文件时不输出勾选图像，而是输出此文本。如果输出空格，则要使用两个双引号包围起来。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.PrintBoxOnlyChecked">
      <summary>
            只在勾选的时候打印勾选框。如果不勾选则不打印勾选框。默认false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Modified">
      <summary>
            元素内容是否改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckAlignLeft">
      <summary>
            勾选框靠左侧对齐
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Caption">
      <summary>
            复选框后面跟着的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CaptionFlowLayout">
      <summary>
            对于文本采用流式排版
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CaptionAlign">
      <summary>
            标题文本对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.ValueBinding">
      <summary>
            内容绑定对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DataBoundNode">
      <summary>
            绑定的数据源对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DataBoundNodeValueUsed">
      <summary>
            使用了数据源节点的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Resizeable">
      <summary>
            多行模式可以改变大小，单行模式不能改变大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.AutoHeightForMultiline">
      <summary>
            处于多行模式时是否为自动计算高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Width">
      <summary>
            对象宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Height">
      <summary>
            对象高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DisplayName">
      <summary>
            显示的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GroupName">
      <summary>
            本属性已经不推荐使用了，请使用Name属性。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.FormulaValue">
      <summary>
            对象数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.GroupInfoVersion">
      <summary>
            分组信息版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.ControlStyle">
      <summary>
            控件样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Checked">
      <summary>
            选中状态。本属性只是快速的设置一个状态，不执行表达式和事件VBA脚本，不触发任何事件。
            </summary>
      <remarks>
            若要触发事件，执行相关的表达式，请调用EditorChecked属性。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.DefaultCheckedForValueBinding">
      <summary>
            数据源绑定操作时默认勾选状态
            </summary>
      <remarks>
            在执行数据源绑定时，如果读取的数据为空，则需要设置的默认勾选状态。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckedValue">
      <summary>
            勾选状态的值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.UnCheckedValue">
      <summary>
            没有勾选状态的值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Value">
      <summary>
            对象数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Readonly">
      <summary>
            只读的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.EditorChecked">
      <summary>
            编辑器中设置或获得选择状态，就完全模拟用户鼠标点击设置勾选状态。触发表达式和事件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.InnerEditorChecked">
      <summary>
            DCWriter内部使用。编辑器中设置或获得选择状态，该属性内部使用，而且不会记录撤销操作信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.EnableHighlight">
      <summary>
            是否允许高亮度显示状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Focused">
      <summary>
            对象是否获取焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.EventExpressions">
      <summary>
            事件表达式列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Text">
      <summary>
            返回表示对象数据的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.CheckBoxVisible">
      <summary>
            是否显示复选框标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.VisualStyle">
      <summary>
            复选框视图样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.Multiline">
      <summary>
            多行文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextCheckBoxElementBase.RuntimeVisible">
      <summary>
            运行时的元素是否可见
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.PrintVisibilityModeWhenUnchecked">
      <summary>
            未勾选时复选框的显示模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PrintVisibilityModeWhenUnchecked.Visible">
      <summary>
            正常显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PrintVisibilityModeWhenUnchecked.HiddenCheckBoxOnly">
      <summary>
            不打印勾选框，但仍然打印文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PrintVisibilityModeWhenUnchecked.HiddenAll">
      <summary>
            不打印
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CheckBoxControlStyle">
      <summary>
            复选框控件样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxControlStyle.CheckBox">
      <summary>
            复选框控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxControlStyle.RadioBox">
      <summary>
            单选框控件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CheckBoxVisualStyle">
      <summary>
            复选框显示样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.Default">
      <summary>
            默认样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.CheckBox">
      <summary>
            复选框样式 
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.RadioBox">
      <summary>
            单选框样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.SystemDefault">
      <summary>
            操作系统默认样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.SystemCheckBox">
      <summary>
            操作系统复选框样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.CheckBoxVisualStyle.SystemRadioBox">
      <summary>
            操作系统单选框样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.IHighlightManager">
      <summary>
            文档高亮度显示区域管理器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IHighlightManager.Clear">
      <summary>
            清空
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IHighlightManager.UpdateHighlightInfos">
      <summary>
            更新高亮度显示区域信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.IHighlightManager.Remove(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            删除指定元素相关的高亮度区域信息
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.IHighlightManager.InvalidateHighlightInfo(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            声明指定的元素相关的高亮度显示区域无效,需要重新设置
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.IHighlightManager.HoverHighlightInfo">
      <summary>
            鼠标悬停处的高亮度显示区域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IHighlightManager.HighlightRanges">
      <summary>
            用户设置的高亮度显示的区域列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IHighlightManager.HighlightRange">
      <summary>
            用户设置的高亮度显示区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.IHighlightManager.Item(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素所在的高亮度显示区域
            </summary>
      <param name="element">指定的文档元素对象</param>
      <returns>获得的高亮度显示区域</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.ValueValidateResultTypes">
      <summary>
            数据校验结果类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ValueValidateResultTypes.ValueValidate">
      <summary>
            数据校验
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ValueValidateResultTypes.ExcludeKeyword">
      <summary>
            违禁关键字
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ValueValidateResultTypes.InvalidateWord">
      <summary>
            异常单词
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextElementDescriptorAttribute">
      <summary>
            描述文档元素类型的属性
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementDescriptorAttribute.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextElementDescriptorAttribute.GetDescriptor(System.Type)">
      <summary>
            获得说明信息
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的说明信息</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextElementDescriptorAttribute.PropertiesType">
      <summary>
            元素属性包对象类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.BorderElementPosition">
      <summary>
            边框元素位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.BorderElementPosition.Start">
      <summary>
            开始位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.BorderElementPosition.End">
      <summary>
            结束位置
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DCBorderTextPosition">
      <summary>
            边框文本对齐方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCBorderTextPosition.Top">
      <summary>
            靠上对齐
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCBorderTextPosition.Middle">
      <summary>
            垂直居中
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCBorderTextPosition.Bottom">
      <summary>
            靠下对齐
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCBorderTextPosition.LeftTopRightBottom">
      <summary>
            从左上到右下
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DCBorderTextPosition.LeftBottomRightTop">
      <summary>
            从左下到右上
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextShapeInputFieldElement">
      <summary>
            具有自定义绘制用户界面的输入域对象
            </summary>
      <remarks>
            派生的类型需要重载RefreshShapeState,DrawContent方法
            编制 袁永福
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.EditorSetEditMode(System.Boolean,System.Boolean)">
      <summary>
            设置编辑模式
            </summary>
      <param name="mode">新的编辑模式</param>
      <param name="updateSelection">是否更新文档的选择区域</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.InvalidateView">
      <summary>
            声明用户界面无效，需要重新绘制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            添加内容到文档内容列表中
            </summary>
      <param name="content">文档内容列表</param>
      <param name="privateMode">是否是私有模式</param>
      <returns>添加的元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.CreateDragRectangle">
      <summary>
            创建一个拖拽矩形对象
            </summary>
      <returns>新的拖拽矩形对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.DrawActiveBorder(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制激活状态时的边框
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.GetDragHit(System.Int32,System.Int32)">
      <summary>
            进行控制点测试
            </summary>
      <param name="x">测试点X坐标</param>
      <param name="y">测试点Y坐标</param>
      <returns>测试点所在控制点编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.OnDefaultEditMethodEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理默认编辑事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档用户界面事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.OnResize">
      <summary>
            元素大小发生改变
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            元素失去焦点事件处理
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.CheckShapeState(System.Boolean)">
      <summary>
            检查状态
            </summary>
      <param name="updateSize">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextShapeInputFieldElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            计算对象大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.RuntimeVAlign">
      <summary>
            运行时使用的垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.EditMode">
      <summary>
            用户编辑文档内容模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.AutoExitEditMode">
      <summary>
            自动退出编辑内容模式
            </summary>
      <remarks>当光标离开输入域时自动设置元素为图形显示模式。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.EnableEditMode">
      <summary>
            是否允许用户编辑文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.FirstContentElement">
      <summary>
            对象中第一个文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.LastContentElement">
      <summary>
            对象中最后一个文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.Resizeable">
      <summary>
            用户是否可以改变对象大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.Enabled">
      <summary>
            对象是否可用,可以接受鼠标键盘事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextShapeInputFieldElement.ShowDragRect">
      <summary>
            判断能否使用鼠标拖拽该对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementType">
      <summary>
            内容元素类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.None">
      <summary>
            无效类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Text">
      <summary>
            文本元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Field">
      <summary>
            字段元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.InputField">
      <summary>
            输入框元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Table">
      <summary>
            表格元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.TableRow">
      <summary>
            表格行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.TableColumn">
      <summary>
            表格列
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.TableCell">
      <summary>
            表格单元格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Object">
      <summary>
            嵌入的对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.LineBreak">
      <summary>
            换行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.PageBreak">
      <summary>
            分页符号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.ParagraphFlag">
      <summary>
            段落标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.CheckRadioBox">
      <summary>
            单复选框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.CheckBox">
      <summary>
            复选框，仅供兼容使用。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Image">
      <summary>
            图片元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Button">
      <summary>
            按钮
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.Container">
      <summary>
            容器元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ElementType.All">
      <summary>
            所有类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DomAccessFlags">
      <summary>
            访问文档对象模型时的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.None">
      <summary>
            没有任何标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckControlReadonly">
      <summary>
            检查控件是否只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckUserEditable">
      <summary>
            是否检查用户可直接编辑设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckReadonly">
      <summary>
            检查输入域是否只读
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckPermission">
      <summary>
            检查用户权限限制
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckFormView">
      <summary>
            检查表单视图模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckLock">
      <summary>
            检查文档锁定状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckContentProtect">
      <summary>
            检查内容保护状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.CheckContainerReadonly">
      <summary>
            检查容器元素是否只读状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.Normal">
      <summary>
            所有的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DomAccessFlags.Max">
      <summary>
            允许最大的值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InputFieldListItem">
      <summary>
            输入域列表项目
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldListItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldListItem.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldListItem.Text">
      <summary>
            列表文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldListItem.Value">
      <summary>
            列表项目值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.InputFieldListItem.Tag">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InputFieldListItemList">
      <summary>
            下列列表项目列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.InputFieldListItemList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.InputFieldEditStyle">
      <summary>
            文本输入域输入方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.Text">
      <summary>
            直接输入纯文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.DropdownList">
      <summary>
            下拉列表方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.Date">
      <summary>
            日期类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.DateTime">
      <summary>
            时间日期类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.DateTimeWithoutSecond">
      <summary>
            去掉秒数的时间日期类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.Time">
      <summary>
            时间类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.InputFieldEditStyle.Numeric">
      <summary>
            数值型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.SelectionChangingEventHandler">
      <summary>
            选择区域正在发生改变事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextParagraphListItemElement">
      <summary>
            段落列表元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextParagraphListItemElement.DisplayInfo">
      <summary>
            显示信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.DisplayInfo.#ctor(DCSoft.Writer.Dom.XTextParagraphListItemElement,System.Boolean,System.Boolean)">
      <summary>
            创建对象
            </summary>
      <param name="element">文档元素对象</param>
      <param name="forMaxtListIndex">为最大列表文本而计算</param>
      <param name="forPDF">为输出PDF而创建</param>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.DisplayInfo.Measure(DCSoft.Drawing.DCGraphics)">
      <summary>
            计算大小
            </summary>
      <param name="g">画布对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            重新计算对象大小
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.MeasureSize(DCSoft.Writer.Dom.DocumentContentStyle,DCSoft.Drawing.DCGraphics,System.Int32)">
      <summary>
            计算段落列表项目元素的大小，仅供DCWriter内部使用。
            </summary>
      <param name="style">
      </param>
      <param name="g">
      </param>
      <param name="maxListIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphListItemElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphListItemElement.ParagraphFlagElement">
      <summary>
            本对象所对应的段落标记元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphListItemElement.Text">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.CompareHandler">
      <summary>
            比较两个对象的委托类型
            </summary>
      <param name="object1">对象1</param>
      <param name="object2">对象2</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentPageDrawer">
      <summary>
            文档页面绘制器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentPageDrawer.DrawPage(DCSoft.Printing.PrintPage,DCSoft.Drawing.DCGraphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            打印指定页面
            </summary>
      <param name="myPage">页面对象</param>
      <param name="g">绘图操作对象</param>
      <param name="MainClipRect">主剪切矩形</param>
      <param name="UseMargin">是否启用页边距</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentPaintEventHandler">
      <summary>
            对外公开的绘制文档内容的委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentViewTransform.ExpentToMarginArea">
      <summary>
            是否扩展到页边距所占据的地方
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentViewTransform.AddPage(DCSoft.Printing.PrintPage,System.Single,System.Single)">
      <summary>
            添加页面
            </summary>
      <param name="page">页面对象</param>
      <param name="pageTop">页面内容顶端位置</param>
      <param name="zoomRate">缩放比率</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementEnumerateEventHandler">
      <summary>
            遍历文档元素事件委托类型 
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Dom.ElementEnumerateEventArgs">
      <summary>
            遍历元素事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementEnumerateEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.ElementEnumerateEventArgs.IncreaseHandlerCount">
      <summary>
            累加执行次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.ReverseMode">
      <summary>
            逆向遍历模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.Parameter">
      <summary>
            参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.Cancel">
      <summary>
            取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.CancelChild">
      <summary>
            取消遍历子孙元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.Parent">
      <summary>
            父节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.Element">
      <summary>
            当前处理的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.ExcludeCharElement">
      <summary>
            忽略字符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.ExcludeParagraphFlag">
      <summary>
            忽略段落符号元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ElementEnumerateEventArgs.HandlerCount">
      <summary>
            累计执行的次数
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.HighlightInfo">
      <summary>
            高亮度显示区域
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.Compare(DCSoft.Writer.Dom.HighlightInfo,DCSoft.Writer.Dom.HighlightInfo)">
      <summary>
            比较两个对象设置是否一致
            </summary>
      <param name="info1">信息1</param>
      <param name="info2">信息2</param>
      <returns>设置是否一致</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.#ctor(DCSoft.Writer.Dom.XTextRange)">
      <summary>
            初始化对象
            </summary>
      <param name="range">区域</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.#ctor(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextRange,System.Drawing.Color,System.Drawing.Color,DCSoft.Writer.Dom.HighlightActiveStyle)">
      <summary>
            初始化对象
            </summary>
      <param name="range">区域</param>
      <param name="backColor">背景色</param>
      <param name="color">前景色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.#ctor(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextRange,System.Drawing.Color)">
      <summary>
            初始化对象
            </summary>
      <param name="range">区域</param>
      <param name="backColor">背景色</param>
      <param name="color">前景色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.GetLineBounds(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定文档行的在高亮度区域中的边界
            </summary>
      <param name="element">文档元素对象</param>
      <returns>获得的边界对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断指定的元素是否处于高亮度显示区域中
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfo.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfo.OwnerElement">
      <summary>
            该高亮度显示区域相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfo.Range">
      <summary>
            高亮度区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfo.BackColor">
      <summary>
            背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfo.Color">
      <summary>
            文本颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfo.ActiveStyle">
      <summary>
            激活模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.HighlightActiveStyle">
      <summary>
            高亮度激活模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HighlightActiveStyle.Hover">
      <summary>
            鼠标悬停时才激活
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HighlightActiveStyle.Static">
      <summary>
            静态的，一直处于激活状态,但不能打印
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HighlightActiveStyle.AllTime">
      <summary>
            永久的，一直处于激活状态，而且能打印
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.HighlightInfoList">
      <summary>
            高亮度显示区域列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.HighlightInfoList.HighlighInfoComparer">
      <summary>
            两个高亮度显示区域位置的比较器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HighlightInfoList._LastElement">
      <summary>
            最后一次检索的元素对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.HighlightInfoList._LastValue">
      <summary>
            最后一次检索的值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.HighlightInfoList.ContainsOwnerElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断是否存在指定元素的高亮度显示信息
            </summary>
      <param name="element">文档元素对象</param>
      <returns>是否包含指定的元素相关的信息</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.HighlightInfoList.Item(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            查找包含自定元素的
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.PageLineInfo">
      <summary>
            分页线信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.AdditionalEmptyPage">
      <summary>
            额外的插入空白页
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.ForNewPage">
      <summary>
            由于强制分页而导致的分页
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.PageSettings">
      <summary>
            当前使用的页面设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.StdPageContentHeight">
      <summary>
            标准页面内容高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.MinPageContentHeight">
      <summary>
            最小允许的页面内容高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.PageViewMode">
      <summary>
            当前页面视图方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.ForJumpPrint">
      <summary>
            正在为续打而计算分页位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.CurrentPageIndex">
      <summary>
            从0开始计算的当前页码
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.LastPosition">
      <summary>
            上一次的分页线位置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.Modified">
      <summary>
            分页位置发生改变标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.UpContentTop">
      <summary>
            分页线的位置超出内容顶端
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.PageLineInfo.UnderContentBottom">
      <summary>
            分页线位置超出内容底端
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLineInfo.GetHeaderRows(DCSoft.Writer.Dom.XTextTableElement)">
      <summary>
            获得表格的标题行列表
            </summary>
      <param name="table">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.PageLineInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.PageBreakElements">
      <summary>
            文档中所有的分页符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.SourceElement">
      <summary>
            直接导致分页的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.SourceElements">
      <summary>
            曾经导致分页的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.CurrentLine">
      <summary>
            产生分页的文档行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.CurrentPoistion">
      <summary>
            当前分页线位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.PageLineInfo.HeaderRows">
      <summary>
            标题行
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextBlockElement">
      <summary>
            文本块
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBlockElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBlockElement.ToPlaintString">
      <summary>
            返回表示纯文本内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextBlockElement.Text">
      <summary>
            文本值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentElement">
      <summary>
            文档内容元素类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs">
      <summary>
            执行UpdateContentElements使用的参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.SimpleTextMode">
      <summary>
            简单的纯文本操作模式，新增，删除纯文本内容。此时可以进行一些优化操作。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.PrivateStartContentIndex">
      <summary>
            开始刷新的元素在私有内容列表中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.FastMode">
      <summary>
            快速执行模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.UpdateElementsVisible">
      <summary>
            更新文档元素可见性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.FromReplaceElements">
      <summary>
            在XTextDocument.ReplaceElements()中调用的本功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs.UpdateParentContentElement">
      <summary>
            更新上级节点内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement.LayoutInvalidate">
      <summary>
            表格内容排版无效标志
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._PrivateLines">
      <summary>
            文本行列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._HasObjectElementInPrivateContent">
      <summary>
            在PrivateContent中是否有XTextObjectElement类型的元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._NeedRefreshPage">
      <summary>
            调用 RefreshPrivateContent 函数中是否需要重新分页的标志
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement.FlagNotCheckStopLine">
      <summary>
            不检查停止行的标记值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._ModifyParagraph">
      <summary>
            编辑操作中是否新增或删除了段落，若设置该属性则刷新文档时将强迫刷新整个文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement.RateForAutoFixFontSizeMode">
      <summary>
            自动缩放字体大小时计算出来的缩放比率,专门用于单元格的自动缩放字体的功能。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._LayoutVersion">
      <summary>
            排版信息版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._IsOnlyOneParagraphFlag">
      <summary>
            本容器元素是否只包含一个段落符号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._LastRemovedOldLines">
      <summary>
            最后一次删除的旧文档行数组
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._FastClientWidth">
      <summary>
            快速获取客户区宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._LastRuntimeExtenGridLineHeight">
      <summary>
            最后使用的扩展网格线的高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentElement._ParagraphsFlags">
      <summary>
            段落符号元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.Select">
      <summary>
            选中所有内容
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.SelectFirstLine">
      <summary>
            选择第一行内容
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RuntimeSpecifyFixedLineHeight">
      <summary>
            运行时使用的固定行高
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.IsFreeLayoutElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断文档元素是否是自由排版
            </summary>
      <param name="element">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.HasFreeLayoutElements">
      <summary>
            是否包含自由排版的文档元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.FreeLayoutElements">
      <summary>
            采用相对布局模式的文档元素对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.ShadowElements">
      <summary>
            内容中的影子元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.HasShadowElements">
      <summary>
            判断是否存在影子元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.AppendChildElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加子元素
            </summary>
      <param name="element">元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.HasPrivateLines">
      <summary>
            是否具有内部文档行信息
            </summary>
      <returns>是否有内部行</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.ContentHeightExcludeLastLineAdditionHeight">
      <summary>
            除去最后一行额外高度的内容高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateLineIndex(System.Int32)">
      <summary>
            更新文档行的行号
            </summary>
      <param name="startIndex">起始行号</param>
      <returns>本文档中累计的行数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.SetLinesInvalidateState(DCSoft.Writer.Dom.XTextLine,DCSoft.Writer.Dom.XTextLine)">
      <summary>
            设置多个文本行为无效状态
            </summary>
      <param name="startLine">开始行</param>
      <param name="endLine">结束行</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.GetCharOwnerPFlags">
      <summary>
            获得字符元素和所属段落符号的映射表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="objArgs">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.Clear">
      <summary>
            清空文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RemoveChild(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            删除子元素
            </summary>
      <param name="element">元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.FixElements">
      <summary>
            修正元素内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.AppendContentElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加内容元素
            </summary>
      <param name="element">文档元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.AppendContentElements(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            添加内容元素
            </summary>
      <param name="elements">文档元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElements(System.Boolean)">
      <summary>
            更新文档内容元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateContentElements(DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs)">
      <summary>
            更新文档内容元素列表
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.CreateParagraphs(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            创建段落对象
            </summary>
      <param name="elements">元素对象列表</param>
      <returns>创建的段落对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RefreshPrivateContent(System.Int32)">
      <summary>
            刷新内容
            </summary>
      <param name="StartIndex">刷新区域起始编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.IsCollapsedSection">
      <summary>
            当前对象是否为收缩状态的文档节对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RefreshPrivateContent(System.Int32,System.Int32,System.Boolean)">
      <summary>
            刷新私有内容
            </summary>
      <param name="StartIndex">需要刷新区域的起始序号</param>
      <param name="EndIndex">需要刷新区域的结束序号</param>
      <param name="fastMode">快速模式</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RefreshPrivateContent(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            刷新私有内容
            </summary>
      <param name="StartIndex">需要刷新区域的起始序号</param>
      <param name="EndIndex">需要刷新区域的结束序号</param>
      <param name="fastMode">快速模式</param>
      <param name="updateTextCaret">是否更新光标位置</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RefreshContentByElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Boolean)">
      <summary>
            针对若干个元素状态发生改变而刷新文档
            </summary>
      <param name="list">元素列表</param>
      <param name="PreserveSelection">是否保存选择状态</param>
      <param name="fastMode">是否是快速模式</param>
      <remarks>若某些操作导致文档中部分元素视图或大小发生改变但并未新增或删除文档元素,则可以
            使用本函数来高效率的更新文档而不必刷新整个文档的视图.</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.InnerExecuteLayout">
      <summary>
            对整个内容执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateHeightByContentHeight">
      <summary>
            根据文档内容高度来设置本文档元素的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.InvalidateContentHeight">
      <summary>
            声明文档内容高度发生改变，需要更新容器元素高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.NeedFixLinePositionForPageLine">
      <summary>
            判断是否需要进行为分页线而调整文档行的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.FixLinePositionForPageLine">
      <summary>
            为分页线而微小的修正文档行的位置
            </summary>
      <returns>操作是否导致了文档行的位置发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.HasHiddenLine">
      <summary>
            判断是否存在隐藏行
            </summary>
      <returns>是否存在隐藏行</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateLinePosition(DCSoft.Drawing.VerticalAlignStyle,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            更新文档行位置
            </summary>
      <param name="align">文档行垂直对齐方式</param>
      <param name="refreshLineState">刷新行状态</param>
      <param name="deeply">是否深入更新</param>
      <returns>是否有文档行的位置发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.CanAddElementForce(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断在占据整行的文档元素后能否强制添加元素
            </summary>
      <param name="element">文档元素对象</param>
      <returns>能否强制添加</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.GetRateForAutoFixFontSizeMode">
      <summary>
            DCWriter内部使用。获得自动缩放字体大小时计算出来的缩放比率,专门用于单元格的自动缩放字体的功能。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.ParticalRefreshLines(DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs)">
      <summary>
            进行部分分行操作
            </summary>
      <param name="args">参数</param>
      <returns>操作是否导致文档需要重新分页</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.FixLastLineHeight(DCSoft.Writer.Dom.XTextLine)">
      <summary>
            修正最后一个文本行的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.GetRuntimeSpecifyLineSpacing(DCSoft.Writer.Dom.XTextLine)">
      <summary>
            修正最后一个文本行的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.CreateLine(DCSoft.Writer.Dom.XTextLine,System.Collections.Generic.List{DCSoft.Writer.Dom.XTextLine})">
      <summary>
            创建文档行对象
            </summary>
      <param name="preLine">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RefreshPrivateLinesOwnerPage">
      <summary>
            刷新私有文本行所在的文档页对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.IsVisible(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            元素是否可见
            </summary>
      <param name="element">元素对象</param>
      <returns>是否可见</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.FixPageLine(DCSoft.Writer.Dom.PageLineInfo)">
      <summary>
            计算分页符
            </summary>
      <param name="info">分页符位置信息</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.DrawContent(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制文档内容
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.GetExtenGridLineHeight(DCSoft.Printing.PrintPage)">
      <summary>
            最后使用的运行时扩展网格线的高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.HasVisibleDCGridLine">
      <summary>
            是否具有可见的内容网格线。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.DrawGridLine(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Drawing.Color,System.Boolean,System.Boolean,System.Boolean,System.Single,System.Single,System.Single,System.Drawing.Drawing2D.DashStyle,System.Boolean)">
      <summary>
            绘制水平网格线
            </summary>
      <param name="args">事件参数</param>
      <param name="gridLineColor">网格线颜色</param>
      <param name="extendToTop">网格线延伸到元素顶部</param>
      <param name="extendToBottom">网格线是否延伸到元素的底部</param>
      <param name="drawLastLine">是否绘制最后一个网格线</param>
      <param name="specifyExtenGridLineStep">指定的扩展网格线的步长</param>
      <param name="specifyGridLineStep">指定网格线的步长</param>
      <param name="gridLineOffsetY">网格线纵向偏移量</param>
      <param name="gridLineStyle">网格线线型</param>
      <param name="detectOnly">检测模式,不绘制图形</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.UpdateElementBorderInfos(System.Boolean)">
      <summary>
            更新文档元素边框样式
            </summary>
      <param name="invalidateView">是否声明视图无效</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.RenderBorderInfos">
      <summary>
            文档元素边框信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.InnerGetParagraphInfos(System.Boolean,System.Boolean,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            DCWriter内部使用：为输出HTML/RTF而获得段落行分组信息
            </summary>
      <param name="includeSelectionOnly">是否只包含选择的内容</param>
      <param name="excludeLogicDeleted">是否排除逻辑删除的内容</param>
      <param name="clipRectangle">内容剪切矩形</param>
      <returns>分组信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.DeleteRedundant(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            删除区域结尾的空白内容
            </summary>
      <param name="whiteSpace">空白字符</param>
      <param name="tabSpace">制表符</param>
      <param name="paragraphFlag">空白段落符号</param>
      <param name="chineseWhitespace">中文空格（全角空格）</param>
      <param name="pageBreak">分页符</param>
      <param name="lineBreak">换行符</param>
      <returns>操作删除的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.DeleteRedundant(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            删除区域结尾的空白内容
            </summary>
      <param name="whiteSpace">空白字符</param>
      <param name="tabSpace">制表符</param>
      <param name="paragraphFlag">空白段落符号</param>
      <param name="chineseWhitespace">中文空格（全角空格）</param>
      <param name="pageBreak">分页符</param>
      <param name="lineBreak">换行符</param>
      <param name="fastMode">快速操作模式</param>
      <returns>操作删除的文档元素个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深入复制子对象</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.GridLine">
      <summary>
            网格线设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.SpecifyFixedLineHeight">
      <summary>
            指定的固定行高
            </summary>
      <remarks>
            若该属性大于0，则本容器中所有文档行的高度为指定值，不受段落设置影响。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement._ElementType">
      <summary>
            元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.IsEmpty">
      <summary>
            内容为空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.PrivateLines">
      <summary>
            元素私有的文本行列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ContentHeight">
      <summary>
            内容高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.PrivateContent">
      <summary>
            文档内容管理对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ContentVertialAlign">
      <summary>
            内容垂直对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.AlignLineHeightToGridLine">
      <summary>
            文档行的高度是否对齐到网格线高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ContentPartyStyle">
      <summary>
            内容部分样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.HasContentElement">
      <summary>
            内容是否为空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ParagraphsEOFs">
      <summary>
            获得区间包含的段落对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ParagraphCount">
      <summary>
            段落个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.ParagraphsFlags">
      <summary>
            获得区间包含的段落对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.OwnerDocument">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentElement.Text">
      <summary>
            返回表示对象的文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs">
      <summary>
            调用ParticalRefreshLines使用的参数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs.ForceRefreshAllContent">
      <summary>
            强制刷新所有的内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs.ForBlankDocument">
      <summary>
            从XTextDocumentContentElement.InnerExecuteLayoutForBlankDocument()调用本功能
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs.CheckStopLine">
      <summary>
            是否检查停止行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs.LayoutContentOnly">
      <summary>
            只对内容进行排版，不调整容器元素的高度和其他属性,不重绘文档视图。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextDocumentContentElement">
      <summary>
            文档级内容对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._RootParagraphFlag">
      <summary>
            段落树状列表的根段落对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._FreeParagraphFlagGroups">
      <summary>
            游离的段落列表组
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._HasObjectElementInContent">
      <summary>
            在Context列表中是否存在XTextObjectElement类型的元素
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._Selection">
      <summary>
            当前选择区域信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._Lines">
      <summary>
            文本行列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextDocumentContentElement._ContentViewWidth">
      <summary>
            内容视图宽度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.RootParagraphFlag">
      <summary>
            DCWriter内部使用。段落树状列表的根段落对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.RefreshParagraphListState(System.Boolean,System.Boolean)">
      <summary>
            重新设置段落列表状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.UpdateParagrahListIndex(DCSoft.Writer.Dom.XTextParagraphFlagElement)">
      <summary>
            更新段落在列表中的编号
            </summary>
      <param name="rootParagraph">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.InnerGetSelectionBorderElement(DCSoft.Writer.Dom.XTextElement@,DCSoft.Writer.Dom.XTextElement@)">
      <summary>
            获得选择区域边界元素
            </summary>
      <param name="startElement">开始元素</param>
      <param name="endElement">结束元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.FillContent">
      <summary>
            填充 Content 列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.UpdateContentElements(DCSoft.Writer.Dom.XTextContentElement.UpdateContentElementsArgs)">
      <summary>
            更新文档内容元素列表
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.CreateContentDocument(System.Boolean)">
      <summary>
            创建新的文档对象，使其包含本文档元素的复制品
            </summary>
      <param name="includeThis">是否包含本文档原始对象,对文档块元素该参数无意义</param>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.IsSelected(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            元素是否处于选择状态
            </summary>
      <param name="element">元素对象</param>
      <returns>是否选择</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.Focus">
      <summary>
            获得焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.CreateSelection(System.Int32,System.Int32)">
      <summary>
            创建被选择区域信息对象
            </summary>
      <param name="startIndex">开始位置</param>
      <param name="length">区域长度</param>
      <returns>生成的选择区域信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.SetSelectionRange(System.Int32,System.Int32)">
      <summary>
            设置选择区域
            </summary>
      <param name="firstIndex">开始序号</param>
      <param name="lastIndex">结束序号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.SetSelectionSpecifyCells(DCSoft.Writer.Dom.XTextTableCellElement,DCSoft.Writer.Dom.XTextTableCellElement)">
      <summary>
            更新文内容选择状态
            </summary>
      <param name="firstCell">第一个单元格</param>
      <param name="lastCell">最后一个单元格</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.SetSelection(System.Int32,System.Int32)">
      <summary>
            更新文内容选择状态
            </summary>
      <param name="startIndex">选择区域的起始位置</param>
      <param name="length">选择区域的包含文档内容元素的个数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.GetRange(System.Int32,System.Int32)">
      <summary>
            返回指定区域的文档区域
            </summary>
      <param name="StartIndex">区域开始位置</param>
      <param name="EndIndex">区域结束位置</param>
      <returns>区域对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.GetAllLines">
      <summary>
            获得所有的文档行对象，包括子容器元素的文档行
            </summary>
      <remarks>获得的文档行对象列表</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.GlobalUpdateLineIndex(DCSoft.Writer.Dom.XTextLineList)">
      <summary>
            更新文档行的编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.InnerForceExecuteLayout">
      <summary>
            对整个内容执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.InnerExecuteLayoutForBlankDocument">
      <summary>
            对整个内容执行重新排版操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.ParticalRefreshLines(DCSoft.Writer.Dom.ParticalRefreshLinesEventArgs)">
      <summary>
            重新分行
            </summary>
      <param name="args">参数</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.FillLines(DCSoft.Writer.Dom.XTextContentElement,DCSoft.Writer.Dom.XTextLineList)">
      <summary>
            收集各层元素包含的文档行对象
            </summary>
      <param name="contentElement">
      </param>
      <param name="lines">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.EditorRefreshViewExt(System.Boolean)">
      <summary>
            在编辑器中更新文档视图
            </summary>
      <param name="fastMode">快速模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.Clear">
      <summary>
            清空文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.FixPageLinePosition(System.Int32)">
      <summary>
            修正分页线位置
            </summary>
      <param name="pos">原始分页线位置</param>
      <returns>修正后的位置</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextDocumentContentElement.EditorDelete(System.Boolean)">
      <summary>
            方法无效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.FromWebClientHTML">
      <summary>
            DCWriter内部使用。文档是从WEB客户端HTML代码中获得的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.DocumentContentElement">
      <summary>
            元素所属的文档级内容元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.AcceptTab">
      <summary>
            无条件接受Tab字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.GridLine">
      <summary>
            返回空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.Width">
      <summary>
            宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.FreeParagraphFlagGroups">
      <summary>
            游离的段落列表组
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.ParagraphTreeInvalidte">
      <summary>
            段落树状结构无效标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.Content">
      <summary>
            文档内容管理对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.HasHeaderRow">
      <summary>
            文档中是否存在排版后的标题表格行对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.SpecifyLayoutElements">
      <summary>
            特别布局的文档元素，指浮于文字之上或沉于文字之下的图片元素。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.ContentElements">
      <summary>
            所有的可承载内容的容器元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.Selection">
      <summary>
            当前选择区域信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.HasSelection">
      <summary>
            判断是否存在被用户选择的内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.HasSelectionWithouLogicDeleted">
      <summary>
            判断是否存在没有被逻辑删除的被选择的元素内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.CurrentLine">
      <summary>
            当前行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.CurrentElement">
      <summary>
            当前元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.CurrentParagraphEOF">
      <summary>
            当前段落对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.Lines">
      <summary>
            文本行列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.ViewWidth">
      <summary>
            内容视图宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.StyleIndex">
      <summary>
            废除
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextDocumentContentElement.PagePartyStyle">
      <summary>
            返回内容部分所属样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentRender">
      <summary>
            文档内容呈现器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentRender._NativeDrawCharFormat">
      <summary>
            绘制字符使用的格式化对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextContentRender._DrawCharFormat">
      <summary>
            绘制字符使用的格式化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.DrawTrackMark(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Boolean,System.Boolean)">
      <summary>
            绘制痕迹标记
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
      <param name="background">绘制背景模式</param>
      <param name="showNewContentMarkForFirstHistory">是否为第一个历史记录的新增内容而绘制新增标记</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.DrawBackground(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Drawing.RectangleF)">
      <summary>
            绘制文档元素背景
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
      <param name="bounds">要绘制背景的区域</param>
      <returns>是否真的执行了绘图操作</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.RenderBorder(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Drawing.RectangleF)">
      <summary>
            绘制元素边框
            </summary>
      <param name="element">元素对象</param>
      <param name="args">绘制事件参数</param>
      <param name="bounds">边界</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.DrawBackground(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象背景
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.ClearCharSizeBuffer">
      <summary>
            清空字符大小缓存区
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRender.StaticMeasureFormat">
      <summary>
            计算字体大小使用的字体格式化对象。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRender.Document">
      <summary>
            对象所属文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRender.UseGDIFontSize">
      <summary>
            使用GDI模式来计算字符大小
            </summary>
      <remarks>GDI+和GDI计算字符的大小是不一样的，因此相同的RTF在
            写RichTextBox控件、字板或者Word中排版就和在本程序中的排版不一样。因此本程序提供
            一种使用GDI计算字符大小的方式，使得相同的文档在本程序和RichTextBox控件中显示的
            保持高度的相似性。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRender.EnableCharSizeBuffer">
      <summary>
            允许缓存字母大小
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextFieldElementBase">
      <summary>
            字段元素
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextFieldElementBase._InnerBackgroundTextElements">
      <summary>
            背景文档元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.FixInnerElementStyleIndex">
      <summary>
            修复内部元素的样式编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.GetRuntimeElements">
      <summary>
            DCWriter内部使用。获得运行时的子元素列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.IsParentOrSupParent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断指定元素是否是本元素的父节点或者更高层次的父节点。
            </summary>
      <param name="element">要判断的元素</param>
      <returns>是否是父节点或者更高级的父节点</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.CheckStartEndElement">
      <summary>
            初始化起始元素和结束元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.Select">
      <summary>
            选择文档元素
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.SelectWithoutBorderElement">
      <summary>
            选择输入域的正文内容，但不选中两边的边界元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.IsVisibleInHtml(DCSoft.Writer.Serialization.Html.IWriterHtmlDocumentWriter)">
      <summary>
            元素在HTML文档中是否可见
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.RuntimePrintBackgroundText">
      <summary>
            运行时的是否打印背景文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.FastIsBackgroundTextElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            快速判断是否是背景文本元素,仅在特定情况下是可靠的。
            </summary>
      <param name="element">文档元素对象</param>
      <returns>是否是背景文本元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.ResetCanDrawBackgroundText">
      <summary>
            重置判断能否绘制背景文字的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.CanDrawBackgroundText(DCSoft.Writer.Dom.InnerDocumentRenderMode)">
      <summary>
             判断能否绘制背景文本元素
             </summary>
      <param name="renderMode">绘制模式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.IsBackgroundTextElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断是否是背景文本元素
            </summary>
      <param name="element">文档元素对象</param>
      <returns>是否是背景文本元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.RefreshSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            重新计算文档元素内容大小
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.OnStyleChanged">
      <summary>
            处理元素样式发生改变事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.FixDomState">
      <summary>
            修复文档DOM结构数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.Focus">
      <summary>
            获得输入焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            添加文档内容
            </summary>
      <param name="content">
      </param>
      <param name="privateMode">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.XTextContainerElement_AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            底层的添加视图内容元素
            </summary>
      <param name="content">
      </param>
      <param name="privateMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.InvalidateView">
      <summary>
            声明用户界面无效，需要重新绘制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextFieldElementBase.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">复制品</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.RuntimeBackgroundText">
      <summary>
            运行时使用的背景文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.EndingLineBreak">
      <summary>
            输入域结尾处强制换行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.StartBorderText">
      <summary>
            开始边框元素文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.EndBorderText">
      <summary>
            结束边框元素文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.BorderElementColor">
      <summary>
            边框元素颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.BorderElementColorValue">
      <summary>
            边框元素颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.SizeInvalid">
      <summary>
            元素大小无效标记
            </summary>
      <remarks>若设置该属性,则元素的大小发生改变,系统需要从该元素
            开始重新进行文档排版和分页</remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.OwnerDocument">
      <summary>
            文档元素所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.StartElementAbsLeft">
      <summary>
            起始元素在文档中的绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.StartElementAbsTop">
      <summary>
            起始元素在文档中的绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.AbsLeft">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.AbsTop">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.OwnerPageIndex">
      <summary>
            获得一个从0开始计算的当前元素所在的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.StartElement">
      <summary>
            起始元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.EndElement">
      <summary>
            结束元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.IsFullSelect">
      <summary>
            判断所有的内容是否都处于被选择区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.TextValue">
      <summary>
            文档域文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.TextColor">
      <summary>
            文字颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.TextColorString">
      <summary>
            字符串格式的背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.BackgroundTextItalic">
      <summary>
            背景文本采用斜体样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.RuntimeBackgroundTextColor">
      <summary>
            运行时的背景文字颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.BackgroundTextColor">
      <summary>
            背景文字颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.BackgroundTextColorString">
      <summary>
            字符串格式的背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.InnerBackgroundTextElements">
      <summary>
            背景文档元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.FirstContentElement">
      <summary>
            文档中第一个内容元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextFieldElementBase.LastContentElement">
      <summary>
            文档中最后一个内容元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextInputFieldElementBase">
      <summary>
            基础的纯文本数据输入域,DCWriter内部使用。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElementBase.RateForAutoFixFontSizeMode">
      <summary>
            自动缩放字体大小时计算出来的缩放比率,专门用于输入域的自动缩放字体的功能。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElementBase._StartContentElementIndex">
      <summary>
            开始显示的内容元素编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElementBase._LastFixedContentWidth">
      <summary>
            最后一次使用的内容固定限制宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextInputFieldElementBase.BeforeOnContentChangedOnce">
      <summary>
            DCWriter内部使用。内置的内容发生改变前的处理委托对象，而且该委托对象执行一遍后就删除掉。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeTabStop">
      <summary>
            获取或设置一个运行时的值，该值指示用户能否使用 Tab 键将焦点放到该元素中上。 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.CollecProtectedElements(DCSoft.Writer.Dom.ContentProtectedInfoList,System.Int32)">
      <summary>
            收集受保护的文档元素对象
            </summary>
      <param name="list">
      </param>
      <param name="limitedCount">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ContentWidthMoreThanSpecifyWidth">
      <summary>
            文档内容是否超过指定宽度
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeSpecifyWidth">
      <summary>
            运行时的固定宽度设置值
            </summary>
      <returns>数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeAlignment">
      <summary>
            运行时使用的内容对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.GetRuntimeAutoFixFontSize">
      <summary>
            运行时的是否运行缩小字体自动填充
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.GetRateForAutoFixFontSizeMode">
      <summary>
            DCWriter内部使用。获得自动缩放字体大小时计算出来的缩放比率,专门用于单元格的自动缩放字体的功能。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.UpdateForAutoFixFontSize(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            为自动缩放字体而更新状态，DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.SetFontSizeZoomRateRaw(DCSoft.Writer.Dom.XTextElement[],System.Single,DCSoft.Writer.Dom.InnerDocumentPaintEventArgs,System.Boolean)">
      <summary>
            内部的设置字体缩小比率
            </summary>
      <param name="rate">缩放比率</param>
      <param name="pe">参数</param>
      <param name="refreshLayout">是否刷新排版</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.FixBorderElementWidth">
      <summary>
            修正结束元素的宽度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeEventExpressions">
      <summary>
            运行时使用的事件表达式列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.HasStartBorderTextOrLabelText">
      <summary>
            判断是否存在标签文本或开始边界文本
            </summary>
      <returns>是否存在文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.HasEndBorderTextOrUnitText">
      <summary>
            判断是否存在单位文本或结束边界文本
            </summary>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeAdornText">
      <summary>
            扩展提示文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.GetNextFocusFieldElement">
      <summary>
            获得下一个可以获得焦点的输入域对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.AfterLoad(DCSoft.Writer.ElementLoadEventArgs)">
      <summary>
            内部的文档加载后的处理
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.TextToValue(System.String)">
      <summary>
            将前台文本转换为后台数值
            </summary>
      <param name="text">文本</param>
      <returns>数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ValueToText(System.String,System.Boolean)">
      <summary>
            将后台数据转换为前台文本
            </summary>
      <param name="Value">原始文本</param>
      <param name="structMode">严格模式</param>
      <returns>要显示的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.GetDisplayText(System.String)">
      <summary>
            将数值转换为文本
            </summary>
      <param name="Value">数值</param>
      <returns>转换后的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.CreateDataBindingDescriptor">
      <summary>
            创建数据源绑定信息对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.UpdateByDataBindingDescriptor(DCSoft.Writer.FieldValueDescriptor,System.Boolean)">
      <summary>
            根据数据源绑定信息更新对象
            </summary>
      <param name="descriptor">
      </param>
      <param name="fastMode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.WriteDataSource">
      <summary>
            保持字段域数据到数据源中
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimePrintBackgroundText">
      <summary>
            运行时的是否打印背景文字
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.SetInnerTextFastExt(System.String,DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            快速设置输入域的文本内容
            </summary>
      <param name="txt">新的文本内容</param>
      <param name="newTextStyle">新文本使用的样式</param>
      <returns>操作生成的文档元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.IsEncrypt(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断文档元素是否需要加密显示
            </summary>
      <param name="element">文档元素对象</param>
      <returns>是否需要加密显示</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.EditorRefreshView">
      <summary>
            刷新视图
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.AppendViewContentElement(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs)">
      <summary>
            添加内容元素
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.StartContentElementIndex">
      <summary>
            第一个显示的内容元素编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.EndContentElementIndex">
      <summary>
            最后一个显示的内容元素编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.AppendViewContentElementWithFixedContentWidth(DCSoft.Writer.Dom.XTextContainerElement.AppendViewContentElementArgs,System.Single,System.Int32)">
      <summary>
            固定内容宽度模式添加显示内容,当以固定宽度模式添加内容
            时可能需要对内容进行截取以保证固定内容宽度
            </summary>
      <param name="args">参数</param>
      <param name="fixedContentWidth">
      </param>
      <param name="specifyStartIndex">指定的开始区域</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ReverseFillForFixSpecifyWidth(System.Boolean,System.Boolean)">
      <summary>
            由于固定限制长度而反向填充输入域文档内容
            </summary>
      <param name="updateContent">是否更新文档内容</param>
      <param name="updateView">是否更新文档视图</param>
      <returns>操作是否改变了文档视图状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.EnsureInPrivateContent(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            检查指定文档元素，使其出现在容器对象的私有内容列表中。
            </summary>
      <param name="element">
      </param>
      <param name="updateContent">
      </param>
      <param name="updateView">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.UpdateForStartContentIndexChanged(System.Boolean,System.Boolean)">
      <summary>
            由于StartContentIndex发生改变而更新文档对象
            </summary>
      <param name="updateContent">更新文档内容结构</param>
      <param name="updateView">更新视图</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.OnContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            处理字段内容发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ExecuteEventExpressions(System.Boolean)">
      <summary>
            执行动作表达式
            </summary>
      <param name="loadingDocument">是否是在加载文档的时候执行表达式</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.OnGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理获得输入焦点事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.OnLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理失去输入焦点事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.OnMouseEnter(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理鼠标进入事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.OnMouseLeave(DCSoft.Writer.ElementEventArgs)">
      <summary>
            处理鼠标离开事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.GetHighlightInfos">
      <summary>
            获得高亮度显示区域列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.SetEditorText(DCSoft.Writer.Dom.SetContainerTextArgs)">
      <summary>
            设置文本内容
            </summary>
      <param name="args">参数</param>
      <returns>是否修改内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ClearValidateResult(System.Boolean)">
      <summary>
            清除数据校验结果
            </summary>
      <param name="fastMode">快速操作模式</param>
      <returns>操作是否改变了输入域状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextInputFieldElementBase.ToDebugString">
      <summary>
            返回调试信息文本
            </summary>
      <returns>返回的文本</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.EnableValueValidate">
      <summary>
            是否启用数值校验功能.默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.BorderTextPosition">
      <summary>
            边框文本对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.FastInputMode">
      <summary>
            快速录入方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.TabStop">
      <summary>
            获取或设置一个值，该值指示用户能否使用 Tab 键将焦点放到该元素中上。 
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeMoveFocusHotKey">
      <summary>
            实际使用的移动焦点所使用的快捷键样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.IsTopLevelField">
      <summary>
            是否为最顶端的输入域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.TabIndex">
      <summary>
            焦点切换序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.SpecifyWidth">
      <summary>
            输入域指定宽度,若大于0则输入域宽度不小于该值，而且当内容很多时，自动变宽。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.Alignment">
      <summary>
            内容对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.AutoFixFontSize">
      <summary>
            允许缩小字体自动填充
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.Readonly">
      <summary>
            内容只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.ContentEditable">
      <summary>
            内容是否可编辑
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.DefaultEventExpression">
      <summary>
            默认使用的事件表达式字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.EventExpressions">
      <summary>
            事件表达式列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.UnitText">
      <summary>
            单位文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.LabelText">
      <summary>
            标签文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.UserEditable">
      <summary>
            用户可以直接修改文本域中的内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.DisplayName">
      <summary>
            显示的名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.DisplayFormat">
      <summary>
            显示的格式化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.SelectedSpellCode">
      <summary>
            选择项目时使用的拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.InnerValue">
      <summary>
            内置的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.PrintBackgroundText">
      <summary>
            打印背景文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.BackgroundText">
      <summary>
            背景文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.HasBackgroundText">
      <summary>
            是否具有背景文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeBackgroundText">
      <summary>
            运行时使用的背景文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.ViewEncryptType">
      <summary>
            内容加密等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.BorderVisible">
      <summary>
            边框元素是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.EnableHighlight">
      <summary>
            是否允许高亮度显示状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.RuntimeEnableHighlight">
      <summary>
            运行时的是否允许高亮度显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextInputFieldElementBase.CurrentHighlightState">
      <summary>
            当前高亮度状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.TableRowCloneType">
      <summary>
            表格行复制模式
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableRowCloneType.Default">
      <summary>
            默认方式，只复制表格行及单元格，不复制内容。对于单元格是继承上级设置。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableRowCloneType.ContentWithClearField">
      <summary>
            复制内容，但删除输入域中的内容。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.TableRowCloneType.Complete">
      <summary>
            完整的复制，包括输入域中的内容。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentRangeList">
      <summary>
            文档区域对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextContentRangeList.IntersectsWith(System.Int32,System.Int32)">
      <summary>
            判断区域列表是否和制定的区域有交集
            </summary>
      <param name="startIndex">判断的区域的开始编号</param>
      <param name="endIndex">判断的区域的结束编号</param>
      <returns>是否有交集</returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextContentRange">
      <summary>
            文档区域对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRange.StartIndex">
      <summary>
            区域开始编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRange.Length">
      <summary>
            区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextContentRange.EndIndex">
      <summary>
            结束编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.ContentRangeMode">
      <summary>
            内容区域样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentRangeMode.Content">
      <summary>
            文档内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentRangeMode.Cell">
      <summary>
            纯表格单元格
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.ContentRangeMode.Mixed">
      <summary>
            混合模式，包括文档内容和表格单元格
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentContentWriter">
      <summary>
            文本文档书写器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentContentWriter.bolIncludeSelectionOnly">
      <summary>
            只包含选择的部分
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentWriter.IsVisible(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            元素是否可见
            </summary>
      <param name="element">元素</param>
      <returns>是否可见</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentWriter.WriteItems(DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            输出文档元素集合
            </summary>
      <param name="items">文档元素集合</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.DocumentContentWriter.WriteElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            输出一个元素
            </summary>
      <param name="element">元素对象</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.IncludeSelectionOnly">
      <summary>
            只包含选择的部分
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.Documents">
      <summary>
            要输出的文档对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.MainDocument">
      <summary>
            获得主文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.ClipRectangle">
      <summary>
            剪切矩形
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.DocumentContentWriter.Offset">
      <summary>
            坐标位置偏移量
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentEventStyles">
      <summary>
            文档用户界面事件类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.None">
      <summary>
            无效类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseDown">
      <summary>
            鼠标按键按下事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseMove">
      <summary>
            鼠标移动事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseUp">
      <summary>
            鼠标按键松开事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseClick">
      <summary>
            鼠标单击事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseDblClick">
      <summary>
            鼠标双击事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.KeyDown">
      <summary>
            键盘按键按下事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.KeyPress">
      <summary>
            键盘字符事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.KeyUp">
      <summary>
            键盘按键松开事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.LostFocus">
      <summary>
            失去输入焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.ControlLostFoucs">
      <summary>
            由于控件失去输入焦点而触发的文档元素失去输入焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.LostFocusExt">
      <summary>
            增强型的失去输入焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.GotFocus">
      <summary>
            获得输入焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.ControlGotFoucs">
      <summary>
            由于控件获得输入焦点而触发的文档元素获得输入焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseEnter">
      <summary>
            鼠标光标进入事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.MouseLeave">
      <summary>
            鼠标光标离开事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.DocumentEventStyles.DefaultEditMethod">
      <summary>
            执行默认编辑方法
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.DocumentEventHandelr">
      <summary>
            文档事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.LinkClickEventHandler">
      <summary>
            文档外部链接点击事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.LinkClickEventArgs">
      <summary>
            文档链接点击事件参数类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.LinkClickEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">文档对象</param>
      <param name="e">元素</param>
      <param name="link">链接目标</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.LinkClickEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.LinkClickEventArgs.Element">
      <summary>
            触发链接的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.LinkClickEventArgs.Link">
      <summary>
            链接目标地址
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.MouseCaptureInfo">
      <summary>
            鼠标捕获信息状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.MouseCaptureInfo.#ctor(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            初始化对象
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.MouseCaptureInfo.UsedFlag">
      <summary>
            此对象发生
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MouseCaptureInfo.LastX">
      <summary>
            终点X坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.MouseCaptureInfo.LastY">
      <summary>
            终点Y坐标
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextBookmark">
      <summary>
            书签对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBookmark.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBookmark.HandleDocumentEvent(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            处理文档事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextBookmark.Active">
      <summary>
            激活书签
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextBookmark.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextEOFElement">
      <summary>
            文档结束标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextEOFElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextEOFElement.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="doc">对象所属文本</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextObjectElement">
      <summary>
            嵌入在文档中的对象基础类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextObjectElement.DragBoxSize">
      <summary>
            拖拽小矩形的边长 
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextObjectElement._ContentVersion">
      <summary>
            内容版本号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextObjectElement._Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextObjectElement.LastDragBounds">
      <summary>
            DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.GetRuntimeEnabledTransprentEncrypt">
      <summary>
            运行时的启用透明加密功能。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.RuntimeZOrderStyle">
      <summary>
            运行时的Z轴位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.RuntimeAdornText">
      <summary>
            运行时使用的扩展标记文字
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.RuntimeVAlign">
      <summary>
            运行时使用的垂直对齐方式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.RuntimeLayoutable">
      <summary>
            元素占据排版位置，能参与文档内容排版。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.RuntimeScriptItems">
      <summary>
            返回运行时使用的脚本信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.GetToolTipInfo">
      <summary>
            获得提示文本信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.GetAttribute(System.String)">
      <summary>
            获得指定名称的属性值
            </summary>
      <param name="name">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.HasAttribute(System.String)">
      <summary>
            判断是否存在指定名称的属性
            </summary>
      <param name="name">属性名</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.HasAttributes">
      <summary>
            判断是否存在自定义属性
            </summary>
      <param name="name">属性名</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.OnResize">
      <summary>
            元素大小发生改变
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.CreateDragRectangle">
      <summary>
            创建一个拖拽矩形对象
            </summary>
      <returns>新的拖拽矩形对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.Draw(DCSoft.Writer.Dom.InnerDocumentPaintEventArgs)">
      <summary>
            绘制对象
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.GetDragHit(System.Int32,System.Int32)">
      <summary>
            DCWriter内部使用。进行控制点测试
            </summary>
      <param name="x">测试点X坐标</param>
      <param name="y">测试点Y坐标</param>
      <returns>测试点所在控制点编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.ShowDragRect">
      <summary>
            判断能否使用鼠标拖拽该对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextObjectElement.Clone(System.Boolean)">
      <summary>
            复制对象
            </summary>
      <param name="Deeply">是否深度复制</param>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.IsUnderEncrypted">
      <summary>
            内容仍然处于被加密状态，很多操作无法执行。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.EncryptContent">
      <summary>
            加密导致的内容,DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ContentVersion">
      <summary>
            元素内容版本号，当元素内容发生任何改变时，该属性值都会改变
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.StateVersion">
      <summary>
            表示文档元素状态版本号。本属性供第三方调用。编辑器内核不使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ToolTip">
      <summary>
            提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.EmitDataFieldName">
      <summary>
            绑定的内置数据字段名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.EmitDataSource">
      <summary>
            内置数据源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.LayoutWidth">
      <summary>
            文档内容布局时使用的宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.LayoutHeight">
      <summary>
            文档内容布局时使用的高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.AbsLeft">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.AbsTop">
      <summary>
            对象在文档中的绝对坐标位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.AbsPosition">
      <summary>
            元素在文档视图中的绝对坐标值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.OffsetX">
      <summary>
            X方向偏移量，只有ZOrderStyle=UnderText、InFrontOfText时才有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.OffsetY">
      <summary>
            Y方向偏移量，只有ZOrderStyle=UnderText、InFrontOfText时才有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.InnerEditorOffset">
      <summary>
            内部使用的设置偏移量的属性。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ZOrderStyle">
      <summary>
            元素Z轴位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.WebClientSelected">
      <summary>
            在WEB客户端选中状态.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.JavaScriptForClick">
      <summary>
            客户端单击执行的javascript脚本。当Options.BehaviorOptions.EnableExpression为false时，本属性无效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.JavaScriptForDoubleClick">
      <summary>
            双击时执行的javascript脚本。当Options.BehaviorOptions.EnableExpression为false时，本属性无效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.PropertyExpressions">
      <summary>
            成员表达式列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ValueExpression">
      <summary>
            数值表达式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Visible">
      <summary>
             元素是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Printable">
      <summary>
            本属性已经淘汰，请使用PrintVisibility属性。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.PrintVisibility">
      <summary>
            打印时的可见性设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ScriptItems">
      <summary>
            脚本项目列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.PreviewImage">
      <summary>
            预览内容用的图片，用于快速在用户界面上绘制文档内容，打印的时候则尽量不用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.LinkInfo">
      <summary>
            文档链接信息
            </summary>
      <remarks>
            获得或设置该元素的链接目标。当该属性为空时，元素没有链接样式，当该属性不为空，则该元素具有热点，
            在预览文档时，用户鼠标移动到该元素上，则鼠标光标显示为手形，并且显示热点提示文本。当
            用户点击该元素，则触发预览控件的热点点击事件。当文档输出为HTML文档时，则该元素输出的内
            容上添加超链接并链接到该属性指定的目标。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.ContentReadonly">
      <summary>
            内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.RuntimeContentReadonly">
      <summary>
            运行时的内容是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Deleteable">
      <summary>
            对象能否被删除
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.UserFlags">
      <summary>
            用户标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.EventTemplateName">
      <summary>
            文档元素事件模板名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Attributes">
      <summary>
            用户自定义属性列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Resizeable">
      <summary>
            用户是否可以改变对象大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Enabled">
      <summary>
            对象是否可用,可以接受鼠标键盘事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.StringTag">
      <summary>
            附加的字符串数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.Tag">
      <summary>
            附加的对象数据,这个数据不保存到文档
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.MouseClickToSelect">
      <summary>
            鼠标点击时选择元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextObjectElement.EditorSize">
      <summary>
            专为编辑器提供的对象大小属性
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextParagraphElement">
      <summary>
            段落对象
            </summary>
      <remarks>本对象只在加载或保存文档是临时生成。</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextParagraphElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextParagraphElement.TemporaryFlag">
      <summary>
            临时标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextRange">
      <summary>
            文档区域对象
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Compare(DCSoft.Writer.Dom.XTextRange,DCSoft.Writer.Dom.XTextRange)">
      <summary>
            判断两个区域的设置是否相等
            </summary>
      <param name="range1">区域1</param>
      <param name="range2">区域2</param>
      <returns>两者是否等价</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElementList,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="elements">元素对象列表</param>
      <param name="startIndex">区域的开始序号</param>
      <param name="length">区域的长度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.#ctor(DCSoft.Writer.Dom.XTextDocumentContentElement,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素</param>
      <param name="startIndex">开始位置</param>
      <param name="length">长度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.#ctor(DCSoft.Writer.Dom.XTextDocumentContentElement,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素</param>
      <param name="startElement">开始元素</param>
      <param name="endElement">结束元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Refresh(DCSoft.Writer.Dom.XTextDocumentContentElement,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            刷新状态
            </summary>
      <param name="element">文档元素</param>
      <param name="startElement">开始元素</param>
      <param name="endElement">结束元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Refresh(DCSoft.Writer.Dom.XTextDocumentContentElement,System.Int32,System.Int32)">
      <summary>
            刷新状态
            </summary>
      <param name="element">文档元素</param>
      <param name="startIndex">开始序号</param>
      <param name="length">长度</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Invalidate">
      <summary>
            设置状态无效
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.SafeGet(System.Int32)">
      <summary>
            安全的获得指定序号的元素
            </summary>
      <param name="index">序号</param>
      <returns>元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.GetElements">
      <summary>
            获得区域包含的元素列表
            </summary>
      <returns>创建的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Contains(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            判断指定的元素是否在区域中
            </summary>
      <param name="element">元素对象</param>
      <returns>是否在区域中</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.Contains(System.Int32)">
      <summary>
            判断是否包含指定视图编号
            </summary>
      <param name="viewIndex">视图编号</param>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.SetParagraphStyle(DCSoft.Writer.Dom.DocumentContentStyle)">
      <summary>
            设置段落样式
            </summary>
      <param name="newStyle">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.GetEnumerator">
      <summary>
            获得元素的枚举器
            </summary>
      <returns>枚举器</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextRange.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Elements">
      <summary>
            参与的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.StartIndex">
      <summary>
            区域开始序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Length">
      <summary>
            区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.StartElement">
      <summary>
            区域起始元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.EndElement">
      <summary>
            区域结束元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Item(System.Int32)">
      <summary>
            获得区域中指定序号的元素
            </summary>
      <param name="index">序号</param>
      <returns>指定的元素</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.FirstElement">
      <summary>
            区域中第一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.LastElement">
      <summary>
            区域中最后一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Text">
      <summary>
            获得纯文本内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.Style">
      <summary>
            当前文档样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextRange.ParagraphsEOFs">
      <summary>
            获得区间包含的段落对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextStringElement">
      <summary>
            文档字符串对象
            </summary>
      <remarks>本对象只是在加载或保存文档时临时生成。</remarks>
    </member>
    <member name="T:DCSoft.Writer.Dom.XTextStringElement.MyXMLString">
      <summary>
            处理字符串XML序列化的类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.MyXMLString.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.XTextStringElement._PFlag">
      <summary>
            所关联的段落符号原始
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">文本</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.SetWhiteSpaceLength">
      <summary>
            设置空格长度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.TextIsEmpty">
      <summary>
            判断文本内容是否为空
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.GetOutputText(System.Boolean)">
      <summary>
            获得输出文本
            </summary>
      <param name="includeSelectionOnly">只包含被选择的部分</param>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.CanMerge(DCSoft.Writer.Dom.XTextCharElement)">
      <summary>
            判断对象能否合并一个字符元素对象
            </summary>
      <param name="c">字符元素对象</param>
      <returns>能否合并</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.Merge(DCSoft.Writer.Dom.XTextCharElement,System.String)">
      <summary>
            合并一个字符元素对象
            </summary>
      <param name="c">字符元素对象</param>
      <param name="txt">文本</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.Merge(DCSoft.Writer.Dom.XTextCharElement,System.Char)">
      <summary>
            合并一个字符元素对象
            </summary>
      <param name="c">字符元素对象</param>
      <param name="cv">字符值</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.XTextStringElement.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ValueBinding">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ReferencedDataName">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ValueExpression">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.VisibleExpression">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ValidateStyle">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.UserFlags">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.TransparentEncryptMode">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ScriptItems">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ToolTip">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.PrintVisibility">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.MaxInputLength">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.LimitedInputChars">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.PropertyExpressions">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.JavaScriptForClick">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.JavaScriptForDoubleClick">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.HiddenPrintWhenEmpty">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.EnablePermission">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.Expressions">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.EnableValueValidate">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.EmitDataFieldName">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.EmitDataSource">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ElementIDForEditableDependent">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.Deleteable">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.DefaultValueForValueBinding">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.DataName">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.DataFeedback">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.CopySource">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ContentReadonlyExpression">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.CanBeReferenced">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.AutoHideMode">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.AutoFixTextMode">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.AcceptTab">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.BringoutToSave">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.Attributes">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.Elements">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.__ElementsForSerialize2">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.ElementsForSerialize">
      <summary>
            无效的属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.OwnerParagraphEOF">
      <summary>
            对象所属段落符号元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.MergeForPrintHtml">
      <summary>
            为输出打印格式的HTML而进行合并
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.StartElement">
      <summary>
            开始字符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.EndElement">
      <summary>
            结束字符元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.IsBackgroundText">
      <summary>
            是否为背景文字模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.WhiteSpaceLength">
      <summary>
            空格长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.Text">
      <summary>
            对象文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.XTextStringElement.HasContent">
      <summary>
            对象是否有内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoStyleIndex">
      <summary>
            重复/撤销设置元素的样式编号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoStyleIndex.#ctor(DCSoft.Writer.Dom.XTextElement,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="element">操作的文档元素</param>
      <param name="oldStyleIndex">旧样式编号</param>
      <param name="newStyleIndex">新样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoStyleIndex.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoStyles">
      <summary>
            撤销操作类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.None">
      <summary>
            无样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.Size">
      <summary>
            元素大小
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.EditorSize">
      <summary>
            设计器中的元素大小
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.TableRowSpecifyHeight">
      <summary>
            表格行高度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.CreatorIndex">
      <summary>
            创建者用户编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoStyles.DeleterIndex">
      <summary>
            删除者用户编号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.UndoMethodTypes">
      <summary>
            撤销操作方法类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.None">
      <summary>
            无任何操作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.RefreshPages">
      <summary>
            重新分页
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.RefreshLayout">
      <summary>
            刷新文档布局
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.RefreshDocument">
      <summary>
            刷新整个文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.UpdateDocumentView">
      <summary>
            刷新文档视图
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.Invalidate">
      <summary>
            重新绘制整个文档
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.RefreshComment">
      <summary>
            刷新文档批注
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.RefreshParagraphTree">
      <summary>
            刷新段落层次树
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.UndoMethodTypes.UpdateExpressionExecuter">
      <summary>
            更新表达式引擎
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup._Document">
      <summary>
            本对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup.Document">
      <summary>
            本对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup.OldSelectionStart">
      <summary>
            开始登记操作时的文档选择区域开始序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup.OldSelectionLength">
      <summary>
            开始登记操作时的文档选择区域长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup.NewSelectionStart">
      <summary>
            结束登记操作时的文档选择区域开始序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoGroup.NewSelectionLength">
      <summary>
            结束登记操作时的文档选择区域长度
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoTableInfo">
      <summary>
            重做、撤销表格结构信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoTableInfo.CompressElements">
      <summary>
            压缩对象其中保存的单元格子元素对象列表的备份信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoSetDefaultFont">
      <summary>
            设置默认字符撤销信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetDefaultFont.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Drawing.XFontValue,System.Drawing.Color,DCSoft.Drawing.XFontValue,System.Drawing.Color)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="of">旧字体</param>
      <param name="oc">旧文本颜色</param>
      <param name="nf">新字体</param>
      <param name="nc">新文本颜色</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetDefaultFont.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetDefaultFont.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重做操作
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoHeaderRow.NewHeaderStyles">
      <summary>
            新标题行样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoSetDocumentProperty">
      <summary>
            设置文档属性
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetDocumentProperty.#ctor(DCSoft.Writer.Dom.XTextDocument,System.String,System.Object,System.Object)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="propertyName">属性名称</param>
      <param name="oldValue">旧属性值</param>
      <param name="newValue">新属性值</param>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements.intIndex">
      <summary>
            容器元素对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements._OldElements">
      <summary>
            旧元素列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements._NewElements">
      <summary>
            新元素列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements.#ctor(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            初始化对象
            </summary>
      <param name="container">容器元素对象</param>
      <param name="index">发生操作的序号</param>
      <param name="oldElements">旧元素列表</param>
      <param name="newElements">新元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重复操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoReplaceElements.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoSetElementStyle">
      <summary>
            撤销、重复设置段落样式的对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetElementStyle.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetElementStyle.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重做操作
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoSetElementStyle.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoSetElementStyle.ParagraphStyle">
      <summary>
            设置段落样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList">
      <summary>
            撤销操作列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.intOldSelectionStart">
      <summary>
            开始登记操作时的文档选择区域开始序号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.intOldSelectionLength">
      <summary>
            开始登记操作时的文档选择区域长度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.intNewSelectionStart">
      <summary>
            结束登记操作时的文档选择区域开始序号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.intNewSelectionLength">
      <summary>
            结束登记操作时的文档选择区域长度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.myDocument">
      <summary>
            本对象所属的文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.#ctor(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="document">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.Clear">
      <summary>
            内容清空事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.ForceUseGroup">
      <summary>
            强制使用撤销对象组操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.CreateGroup">
      <summary>
            创建一个撤销对象组对象
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddContentRefreshInfo(DCSoft.Writer.Dom.XTextContentElement,System.Int32)">
      <summary>
            添加刷新的区域信息
            </summary>
      <param name="contentElement">
      </param>
      <param name="startIndex">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.BeginLog">
      <summary>
            开始登记撤销信息
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.CancelLog">
      <summary>
            取消登记撤销信息操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.EndLog">
      <summary>
            结束登记撤销信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddMethod(DCSoft.Writer.Dom.Undo.UndoMethodTypes)">
      <summary>
            添加额外执行的方法
            </summary>
      <param name="method">方法类型</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddInsertElement(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加一个插入元素操作信息
            </summary>
      <param name="c">容器元素</param>
      <param name="index">插入的序号</param>
      <param name="element">插入的元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddRemoveElement(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加删除一个元素的操作信息
            </summary>
      <param name="c">容器元素</param>
      <param name="index">子元素在容器元素中的序号</param>
      <param name="element">子元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddInsertElements(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            添加一个插入多个元素的撤销信息
            </summary>
      <param name="c">容器对象</param>
      <param name="index">开始插入区域序号</param>
      <param name="list">插入的元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddRemoveElements(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            添加一个删除多个元素的撤销信息
            </summary>
      <param name="c">容器对象</param>
      <param name="index">删除区域开始编号</param>
      <param name="list">删除的元素</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddReplaceElements(DCSoft.Writer.Dom.XTextContainerElement,System.Int32,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            添加一个替换多个元素的撤销信息
            </summary>
      <param name="container">容器对象</param>
      <param name="index">操作区域开始编号</param>
      <param name="oldElements">旧元素列表</param>
      <param name="newElements">新元素列表</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddStyleIndex(DCSoft.Writer.Dom.XTextElement,System.Int32,System.Int32)">
      <summary>
            添加一个项目
            </summary>
      <param name="element">文档元素</param>
      <param name="oldStyleIndex">旧的样式编号</param>
      <param name="newStyleIndex">新的样式编号</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddVisible(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            添加一个项目
            </summary>
      <param name="element">文档元素</param>
      <param name="oldVisible">旧的可见性</param>
      <param name="newVisible">新的可见性</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddProperty(DCSoft.Writer.Dom.Undo.XTextUndoStyles,System.Object,System.Object,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            添加一个项目
            </summary>
      <param name="style">动作类型</param>
      <param name="vOldValue">旧数据</param>
      <param name="vNewValue">新数据</param>
      <param name="element">元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddProperty(System.String,System.Object,System.Object,System.Object)">
      <summary>
            添加设置对象属性值的撤销信息
            </summary>
      <param name="PropertyName">属性名称,不区分大小写</param>
      <param name="OldValue">旧的属性值</param>
      <param name="NewValue">新的属性值</param>
      <param name="ObjectInstance">对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddProperty(System.ComponentModel.PropertyDescriptor,System.Object,System.Object,System.Object)">
      <summary>
            添加设置对象属性值的撤销信息
            </summary>
      <param name="PropertyName">属性名称,不区分大小写</param>
      <param name="OldValue">旧的属性值</param>
      <param name="NewValue">新的属性值</param>
      <param name="ObjectInstance">对象实例</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.AddRowSpecifyHeight(DCSoft.Writer.Dom.XTextTableRowElement,System.Single)">
      <summary>
            添加设置表格行用户指定高度的操作
            </summary>
      <param name="row">表格行对象</param>
      <param name="oldSpecifyHeight">旧高度</param>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.NeedInvokeMethods">
      <summary>
            执行撤销和重做操作后执行的方法
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.RefreshElements">
      <summary>
            状态发生改变的元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.ContentChangedContainer">
      <summary>
            内容发生改变的容器元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextDocumentUndoList.Document">
      <summary>
            本对象所属的文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoBase">
      <summary>
            文档撤销操作对象基础类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoBase.myDocument">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoBase.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoBase.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行重复操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoBase.OwnerList">
      <summary>
            文档对象的撤销操作列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoBase.Document">
      <summary>
            对象所属的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoBase.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoBase.InGroup">
      <summary>
            对象是否在一个批处理中
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty">
      <summary>
            撤销设置对象属性操作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty._Property">
      <summary>
            属性信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty._ObjectInstance">
      <summary>
            对象实例
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty._OldValue">
      <summary>
            旧数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty._NewValue">
      <summary>
            新数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty.#ctor(System.Object,System.ComponentModel.PropertyDescriptor,System.Object,System.Object)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoNameProperty.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoElementVisible">
      <summary>
            重复/撤销设置元素的可见性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoElementVisible.#ctor(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="element">操作的文档元素</param>
      <param name="newVisible">旧的可见性</param>
      <param name="oldVisible">新的可见性</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoElementVisible.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            撤销操作
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoElementVisible.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            重做
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Dom.Undo.XTextUndoProperty">
      <summary>
            重复/撤销设置元素属性的信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoProperty.objOldValue">
      <summary>
            旧数值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoProperty.objNewValue">
      <summary>
            新数值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoProperty.myElement">
      <summary>
            元素对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoProperty.intStyle">
      <summary>
            样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Undo.XTextUndoProperty.bolExecuteFlag">
      <summary>
            动作执行标记,若执行了动作,使得元素状态发生改变,
            则该属性为 true , 若执行动作没有产生任何修改则该属性为 false 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoProperty.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoProperty.#ctor(DCSoft.Writer.Dom.Undo.XTextUndoStyles,System.Object,System.Object,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="style">动作类型</param>
      <param name="vOldValue">旧数值</param>
      <param name="vNewValue">新数值</param>
      <param name="element">元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoProperty.Undo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoProperty.Redo(DCSoft.Writer.Undo.XUndoEventArgs)">
      <summary>
            执行重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Undo.XTextUndoProperty.Execute(System.Boolean)">
      <summary>
            执行动作
            </summary>
      <param name="undo">是否是撤销操作 true:撤销操作 false:重复操作</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoProperty.OldValue">
      <summary>
            旧数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoProperty.NewValue">
      <summary>
            新数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoProperty.Element">
      <summary>
            元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoProperty.Style">
      <summary>
            样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Undo.XTextUndoProperty.ExecuteFlag">
      <summary>
            动作执行标记,若执行了动作,使得元素状态发生改变,
            则该属性为 true , 若执行动作没有产生任何修改则该属性为 false 
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.dlgAttributes">
      <summary>
            文档元素附加的属性对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Design.dlgAttributes.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgAttributes.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgAttributes.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgAttributes.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Design.dlgAttributes.InputAttributes">
      <summary>
            属性列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.dlgElementTypeEditor">
      <summary>
            元素类型对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Design.dlgElementTypeEditor.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgElementTypeEditor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgElementTypeEditor.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgElementTypeEditor.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Design.dlgElementTypeEditor.InputElementType">
      <summary>
            输入输出的元素类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode">
      <summary>
            激活模式对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Dom.Design.dlgValueEditorActiveMode.EditorActiveMode">
      <summary>
            输入的激活模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.ElementTypeEditor">
      <summary>
            文档元素类型编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.ElementTypeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            采用对话框编辑模式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.ElementTypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.ValueEditorActiveModeEditor">
      <summary>
            数值编辑器激活方式编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.ValueEditorActiveModeEditor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.ValueEditorActiveModeEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            对话框编辑模式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.ValueEditorActiveModeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Dom.Design.XAttributeListEditor">
      <summary>
            文档元素自定义属性扩展编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.XAttributeListEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            获得编辑模式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Dom.Design.XAttributeListEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs">
      <summary>
            根据知识库创建文档元素事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Data.KBEntry,DCSoft.Writer.InputValueSource)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="entry">知识库节点</param>
      <param name="inputSource">输入来源</param>
    </member>
    <member name="M:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.#ctor(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Data.KBEntry,DCSoft.Writer.InputValueSource,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="document">文档对象</param>
      <param name="entry">知识库节点</param>
      <param name="inputSource">输入来源</param>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.Host">
      <summary>
            编辑器宿主
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.KBEntry">
      <summary>
            知识库节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.InputSource">
      <summary>
            输入来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.Result">
      <summary>
            结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs.Handled">
      <summary>
            事件已经处理了
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.CurrentDepartmentInfo">
      <summary>
            当前操作员所在的部门的基本信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.CurrentDepartmentInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentDepartmentInfo.ID">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentDepartmentInfo.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.CurrentUserInfo">
      <summary>
            当前应用系统操作员用户信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.CurrentUserInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.ID">
      <summary>
            用户编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.Name">
      <summary>
            用户姓名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.PermissionLevel">
      <summary>
            授权等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.Description">
      <summary>
            用户相关的说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.MarkImage">
      <summary>
            签名图片
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.CurrentUserInfo.ClientName">
      <summary>
            客户端的名称,可以为电脑IP/计算机名等等。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DataFeedbackInfo">
      <summary>
            数据回填信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DataFeedbackInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DataFeedbackInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.TableName">
      <summary>
            操作的数据表名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.FieldName">
      <summary>
            字段名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.FieldValue">
      <summary>
            字段数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.KeyFieldName">
      <summary>
            关键字段名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.KeyFieldValue">
      <summary>
            关键字段值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.KeyFeildDataSourcePath">
      <summary>
            关键字段数据源路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.IsEmpty">
      <summary>
            对象设置是否为空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.Owner">
      <summary>
            对象所属父对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.ContentVersion">
      <summary>
            数据对应的容器元素内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DataFeedbackInfo.Handled">
      <summary>
            对象已经被处理过了。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.GetLinkListItemsEventArgs">
      <summary>
            联动列表项目事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.GetLinkListItemsEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.EffectElements">
      <summary>
            所有关联的输入域元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.ParentElement">
      <summary>
            父层次的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.ParentBinding">
      <summary>
            父层次的绑定信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.ParentValue">
      <summary>
            父层次元素值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.CurrentLevelBase0">
      <summary>
            当前元素在联动中的等级，-1表示错误。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.CurrentElement">
      <summary>
            当前处理的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.CurrentBinding">
      <summary>
            当前层次绑定信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.Items">
      <summary>
            列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.Handled">
      <summary>
            事件已经处理了标记，若为true则表示无需后续处理
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.GetLinkListItemsEventArgs.Cancel">
      <summary>
            用户取消操作标记
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBEntry">
      <summary>
            知识库条目
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntry.NullKBEntry">
      <summary>
            表示空节点的知识点对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntry.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.CopyListItems">
      <summary>
            插入知识节点时是否复制列表项目到输入域元素中
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Attributes">
      <summary>
            用户自定义属性列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ID">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Name">
      <summary>
            节点名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.DataSource">
      <summary>
            数据源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.BindingPath">
      <summary>
            数据源字段绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.RangeMask">
      <summary>
            应用范围掩码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Parent">
      <summary>
            父节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ParentID">
      <summary>
            父节点编号,DCWriter并不使用本属性，主要供应用程序组织成树状结构时临时使用,本属性值不保存到文件中。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.SpellCode">
      <summary>
            拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.SpellCode2">
      <summary>
            拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.SpellCode3">
      <summary>
            拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.RuntimeSpellCode">
      <summary>
            自动生成的拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Text">
      <summary>
            文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Text2">
      <summary>
            文本值2，一般用于多语言环境
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Value">
      <summary>
            数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.EntryTemplateContent">
      <summary>
            作废
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.SubEntries">
      <summary>
            子节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Style">
      <summary>
            知识点样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ListItemsSource">
      <summary>
            列表项目XML定义文件来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ListIndex">
      <summary>
            列表序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Visible">
      <summary>
            对象是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.Tag">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.RecordState">
      <summary>
            记录状态，在DCWriter中没有用处。仅为设计器提供支持。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.RuntimeItems">
      <summary>
            运行时使用的列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ListItems">
      <summary>
            列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.ListItemsText">
      <summary>
            表示列表项目的文本,内部使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.StdImageIndex">
      <summary>
            标准图标序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.OwnerLevel">
      <summary>
            知识节点拥有者等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.OwnerID">
      <summary>
            知识库节点拥有者编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntry.BufferItems">
      <summary>
            是否缓存列表数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBEntryList">
      <summary>
            知识节点列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntryList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntryList.AddBy3Parameter(System.String,System.String,System.String)">
      <summary>
            根据3个参数创建知识节点并添加到列表中
            </summary>
      <param name="id">节点编号</param>
      <param name="text">节点文本</param>
      <param name="Value">节点值</param>
      <returns>新添加的节点对象 </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntryList.AddBy4Parameters(System.String,System.String,System.String,DCSoft.Writer.Data.KBEntryStyle)">
      <summary>
            根据3个参数创建知识节点并添加到列表中
            </summary>
      <param name="id">节点编号</param>
      <param name="text">节点文本</param>
      <param name="Value">节点值</param>
      <param name="style">节点类型</param>
      <returns>新添加的节点对象 </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntryList.SortItems">
      <summary>
            对内容进行排序
            </summary>
      <returns>操作是否修改了列表内容</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryList.Last">
      <summary>
            列表中最后一个元素
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs">
      <summary>
            加载知识库节点模板内容事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.#ctor(DCSoft.Writer.Data.KBLibrary,DCSoft.Writer.Data.KBEntry)">
      <summary>
            初始化对象
            </summary>
      <param name="lib">
      </param>
      <param name="entry">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.Entry">
      <summary>
            知识节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.Library">
      <summary>
            知识库对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.Content">
      <summary>
            文件内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.Format">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventArgs.Result">
      <summary>
            结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBLibrary">
      <summary>
            知识库
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Data.KBLibrary.LoadEntryTemplateContentHandler">
      <summary>
            加载节点模板内容委托对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBLibrary._AllKBEntries">
      <summary>
            系统中所有的知识库节点列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBLibrary._KBEntriesForSearch">
      <summary>
            参与搜索的知识库节点列表集合
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.CreateXmlSerialier">
      <summary>
            创建一个XML序列化器
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.ClearBufferedTemplateContent">
      <summary>
            清除被缓存的节点模板数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.CombinRumtimeBaseURL(System.String)">
      <summary>
            合并基础路径URL
            </summary>
      <param name="url">URL</param>
      <returns>合并后的URL</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.FixDomState">
      <summary>
            修正DOM状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.UpdateAllKBEntries">
      <summary>
            更新AllKBEntries属性值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.SearchKBEntries(System.String)">
      <summary>
            根据拼音码检索知识库
            </summary>
      <param name="spellCode">拼音码</param>
      <returns>检索得到的知识库节点列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.SearchKBEntry(System.String)">
      <summary>
            查找指定ID号的知识节点
            </summary>
      <param name="id">ID号</param>
      <returns>找到的知识节点对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Load(System.IO.Stream)">
      <summary>
            从文件流中加载整个知识库
            </summary>
      <param name="stream">文件流对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Load(System.String)">
      <summary>
            从URL地址中加载整个知识库
            </summary>
      <param name="url">文件URL地址</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Load(System.IO.TextReader)">
      <summary>
            从文件流中加载整个知识库
            </summary>
      <param name="reader">文件流对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Save(System.IO.Stream)">
      <summary>
            保存对象到文件流中
            </summary>
      <param name="stream">文件流</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Save(System.String)">
      <summary>
            保存对象到文件中
            </summary>
      <param name="fileName">文件名</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Save(System.IO.TextWriter)">
      <summary>
            保存对象到文件流中
            </summary>
      <param name="writer">文件流</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Fill(System.Windows.Forms.TreeView)">
      <summary>
            将知识库信息填充到树状列表中
            </summary>
      <returns>树状列表控件</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Fill(System.Windows.Forms.TreeView,System.Boolean)">
      <summary>
            将知识库信息填充到树状列表中
            </summary>
      <returns>树状列表控件</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.UpdateTreeNode(System.Windows.Forms.TreeNode,DCSoft.Writer.Data.KBEntry,System.Boolean)">
      <summary>
            更新树状列表节点
            </summary>
      <param name="node">节点</param>
      <param name="entry">知识库节点</param>
      <param name="forDesigner">为设计器执行操作</param>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.Filter(DCSoft.Writer.WriterAppHost)">
      <summary>
            对知识节点进行过滤
            </summary>
      <param name="host">宿主对象</param>
      <returns>操作过滤掉的知识节点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.KBLibrary.FilterEntries(DCSoft.Writer.Data.KBEntryList,DCSoft.Writer.Data.CurrentUserInfo,DCSoft.Writer.Data.CurrentDepartmentInfo)">
      <summary>
            对知识库节点进行过滤
            </summary>
      <param name="entries">知识节点对象</param>
      <param name="usr">当前用户信息</param>
      <param name="dep">当前部门信息</param>
      <returns>过滤掉的节点个数</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.UseLanguage2">
      <summary>
            使用第二语言
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.Title">
      <summary>
            知识库的标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.TemplateFileSystemName">
      <summary>
            知识库中加载模板使用的文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.TemplateFileSystem">
      <summary>
            加载模板使用的虚拟文件系统
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.BaseURL">
      <summary>
            动态下载数据使用的基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.RuntimeBaseURL">
      <summary>
            运行时的基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.ListItemsSourceFormatString">
      <summary>
            列表项目来源格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.TemplateSourceFormatString">
      <summary>
            模板来源格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.TemplateFileFormat">
      <summary>
            模板文件格式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.Version">
      <summary>
            知识库版本号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.KBEntries">
      <summary>
            知识库列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.TemplateDocuments">
      <summary>
            模板数据，仅供设计器使用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.AllKBEntries">
      <summary>
            返回系统中所有的知识库节点列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBLibrary.StdImageList">
      <summary>
            标准的图标列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.LinkListBindingInfo">
      <summary>
            联动列表绑定信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListBindingInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListBindingInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListBindingInfo.ToString">
      <summary>
            获得 表示对象内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.ProviderName">
      <summary>
            联动列表提供者名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.UserFlag">
      <summary>
            用户自定义标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.IsRoot">
      <summary>
            是否为根列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.NextTarget">
      <summary>
            联动目标元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.NextTargetID">
      <summary>
            指定的联动目标元素编号,只有NextTarget属性值为NextElement时本属性才有意义。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.AutoUpdateTargetElement">
      <summary>
            主动更新下一个联动目标元素的列表内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.AutoSetFirstItems">
      <summary>
            当更新列表项目是自动设置输入域当前内容为第一个元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListBindingInfo.DataBoundItem">
      <summary>
            用户自定义的绑定的数据源对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.LinkListProvider">
      <summary>
            联动列表数据提供者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListProvider.GetListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            获得列表内容
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListProvider.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListProvider.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.LinkListProviderList">
      <summary>
            联动列表项目提供者集合
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListProviderList.GetEnabledProvider(System.String)">
      <summary>
            获得指定名称的提供者对象
            </summary>
      <param name="name">名称，不区分大小写</param>
      <returns>获得的提供者对象，若未找到则返回空引用。</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListProviderList.ContainsName(System.String)">
      <summary>
            判断是否存在指定名称的提供者对象
            </summary>
      <param name="name">名称，不区分大小写</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.LinkListProviderList.RemoveByName(System.String)">
      <summary>
            删除指定名称的提供者对象
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Data.LinkListProviderList.Names">
      <summary>
            获得所有可用提供者的名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListItem">
      <summary>
            列表项目
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItem.#ctor(System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="strText">文本值</param>
      <param name="strValue">数值</param>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItem.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItem.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.DisplayWidth">
      <summary>
            显示宽度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.ID">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.EntryID">
      <summary>
            对象所属的知识库节点编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.LonelyChecked">
      <summary>
            孤独勾选模式。当此项被勾选时，其他项目都不能勾选。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.TextInList">
      <summary>
            在下拉列表中的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.Text">
      <summary>
            列表文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.Text2">
      <summary>
            列表文本2，一般用于多语言环境
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.Value">
      <summary>
            列表项目值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.Group">
      <summary>
            分组名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.CheckedTime">
      <summary>
            项目勾选时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.RuntimeValue">
      <summary>
            运行时使用的数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.Tag">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.SpellCode">
      <summary>
            拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.SpellCode2">
      <summary>
            拼音码2
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.SpellCode3">
      <summary>
            拼音码3
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.RuntimeSpellCode">
      <summary>
            自动生成的拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.ListIndex">
      <summary>
            排序编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItem.RecordState">
      <summary>
            记录状态，在DCWriter中没有用处。仅为设计器提供支持。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListItemCollection">
      <summary>
            列表项目列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.SortByCheckedTime">
      <summary>
            按照勾选时间进行排序
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.AddByTextValue(System.String,System.String)">
      <summary>
            添加列表项目
            </summary>
      <param name="Text">文本值</param>
      <param name="Value">数值</param>
      <returns>新增的列表项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.AddByTextValueTextInList(System.String,System.String,System.String)">
      <summary>
            添加列表项目
            </summary>
      <param name="text">文本值</param>
      <param name="Value">数值</param>
      <param name="textInList">在下拉列表中的文本</param>
      <returns>新增的列表项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.AddByTextValueSpellCode(System.String,System.String,System.String)">
      <summary>
            添加列表项目
            </summary>
      <param name="text">文本值</param>
      <param name="Value">数值</param>
      <param name="spellCode">拼音码</param>
      <returns>新增的列表项目</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.ValueToText(System.String)">
      <summary>
            数值转换为文本
            </summary>
      <param name="Value">数值</param>
      <returns>文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.MultiValuesToText(System.String)">
      <summary>
            将多个数值合并成一个文本
            </summary>
      <param name="Values">数值</param>
      <returns>文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.TextToValue(System.String)">
      <summary>
            文本转换为数值
            </summary>
      <param name="Text">文本</param>
      <returns>数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.CloneSimple">
      <summary>
            简单的复制列表，但不复制列表项目实例
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollection.ComSetItem(System.Int32,DCSoft.Writer.Data.ListItem)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemCollection.GenerateTemplate">
      <summary>
            这是临时生成的对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListItemsEventArgs">
      <summary>
            获得zhishik
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemsEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.WriterAppHost,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="element">文档元素对象</param>
      <param name="host">
      </param>
      <param name="sourceName">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.FieldElement">
      <summary>
            相关的输入域文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.Info">
      <summary>
            相关的列表来源信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.Host">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.Services">
      <summary>
            服务容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.SourceName">
      <summary>
            列表来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.KBEntry">
      <summary>
            知识库节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListItemsEventArgs.IsDynamicListItems">
      <summary>
            是否为动态加载列表项目
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListSourceEventArgs">
      <summary>
            列表项目事件参数
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceEventArgs.#ctor(DCSoft.Writer.WriterAppHost,System.IServiceProvider,DCSoft.Writer.Data.ListSourceInfo)">
      <summary>
            初始化对象
            </summary>
      <param name="host">宿主对象</param>
      <param name="services">服务对象列表</param>
      <param name="info">信息对象</param>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceEventArgs.Host">
      <summary>
            编辑器程序宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceEventArgs.Services">
      <summary>
            服务器容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceEventArgs.Info">
      <summary>
            列表项目来源信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceEventArgs.Value">
      <summary>
            当前列表值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListSourceInfo">
      <summary>
            列表数据源信息
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.ShowEditorDialog(System.Windows.Forms.IWin32Window,DCSoft.Writer.Data.ListSourceInfo@)">
      <summary>
            显示编辑数据的对话框
            </summary>
      <param name="p">
      </param>
      <param name="info">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.IsFastGetRuntimeListItems(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Data.ListSourceInfo,DCSoft.Writer.Data.IListSourceProvider,System.Object)">
      <summary>
            判断是否能快速加载下拉列表
            </summary>
      <param name="control">
      </param>
      <param name="element">
      </param>
      <param name="info">
      </param>
      <param name="provider">
      </param>
      <param name="dataSource">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.GetRuntimeListItems(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.WriterAppHost,DCSoft.Writer.Data.ListSourceInfo,DCSoft.Writer.Data.IListSourceProvider,System.Object,System.String,System.Boolean,System.String)">
      <summary>
            获得运行时的列表
            </summary>
      <param name="control">编辑器控件</param>
      <param name="element">文档元素对象</param>
      <param name="host">宿主对象</param>
      <param name="info">信息</param>
      <param name="provider">提供者</param>
      <param name="dataSource">数据源</param>
      <param name="spellCode">拼音码</param>
      <returns>获得的列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.StdGetDisplayText(System.Object,DCSoft.Writer.Data.ListSourceInfo,DCSoft.Writer.Data.XDataBindingProvider)">
      <summary>
            获得标准的显示文本,DCWriter内部使用.
            </summary>
      <param name="Value">要显示的数据</param>
      <param name="info">信息对象</param>
      <param name="bindingProvider">提供者</param>
      <returns>显示的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.StdGetValue(System.Object,DCSoft.Writer.Data.ListSourceInfo,DCSoft.Writer.Data.XDataBindingProvider)">
      <summary>
            获得后台数据,DCWriter内部使用.
            </summary>
      <param name="Value">数值对象</param>
      <param name="info">信息对象</param>
      <param name="bindingProvider">提供者</param>
      <returns>后台数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.StdGetTag(System.Object,DCSoft.Writer.Data.ListSourceInfo,DCSoft.Writer.Data.XDataBindingProvider)">
      <summary>
            获得标记数据,DCWriter内部使用.
            </summary>
      <param name="Value">数据对象</param>
      <param name="info">信息对象</param>
      <param name="bindingProvider">提供者</param>
      <returns>后台数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfo.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.SupportSourceNames">
      <summary>
            设计器支持的数据源名称数组
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.IsEmpty">
      <summary>
            对象内容是否为空
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.Name">
      <summary>
            列表数据源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.SourceName">
      <summary>
            来源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.DisplayPath">
      <summary>
            过时的属性，DCWriter已经不使用了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.ValuePath">
      <summary>
            过时的属性，DCWriter已经不使用了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.Items">
      <summary>
            内置的列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.BufferItems">
      <summary>
            是否缓存列表项目
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.ListSourceInfo.RuntimeItems">
      <summary>
            实际运行中的列表项目集合,只有当BufferItems=true时该属性才可能有内容。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XDataBinding">
      <summary>
            数据源绑定信息
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBinding.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBinding.#ctor(System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="dataSource">数据源名称</param>
      <param name="path">绑定路径名称</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBinding.CompareSettings(DCSoft.Writer.Data.XDataBinding)">
      <summary>
            比较两者的设置
            </summary>
      <param name="binding">要比较的值</param>
      <returns>比较结果，如果两者设置一样则返回true，否则返回false.</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBinding.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBinding.ToString">
      <summary>
            获得 表示对象内容的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.DataSource">
      <summary>
            数据源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.FormatString">
      <summary>
            格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.BindingPath">
      <summary>
            绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.BindingPathForText">
      <summary>
            为Text而设置的绑定路径,仅对XTextInputFieldElement元素有效。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.WriteTextBindingPath">
      <summary>
            文本值绑定路径，仅对XTextInputFieldElement有效
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.ValueBindingPath">
      <summary>
            后台数值绑定路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.IsEmptyBinding">
      <summary>
            是空白的数据绑定信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.ProcessState">
      <summary>
            操作状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.AutoUpdate">
      <summary>
            自动更新内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.Readonly">
      <summary>
            只读标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBinding.Handled">
      <summary>
            对象已经被处理过了。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XMLLinkListProvider">
      <summary>
            基于XML文档的联动列表提供者
            </summary>
      <remarks>
            本提供者对象对XML文件没有太多的要求，
            第一层列表的数据就是XML文档唯一的根节点的子节点，
            第二层列表的数据就是上级XML节点的子节点。
            XML元素名称无所谓，必须有Text属性，Value属性可选。
            本提供者输出的列表项目，其Text值就是对应的XML元素的Text属性值，若XML元素有Value属性
            则列表项目的Value值就是XML元素的Value属性值；否则为XML元素的Text属性值。
            本提供者内部会设置文档元素的LinkListBindingInfo.DataBoundItem为绑定的XML元素对象。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.#ctor(System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="name">提供者名称</param>
      <param name="xmlFileName">XML文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>
            初始化对象
            </summary>
      <param name="name">名称</param>
      <param name="doc">XML文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.LoadXMLDocument(System.String)">
      <summary>
            加载XML文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.LoadXMLString(System.String)">
      <summary>
            加载XML字符串
            </summary>
      <param name="xml">XML字符串</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLLinkListProvider.GetListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            获得联动列表项目
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Data.DataFeedbackInfoList">
      <summary>
            数据回填信息列表对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DataFeedbackInfoList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DataFeedbackInfoList.Update(System.Data.IDbConnection,DCSoft.Data.ParameterStyle)">
      <summary>
            更新数据
            </summary>
      <param name="conn">数据库连接对象</param>
      <param name="pStyle">命令参数样式</param>
      <returns>更新的数据库记录个数</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.DCEmitDataSourceExecuter">
      <summary>
            内置数据源执行器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DCEmitDataSourceExecuter.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DCEmitDataSourceFieldInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSourceFieldInfo.Name">
      <summary>
            字段名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSourceFieldInfo.ValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DCEmitDataSourceFieldInfoValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.IPropertyDCEmitDataSource">
      <summary>
            表示有EmitDataSource属性的接口。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DCEmitDataSource">
      <summary>
            内嵌数据源对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DCEmitDataSource.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DCEmitDataSource.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DCEmitDataSource.IsEmpty">
      <summary>
            对象内容是否为空。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.AutoClean">
      <summary>
            执行完数据源绑定后自动清空对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.ConnectionName">
      <summary>
            数据库连接名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.CommandText">
      <summary>
            查询数据而执行的命令文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.ParameterStyle">
      <summary>
            参数样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.FieldsForDesign">
      <summary>
            设计时的字段列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DCEmitDataSource.DisplayFormat">
      <summary>
            显示格式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.EntryOwnerLevel">
      <summary>
            实体拥有者等级层次
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.EntryOwnerLevel.Global">
      <summary>
            全局的,数值为0
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.EntryOwnerLevel.Department">
      <summary>
            部门级别的，数值为1
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.EntryOwnerLevel.User">
      <summary>
            用户私有的，数值为2
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.IFileSystem">
      <summary>
            虚拟文件系统接口
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.IFileSystem.Read(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            打开文件
            </summary>
      <param name="args">参数</param>
      <returns>读取的文件二进制内容，若失败则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IFileSystem.Write(DCSoft.Writer.Data.VFileSystemEventArgs,System.Byte[])">
      <summary>
            保存文件
            </summary>
      <param name="args">参数</param>
      <param name="content">要保存的内容</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IFileSystem.GetFileInfo(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            获得指定文件名的文件信息
            </summary>
      <param name="args">参数</param>
      <returns>获得的文件信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IFileSystem.BrowseForRead(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            为读取文件而显示浏览选择文件的对话框
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IFileSystem.BrowseForWrite(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            为保存文件而显示浏览选择文件的对话框
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.VFileSystemEventArgs">
      <summary>
            文件系统事件参数
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.VFileSystemEventArgs.#ctor(DCSoft.Writer.WriterAppHost,System.Windows.Forms.IWin32Window,System.IServiceProvider,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="host">编辑器宿主对象</param>
      <param name="parentWindow">父窗体对象</param>
      <param name="services">服务对象提供者</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.KBEntry">
      <summary>
            相关的知识节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.ParentWindow">
      <summary>
            父窗体对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.AppHost">
      <summary>
            宿主
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.Services">
      <summary>
            服务器对象提供者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.FileSystemName">
      <summary>
            文件系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileSystemEventArgs.FileFormat">
      <summary>
            文件格式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.FileSystemDictionary">
      <summary>
            文件系统列表对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.FileSystemDictionary.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.FileSystemDictionary.GetFileSystem(System.String)">
      <summary>
            获得指定名称的文件系统,本函数能确保不返回空引用
            </summary>
      <remarks>
            本方法首先区分大小写的查找名称，若没找到则使用不区分大小写的查找，
            若还没找到则返回默认名称default的项目，若还没找到则返回默认的标准文件系统对象。
            </remarks>
      <param name="name">指定的名称</param>
      <returns>获得的文件系统</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.FileSystemDictionary.GetFileSystem(System.String,System.Boolean)">
      <summary>
            获得指定名称的文件系统,本函数能确保不返回空引用
            </summary>
      <remarks>
            本方法首先区分大小写的查找名称，若没找到则使用不区分大小写的查找，
            若还没找到则返回默认名称default的项目，若还没找到则返回默认的标准文件系统对象。
            </remarks>
      <param name="name">指定的名称</param>
      <param name="strictMatchName">严格的命中名称</param>
      <returns>获得的文件系统</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.FileSystemDictionary.Docuemnt">
      <summary>
            打开和保存文档使用的文件系统
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.FileSystemDictionary.Template">
      <summary>
            打开和保存模板使用的文件系统
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.FileSystemDictionary.KBLibray">
      <summary>
            打开和保存知识库使用的文件系统
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.FileSystemDictionary.KBListItem">
      <summary>
            加载知识节点列表项目使用的文件系统
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.FileSystemDictionary.Default">
      <summary>
            默认文件系统，如其他专用的文件系统为空则转而使用默认文件系统。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBEntryStyle">
      <summary>
            知识点类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.List">
      <summary>
            下拉列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.ListSQL">
      <summary>
            自己设置了SQL语句来加载列表内容
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.Template">
      <summary>
            模板
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.InputField">
      <summary>
            文本输入域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.NumberField">
      <summary>
            数字输入域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.DateTimeField">
      <summary>
            日期输入域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.MultiList">
      <summary>
            多选下拉列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.CheckBoxList">
      <summary>
            复选框列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.KBEntryStyle.RadioList">
      <summary>
            单元格列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.KBEntryLoadTemplateContentEventHandler">
      <summary>
            加载知识库节点模板内容事件委托类型
            </summary>
      <param name="sender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Data.KBTemplateDocument">
      <summary>
            知识库中的文档模板信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.KBTemplateDocument.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBTemplateDocument.KBID">
      <summary>
            知识库节点编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.KBTemplateDocument.Content">
      <summary>
            文档内容
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.ListItemCollectionEditor">
      <summary>
            项目列表编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollectionEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            采用对话框模式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListItemCollectionEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Data.ListSourceInfoEditor">
      <summary>
            列表项目编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfoEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            获得编辑样式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.ListSourceInfoEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Data.DOMDataProvider">
      <summary>
            文档数据源功能提供者基础类型
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.ValueValidate_Document(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            对整个文档的输入域进行数据校验
            </summary>
      <returns>校验信息列表，如果返回空列表则校验全部通过</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.Validating_XTextContainerElement(DCSoft.Writer.Dom.XTextContainerElement,System.Boolean)">
      <summary>
            进行容器元素数据验证
            </summary>
      <param name="container">容器元素对象</param>
      <param name="loadingDocument">是否正在加载文档中</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.WriteDataFromDocumentToDataSource(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            将文档中的数据写入到数据源中,本函数会修改LastAlertInfos列表内容。
            </summary>
      <param name="document">文档对象</param>
      <returns>写入的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.PrepareValueBinding(DCSoft.Writer.Dom.XTextTableElement)">
      <summary>
            对表格准备执行数据源绑定操作。
            </summary>
      <param name="table">表格对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.GetFormValue(DCSoft.Writer.Dom.XTextDocument,System.String)">
      <summary>
            获得表单数据
            </summary>
      <param name="name">字段名称</param>
      <returns>获得的表单数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.SetFormValue(DCSoft.Writer.Dom.XTextContainerElement,System.String,System.String)">
      <summary>
            设置表单值
            </summary>
      <param name="rootElement">根元素对象</param>
      <param name="name">表单元素名称</param>
      <param name="Value">表单值</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.GetFormValues(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得文档中的表单数据字典
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.GetFormValuesXml(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            获得XML格式的表单数据字典
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.ResetFormValue(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            重置表单元素默认值
            </summary>
      <returns>是否导致文档内容发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.GetValuesByDataName(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            根据数据名称获得文档中所有的数据
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.WriteDataFromDataSourceToElements(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElementList)">
      <summary>
            针对特定文档元素执行数据源绑定操作。将数据填充到文档元素中。
            </summary>
      <param name="document">文档对象</param>
      <param name="elements">文档元素列表</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.WriteDataFromDataSourceToDocumentSpecifyParameterNames(DCSoft.Writer.Dom.XTextDocument,System.String)">
      <summary>
            将指定名称的文档参数值填充到文档中
            </summary>
      <param name="document">文档对象</param>
      <param name="parameterNames">指定的文档参数名称，各个名称之间用英文逗号分开。比如“姓名,性别,国籍”，如果为空则更新全部数据源。</param>
      <returns>更新的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.GetDetectValueBindingModifiedMessage(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            检测数据源填充操作导致的修改文档元素的相关信息，但不真正填充数据源，不会修改文档内容。
            </summary>
      <param name="document">文档对象</param>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.DetectValueBindingModified(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            检测数据源填充操作导致的修改文档元素的个数，但不真正填充数据源，不会修改文档内容。
            </summary>
      <param name="document">文档对象</param>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.WriteDataFromDataSourceToDocument(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            将数据源填充到文档中
            </summary>
      <param name="document">文档对象</param>
      <returns>修改的文档DOM次数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.UpdateDataBindingExt(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.UpdateDataBindingArgs)">
      <summary>
            更新数据源绑定
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">参数</param>
      <returns>修改的文档点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DOMDataProvider.SetValueForDataBinding(DCSoft.Writer.Dom.XTextElement,System.String,System.Boolean)">
      <summary>
            为数据源绑定而设置文档元素数据
            </summary>
      <param name="element">文档元素对象</param>
      <param name="Value">数值</param>
      <param name="fastMode">快速模式</param>
      <returns>操作是否修改元素内容</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.VFileInfo">
      <summary>
            文件信息
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.VFileInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.VFileInfo.#ctor(System.IO.FileInfo)">
      <summary>
            初始化对象
            </summary>
      <param name="info">本地文件系统信息对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.VFileInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Name">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Format">
      <summary>
            文件格式,可以为XML,RTF,HTML,OldXML
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.FullPath">
      <summary>
            全路径名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.BasePath">
      <summary>
            基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Length">
      <summary>
            文件长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Exists">
      <summary>
            文件是否存在
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.CreationTime">
      <summary>
            文件创建时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.AccessTime">
      <summary>
            文件访问时间
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.VFileInfo.Readonly">
      <summary>
            文件是只读的
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DCListItemCollectionBuffer">
      <summary>
            列表对象缓存对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DCListItemCollectionBuffer.AddItems(System.String,DCSoft.Writer.Data.ListItemCollection,System.Boolean)">
      <summary>
            添加列表对象
            </summary>
      <param name="name">保存的名称</param>
      <param name="items">列表对象</param>
      <param name="globalItems">是否为全局缓存</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DCListItemCollectionBuffer.GetItems(System.String)">
      <summary>
            获得指定名称的列表对象
            </summary>
      <param name="name">名称</param>
      <returns>获得的列表对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DCListItemCollectionBuffer.GetItemsName">
      <summary>
            获得所有缓存的列表对象的名称
            </summary>
      <returns>名称组成的数组</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.dlgListItems">
      <summary>
            项目列表编辑对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.dlgListItems.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListItems.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListItems.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListItems.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.dlgListItems.InputItems">
      <summary>
            项目列表对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.IDocumentParameterProvider">
      <summary>
            文档参数提供者接口 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.IDocumentParameterProvider.Contains(System.String)">
      <summary>
            判断是否包含指定名称的参数
            </summary>
      <param name="name">参数名</param>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IDocumentParameterProvider.GetValue(System.String)">
      <summary>
            获得指定名称的参数值
            </summary>
      <param name="name">参数名</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IDocumentParameterProvider.SetValue(System.String,System.Object)">
      <summary>
            设置指定名称的参数值
            </summary>
      <param name="name">参数名</param>
      <param name="Value">参数值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.DocumentLinkListExecuter">
      <summary>
            联动列表执行器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentLinkListExecuter.InitRootLinkList(DCSoft.Writer.Dom.XTextInputFieldElement)">
      <summary>
            初始化联动列表的根元素
            </summary>
      <param name="sourceElement">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentLinkListExecuter.ExecuteEffectLinkList(DCSoft.Writer.Dom.XTextInputFieldElement,System.Boolean)">
      <summary>
            执行关联的下一级联动列表内容
            </summary>
      <param name="sourceElement">操作发起的文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentLinkListExecuter.ExecuteLinkList(DCSoft.Writer.Dom.XTextInputFieldElement,DCSoft.Writer.Dom.XTextInputFieldElement,DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            执行联动操作
            </summary>
      <param name="sourceElement">联动动作发起元素</param>
      <param name="targetElement">联动动作操作元素</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentLinkListExecuter.GetFieldElementsInSameLinkList(DCSoft.Writer.Dom.XTextInputFieldElement)">
      <summary>
            获得同组的联动列表元素集合
            </summary>
      <param name="element">输入域元素对象</param>
      <returns>获得的同组列表元素集合</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.GetLinkListItemsEventHandler">
      <summary>
            联动列表项目事件委托类型
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="T:DCSoft.Writer.Data.XMLViewStateBag">
      <summary>
            基于XML的视图数据包
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.Contains(System.String)">
      <summary>
            判断是否存在指定关键字的数值
            </summary>
      <param name="key">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.GetValue(System.String)">
      <summary>
            设置状态值
            </summary>
      <param name="key">关键字值</param>
      <returns>获得的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.SetValue(System.String,System.Object)">
      <summary>
            设置数值
            </summary>
      <param name="Name">名称</param>
      <param name="Value">值</param>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.GetItem(System.String)">
      <summary>
            获得指定名称的列表项目对象
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBag.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XMLViewStateBagItem">
      <summary>
            XML序列化项目
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XMLViewStateBagItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XMLViewStateBagItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XMLViewStateBagItem.TypeName">
      <summary>
            类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XMLViewStateBagItem.Value">
      <summary>
            对象值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XMLViewStateBagItem.XMLValue">
      <summary>
            XML数据
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DefaultFileSystem">
      <summary>
            默认使用的文件系统操作对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.Read(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            读取文件内容
            </summary>
      <param name="args">参数</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.Write(DCSoft.Writer.Data.VFileSystemEventArgs,System.Byte[])">
      <summary>
            向文件写数据
            </summary>
      <param name="args">参数</param>
      <param name="content">要写入的数据</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.GetFileInfo(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            获得文件信息
            </summary>
      <param name="args">参数</param>
      <returns>获得的文件信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.BrowseForRead(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            为读取文件而显示浏览文件对话框
            </summary>
      <param name="args">参数</param>
      <returns>获得的文件信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultFileSystem.BrowseForWrite(DCSoft.Writer.Data.VFileSystemEventArgs)">
      <summary>
            为保存文件而显示浏览对话框
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DefaultFileSystem.OpenFileFilter">
      <summary>
            打开文件使用的文件名过滤字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DefaultFileSystem.SaveFileFilter">
      <summary>
            保存时使用的文件名过滤条件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.IDateTimeService">
      <summary>
            时间日期服务器对象接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.IDateTimeService.GetNow">
      <summary>
            获得当前时间
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Data.DefaultDateTimeService">
      <summary>
            默认的时间日期服务器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DefaultDateTimeService.GetNow">
      <summary>
            获得系统当前时间
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Data.LocalFileBuffer">
      <summary>
            本地文件缓存
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.LocalFileBuffer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBuffer.Instance">
      <summary>
            对象唯一静态实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBuffer.MaxFileNum">
      <summary>
            缓存的最大文件个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBuffer.MaxFileSize">
      <summary>
            缓存的最大文件总大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBuffer.WorkDirectory">
      <summary>
            工作目录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBuffer.Files">
      <summary>
            缓存的文件信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.LocalFileBufferItem">
      <summary>
            缓存文件信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.LocalFileBufferItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBufferItem.Url">
      <summary>
            远程URL地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBufferItem.LocalFileName">
      <summary>
            本地文件名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBufferItem.Length">
      <summary>
            缓存的文件长度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.LocalFileBufferItem.CreationTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.dlgListSourceInfo">
      <summary>
            列表来源信息编辑对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.dlgListSourceInfo.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListSourceInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListSourceInfo.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Data.dlgListSourceInfo.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.dlgListSourceInfo.ListSource">
      <summary>
            列表来源信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.dlgListSourceInfo.SourceElement">
      <summary>
            相关的来源文档元素对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.IListItemsProvider">
      <summary>
            知识库节点下拉列表项目提供者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.IListItemsProvider.GetListItems(DCSoft.Writer.Data.ListItemsEventArgs)">
      <summary>
            获得列表项目
            </summary>
      <param name="args">参数</param>
      <returns>获得的列表项目集合</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.IKBProvider">
      <summary>
            知识库提供者对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.IKBProvider.GetSubEntries(DCSoft.Writer.WriterAppHost,DCSoft.Writer.Data.KBEntry)">
      <summary>
            获得子条目列表
            </summary>
      <param name="host">宿主对象</param>
      <param name="root">根节点对象,若为空表示获得根项目列表</param>
      <returns>获得的子条目列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IKBProvider.CreateElements(DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs)">
      <summary>
            根据知识库条目创建文档元素对象
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Data.CreateElementsByKBEntryEventHandler">
      <summary>
            根据知识库节点创建文档元素对象事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Data.IListSourceProvider">
      <summary>
            用于获得列表项目的提供者接口
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.IListSourceProvider.GetListSource(DCSoft.Writer.Data.ListSourceEventArgs)">
      <summary>
            获得列表数据来源
            </summary>
      <param name="args">参数</param>
      <returns>列表数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IListSourceProvider.GetDisplayText(DCSoft.Writer.Data.ListSourceEventArgs)">
      <summary>
            获得列表项目显示的文本
            </summary>
      <param name="args">参数</param>
      <returns>显示的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IListSourceProvider.GetValue(DCSoft.Writer.Data.ListSourceEventArgs)">
      <summary>
            获得列表项目的后台文本值
            </summary>
      <param name="args">参数</param>
      <returns>后台文本值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.IListSourceProvider.GetTag(DCSoft.Writer.Data.ListSourceEventArgs)">
      <summary>
            获得列表项目的附加数据
            </summary>
      <param name="args">参数</param>
      <returns>附加数据文本值</returns>
    </member>
    <member name="T:DCSoft.Writer.Data.XDataBindingPath">
      <summary>
            对象属性值访问路径
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XDataBindingPath._buffer">
      <summary>
            缓存的路径信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XDataBindingPath._badPath">
      <summary>
            错误的路径信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingPath.ClearBuffer">
      <summary>
            清空缓存的数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingPath.GetInstance(System.Type,System.String,System.Boolean)">
      <summary>
            获得指定的对象属性值访问路径
            </summary>
      <param name="rootType">根对象</param>
      <param name="path">访问路径</param>
      <param name="throwException">若遇到错误是否抛出异常</param>
      <returns>获得的访问信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingPath.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPath.RootType">
      <summary>
            根类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPath.Path">
      <summary>
            路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPath.Readonly">
      <summary>
            路径是只读的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPath.Items">
      <summary>
            路径项目列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XDataBindingPathItem">
      <summary>
            绑定路径项目对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingPathItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPathItem.InstanceType">
      <summary>
            实例对象类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPathItem.Property">
      <summary>
            绑定的属性对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPathItem.Name">
      <summary>
            项目名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.XDataBindingPathItem.Style">
      <summary>
            数据源绑定单元信息样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XBindingPathItemStyle">
      <summary>
            数据源绑定路径项目类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.Self">
      <summary>
            对象自己
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.XPath">
      <summary>
            XPath
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.Dictionary">
      <summary>
            字典
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.DataRow">
      <summary>
            数据行
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.Property">
      <summary>
            对象属性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.Record">
      <summary>
            记录
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.XBindingPathItemStyle.Auto">
      <summary>
            自动判断
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DocumentParameter">
      <summary>
            文档参数对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameter.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameter.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="name">参数名称</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameter.TrySetValue(System.String)">
      <summary>
            尝试根据文本值设置参数值,不触发异常
            </summary>
      <param name="strValue">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameter.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameter.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.Name">
      <summary>
            参数名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.Description">
      <summary>
            参数说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.TypeName">
      <summary>
            数据类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.ValueType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.SourceColumn">
      <summary>
            参数值来源栏目名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.ValueDataType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.DefaultValue">
      <summary>
            默认值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.ValueTypeFullName">
      <summary>
            类型全名.DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.SerializeValue">
      <summary>
            XML的数值序列化结果。DCWriter内部使用。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.Value">
      <summary>
            参数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.StringValue">
      <summary>
            获得字符串值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameter.SerializeStringValue">
      <summary>
            用于序列化/反序列化的用户设置的参数值的属性值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DocumentParameterCollection">
      <summary>
            文档参数列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.ComGetItem(System.Int32)">
      <summary>
            为COM接口开放的读取列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <returns>获得的列表成员对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.ComSetItem(System.Int32,DCSoft.Writer.Data.DocumentParameter)">
      <summary>
            为COM接口开放的设置列表成员的方法
            </summary>
      <param name="index">从0开始的序号</param>
      <param name="item">新的列表成员对象</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.CopytValuesTo(DCSoft.Writer.Data.DocumentParameterCollection)">
      <summary>
            复制数据
            </summary>
      <param name="ps">目标</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.GetValue(System.String)">
      <summary>
            获得指定名称的参数值
            </summary>
      <param name="name">参数名称</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.SetValue(System.String,System.Object)">
      <summary>
            设置参数值
            </summary>
      <param name="name">参数名</param>
      <param name="Value">参数值</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.SetXmlValue(System.String,System.String)">
      <summary>
            设置XML值
            </summary>
      <param name="name">参数名</param>
      <param name="xmlText">XML字符串</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.GetXmlValue(System.String)">
      <summary>
            获得XML值
            </summary>
      <param name="name">参数名</param>
      <returns>XML值</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.Contains(System.String)">
      <summary>
            判断是否存在指定名称的参数
            </summary>
      <param name="name">参数名</param>
      <returns>是否有指定名称的参数</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.Remove(System.String)">
      <summary>
            删除指定名称的参数
            </summary>
      <param name="name">参数名</param>
    </member>
    <member name="M:DCSoft.Writer.Data.DocumentParameterCollection.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameterCollection.Item(System.String)">
      <summary>
            获得指定名称的参数对象
            </summary>
      <param name="name">参数名称</param>
      <returns>获得的参数对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Data.DocumentParameterCollection.Names">
      <summary>
            所有参数名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.DocumentParameterValueType">
      <summary>
            文档参数值类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Text">
      <summary>
            纯文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Boolean">
      <summary>
            布尔类型值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Numeric">
      <summary>
            数值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Date">
      <summary>
            日期
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Time">
      <summary>
            时间
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.DateTime">
      <summary>
            日期时间
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Binary">
      <summary>
            二进制数据
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Data.DocumentParameterValueType.Object">
      <summary>
            对象类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Data.XDataBindingProvider">
      <summary>
             数据源绑定功能提供者
             </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.DomReadValue(System.Object,DCSoft.Writer.WriterAppHost,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Data.XDataBinding,System.Boolean)">
      <summary>
            读取数据
            </summary>
      <param name="specifyDataBoundItem">指定的数据源对象</param>
      <param name="host">应用程序宿主对象</param>
      <param name="document">文档对象</param>
      <param name="element">元素对象</param>
      <param name="binding">数据源绑定信息对象</param>
      <param name="throwException">是否抛出异常</param>
      <returns>获得的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.DomWriteValue(System.Object,DCSoft.Writer.WriterAppHost,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Data.XDataBinding,System.Object,System.Boolean)">
      <summary>
            设置数据
            </summary>
      <param name="specifyDataBoundItem">指定的数据源对象</param>
      <param name="host">宿主对象</param>
      <param name="document">文档对象</param>
      <param name="element">元素对象</param>
      <param name="binding">数据源绑定信息</param>
      <param name="newValue">新数值</param>
      <param name="throwException">是否抛出异常</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.ReadItemValue(DCSoft.Writer.Data.XDataBindingPathItem,System.Object,System.Object,System.Boolean)">
      <summary>
            根据一个路径项目读取数据
            </summary>
      <param name="item">路径项目对象</param>
      <param name="instance">对象实例</param>
      <param name="defaultValue">默认值</param>
      <param name="throwException">是否抛出异常</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.GetFieldNames(System.Object)">
      <summary>
            获得数据源所能使用的字段名
            </summary>
      <param name="instance">数据源对象</param>
      <returns>能使用的字段名列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.StdGetFieldNames(System.Object)">
      <summary>
            获得字段名称列表
            </summary>
      <param name="instance">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.StdReadItemValue(DCSoft.Writer.Data.XDataBindingPathItem,System.Object,System.Object,System.Boolean)">
      <summary>
            根据一个路径项目读取数据
            </summary>
      <param name="item">路径项目对象</param>
      <param name="instance">对象实例</param>
      <param name="defaultValue">默认值</param>
      <param name="throwException">是否抛出异常</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.WriteItemValue(DCSoft.Writer.Data.XDataBindingPathItem,System.Object,System.Object,System.Boolean)">
      <summary>
            写入项目数据
            </summary>
      <param name="item">项目</param>
      <param name="instance">对象实例</param>
      <param name="newValue">新数据</param>
      <param name="throwException">若发生错误是否抛出异常</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.WriteValue(DCSoft.Writer.Data.XDataBinding,System.Object,System.Object,System.Boolean)">
      <summary>
            写数据
            </summary>
      <param name="binding">数据源绑定信息对象</param>
      <param name="dataSourceInstance">数据源对象</param>
      <param name="newValue">新数据值</param>
      <param name="throwException">若发生错误是否抛出异常</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.StdWriteValue(DCSoft.Writer.Data.XDataBinding,System.Object,System.Object,System.Boolean)">
      <summary>
            写数据
            </summary>
      <param name="binding">数据源绑定信息对象</param>
      <param name="dataSourceInstance">数据源对象</param>
      <param name="newValue">新数据值</param>
      <param name="throwException">若发生错误是否抛出异常</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.ConvertType(DCSoft.Writer.Data.XDataBinding,System.Object,System.Type)">
      <summary>
            数据类型转换
            </summary>
      <param name="binding">数据源绑定信息对象</param>
      <param name="oldValue">旧数据</param>
      <param name="descType">要转换的类型</param>
      <returns>转换后的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.ReadValue(DCSoft.Writer.Data.XDataBinding,System.Object,System.Object,System.Boolean)">
      <summary>
            读取数据
            </summary>
      <param name="binding">数据源绑定信息对象</param>
      <param name="dataSourceInstance">数据来源对象</param>
      <param name="defaultValue">默认值</param>
      <param name="throwException">发生错误时是否抛出异常</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.StdReadValue(DCSoft.Writer.Data.XDataBinding,System.Object,System.Object,System.Boolean,DCSoft.Writer.Data.XDataBindingProvider)">
      <summary>
            读取数据
            </summary>
      <param name="binding">数据源绑定信息对象</param>
      <param name="dataSourceInstance">数据来源对象</param>
      <param name="defaultValue">默认值</param>
      <param name="throwException">发生错误时是否抛出异常</param>
      <param name="provider">数据绑定提供者对象</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Data.XDataBindingProvider.StdReadValue(DCSoft.Writer.Data.XDataBindingPath,System.Object,System.Object,System.Boolean,DCSoft.Writer.Data.XDataBindingProvider)">
      <summary>
            标准的读取数值
            </summary>
      <param name="path">路径</param>
      <param name="instance">对象实例</param>
      <param name="defaultValue">默认值</param>
      <param name="throwException">是否抛出异常</param>
      <param name="provider">提供者对象</param>
      <returns>获得的数值</returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.CollectProtectedElementsEventArgs">
      <summary>
            收集内容保护信息事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.CollectProtectedElementsEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElementList,DCSoft.Writer.Dom.ContentProtectedInfoList)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">控件对象</param>
      <param name="document">文档对象</param>
      <param name="rootElements">根节点列表</param>
      <param name="infos">信息列表对象</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.CollectProtectedElementsEventArgs.RootElements">
      <summary>
            文档元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CollectProtectedElementsEventArgs.Infos">
      <summary>
            内容保护信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CollectProtectedElementsEventArgs.LimitedCount">
      <summary>
            信息个数限制
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.CommandErrorEventArgs">
      <summary>
            编辑器名称错误事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.CommandErrorEventArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.Document">
      <summary>
            正在处理的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.CommandName">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.CommmandParameter">
      <summary>
            命令参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.Exception">
      <summary>
            异常对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.ExceptionMessage">
      <summary>
            错误消息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.Message">
      <summary>
            错误提示信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CommandErrorEventArgs.Handled">
      <summary>
            是否处理过了本事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.CreateInstanceEventArgs">
      <summary>
            创建对象实例事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.CreateInstanceEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,System.Type,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="instanceType">实例类型</param>
      <param name="commandName">命令名称</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.InstanceType">
      <summary>
            实例对象类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.InstanceTypeFullName">
      <summary>
            对象类型全名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.CommandName">
      <summary>
            相关的命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.CreatedInstance">
      <summary>
            创建的对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.CreateInstanceEventArgs.Cancel">
      <summary>
            是否取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.CustomCommandEventArgs">
      <summary>
            自定义命令事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.CustomCommandEventArgs.#ctor(System.String,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">命令文本</param>
      <param name="cmd">命令名称</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.CustomCommandEventArgs.CommandName">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.FormatListItemsEventArgs">
      <summary>
            获得列表项目文本的事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.FormatListItemsEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.String,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String[],System.String[],System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="formatString">
      </param>
      <param name="document">
      </param>
      <param name="element">
      </param>
      <param name="selectedItems">
      </param>
      <param name="unSelectedItems">
      </param>
      <param name="separator">指定的分隔字符</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.Element">
      <summary>
            相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.Separator">
      <summary>
            各个项目之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.SeparatorChar">
      <summary>
            各个项目之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.FormatString">
      <summary>
            格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.SelectedItems">
      <summary>
            被选中的列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.UnselectedItems">
      <summary>
            没有被选中的列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.FormatListItemsEventArgs.Result">
      <summary>
            计算结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs">
      <summary>
            解释被选中项目的事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.String,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,System.String[],System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="formatString">
      </param>
      <param name="document">
      </param>
      <param name="element">
      </param>
      <param name="text">
      </param>
      <param name="items">
      </param>
      <param name="separator">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Element">
      <summary>
            相关的文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Separator">
      <summary>
            各个项目之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.SeparatorChar">
      <summary>
            各个项目之间的分隔字符
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.FormatString">
      <summary>
            格式化字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Items">
      <summary>
            项目列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ParseSelectedItemsEventArgs.Result">
      <summary>
            计算结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.PromptProtectedContentEventArgs">
      <summary>
            提示内容保护事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.PromptProtectedContentEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.String,DCSoft.Writer.PromptProtectedContentMode)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="doc">
      </param>
      <param name="ele">
      </param>
      <param name="msg">
      </param>
      <param name="mode">模式</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.PromptProtectedContentEventArgs.Message">
      <summary>
            提示信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.PromptProtectedContentEventArgs.PromptMode">
      <summary>
            提示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.PromptProtectedContentEventArgs.Handled">
      <summary>
            事件被处理了
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.QueryKBEntriesEventArgs">
      <summary>
            查询知识库列表的事件参数
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="spellCode">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.SpellCode">
      <summary>
            拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.Result">
      <summary>
            查询结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryKBEntriesEventArgs.Cancel">
      <summary>
            取消相关操作
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.QueryListItemsEventArgs">
      <summary>
            查询列表项目事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.QueryListItemsEventArgs.#ctor">
      <summary>
            无参数的构造函数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.QueryListItemsEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="document">
      </param>
      <param name="element">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.PageName">
      <summary>
            发出请求的页面名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.ControlName">
      <summary>
            发出请求的控件名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.RaiseEvent">
      <summary>
            是否触发事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.KBEntry">
      <summary>
            关联的知识节点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.Element">
      <summary>
            文档元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.ElementID">
      <summary>
            元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.ElementName">
      <summary>
            元素名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.ListSourceName">
      <summary>
            列表来源名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.SpellCode">
      <summary>
            当前使用的拼音码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.PreText">
      <summary>
            要查询的列表项目的前缀文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.SpecifyValue">
      <summary>
            指定的要查询的项目的后台数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.BufferItems">
      <summary>
            是否缓存数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.Result">
      <summary>
            列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.QueryListItemsEventArgs.Handled">
      <summary>
            本事件已经处理了，无需后续处理
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.StatusTextChangedEventArgs">
      <summary>
            状态栏文本发生改变事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.StatusTextChangedEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
      <param name="statusText">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.StatusTextChangedEventArgs.WriterControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.StatusTextChangedEventArgs.StatusText">
      <summary>
            状态栏文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlEventMessage">
      <summary>
            编辑器事件消息信息对象,不可继承
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.ContextText">
      <summary>
            事件相关的文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcElement">
      <summary>
            事件来源元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcElementID">
      <summary>
            事件来源元素编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcElementName">
      <summary>
            事件来源元素名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcElementValue">
      <summary>
            来源元素值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcInputFieldElement">
      <summary>
            获得事件来源所在的输入域元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcTableCellElement">
      <summary>
            获得事件来源所在的单元格元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcTableRowElement">
      <summary>
            获得事件来源所在的表格行元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcTableElement">
      <summary>
            获得事件来源所在的表格元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcSectionElement">
      <summary>
            获得事件来源所在的表格元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessage.SrcElementTypeName">
      <summary>
            事件来源文档元素类型名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ClipboardProvider">
      <summary>
            剪切板功能提供者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.Clear">
      <summary>
            清空剪切板内容 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.SaveData(System.Windows.Forms.IDataObject,System.Boolean)">
      <summary>
            保存数据到剪切板中
            </summary>
      <param name="data">
      </param>
      <param name="copy">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.GetDataObject(System.Windows.Forms.Control)">
      <summary>
            从剪切板中获得数据对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.CreateDataObject">
      <summary>
            创建一个数据容器对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.ClipboardProvider.SetDataTitle(System.Windows.Forms.IDataObject,System.String)">
      <summary>
            设置数据标题
            </summary>
      <param name="data">
      </param>
      <param name="title">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.DCOptionMode">
      <summary>
            选项状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCOptionMode.True">
      <summary>
            启用状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCOptionMode.False">
      <summary>
            禁止状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCOptionMode.AutoDetect">
      <summary>
            自动检测
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout_InnerClass.Value">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout_InnerClass.Value2">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout_InnerClass.Value3">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout_InnerClass.Value4">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout_InnerClass.Value5">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.BBdlgAbout_InnerClass2.Value2">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.BBdlgAbout_InnerClass2.Value3">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.BBdlgAbout_InnerClass2.Value4">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.BBdlgAbout_InnerClass2.Value5">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.BBdlgAbout_InnerClass2.Value">
      <summary>
            无实际效果，只是占个位置，用于触发静态构造函数.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgNoLicenseFunctionRisk.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgNoLicenseFunctionRisk.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgNoLicenseFunctionRisk.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgRequireNET20SP2.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgRequireNET20SP2.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgRequireNET20SP2.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgSystemLog.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgSystemLog.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgSystemLog.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementValueEditContext">
      <summary>
            元素属性值编辑相关的上下文
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementValueEditContext.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.Element">
      <summary>
            当前编辑的元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.PropertyName">
      <summary>
            编辑的属性名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.Editor">
      <summary>
            正在运行的文档元素值编辑器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementValueEditContext.EditStyle">
      <summary>
            正在使用的编辑器编辑样式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementValueEditorEditStyle">
      <summary>
            编辑器编辑模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditorEditStyle.None">
      <summary>
            无编辑器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditorEditStyle.DropDown">
      <summary>
            下拉列表模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditorEditStyle.Modal">
      <summary>
            对话框模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IAutoSaveManager">
      <summary>
            自动更新管理器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IAutoSaveManager.Exists(System.String,System.Boolean)">
      <summary>
            判断是否存在自动保存的文件
            </summary>
      <param name="fileID">文件编号</param>
      <param name="confirm">是否让用户确认操作</param>
      <returns>是否存在自动保存的文件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IAutoSaveManager.ReadContent(System.String)">
      <summary>
            读取自动保存的文件内容
            </summary>
      <param name="fileID">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IAutoSaveManager.SaveContent(System.String,System.Byte[])">
      <summary>
            为自动保存而保存文件内容到临时文件
            </summary>
      <param name="fileID">
      </param>
      <param name="content">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IAutoSaveManager.Delete(System.String)">
      <summary>
            删除临时保存的文件内容
            </summary>
      <param name="fileID">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.IWriterControlWebService">
      <summary>
            WEB服务对象必须实现的接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.GetSupportedMethods">
      <summary>
            获得所有支持的WEB方法
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.GetKBLibrary">
      <summary>
            获得知识库对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.QueryListItems(System.String,System.String,System.String,System.String)">
      <summary>
            查询列表项目
            </summary>
      <param name="listSourceName">列表来源名称</param>
      <param name="spellCode">拼音码</param>
      <param name="preText">前置文本</param>
      <param name="specifyValue">指定的数值</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.QueryAssistInputItems(System.String)">
      <summary>
            查询快捷输入的列表项目
            </summary>
      <param name="preWord">前置文本</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.SaveFileContent(System.String,System.String,System.String,System.Byte[])">
      <summary>
            保存文件内容
            </summary>
      <param name="fileName">文件名</param>
      <param name="fileSystemName">文件系统名称</param>
      <param name="fileFormat">文件格式</param>
      <param name="fileContent">文件内容</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.SaveFileContentForAutoSave(System.String,System.String,System.String,System.Byte[])">
      <summary>
            为自动保存功能而保存文件内容
            </summary>
      <param name="fileName">文件名</param>
      <param name="fileSystemName">文件系统名称</param>
      <param name="fileFormat">文件格式</param>
      <param name="fileContent">文件内容</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.ReadFileContent(System.String,System.String)">
      <summary>
            读取文件内容
            </summary>
      <param name="fileName">文件名</param>
      <param name="fileSystemName">文件系统名称</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.UIStartEditContent(System.String)">
      <summary>
            开始编辑内容
            </summary>
      <param name="documentID">文档编号</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.ReportError(System.Int32,System.String,System.String)">
      <summary>
            报错
            </summary>
      <param name="errorCode">错误代码</param>
      <param name="message">错误消息</param>
      <param name="details">错误详细信息</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.ButtonClick(System.String,System.String)">
      <summary>
            按钮按下
            </summary>
      <param name="elementID">按钮元素名称</param>
      <param name="commandName">按钮绑定的命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.DocumentPrinted(System.String,DCSoft.Printing.PrintResultStates,System.Int32,System.String)">
      <summary>
            文档打印
            </summary>
      <param name="documentID">文档编号</param>
      <param name="states">打印状态</param>
      <param name="printedPages">打印的页数</param>
      <param name="message">消息</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IWriterControlWebService.BeforePlayMedia(System.String,System.String,System.String)">
      <summary>
            准备播放视频
            </summary>
      <param name="documentID">文档编号</param>
      <param name="elementID">文档元素编号</param>
      <param name="sourceFileName">视频来源名</param>
      <returns>实际播放视频使用的URL</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.IWriterControlWebServiceProtocol.DebugMode">
      <summary>
            是否处于调试模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ParseSelectedItemsEventHandler">
      <summary>
            解析被选中文本的事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.TextWindowsFormsEditorHost">
      <summary>
            窗体环境的编辑器宿主对象
            </summary>
      <remarks>本类型是接口，类型名称应该是以大写字母I打头，但为了和旧代码兼容也就不遵循这个规则了。</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.GetCurrentValueEditControl">
      <summary>
            获得当前数值编辑控件
            </summary>
      <returns>获得的控件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.SetOwner(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            设置对象所属者
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="doc">文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.EditValue(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Controls.ElementValueEditor)">
      <summary>
            编辑文档元素数值
            </summary>
      <param name="element">文档元素对象</param>
      <param name="editor">编辑器对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.CancelEditValue">
      <summary>
            取消当前编辑操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.EditControl">
      <summary>
            编辑器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.KeepWriterControlFocused">
      <summary>
            弹出用户界面时仍然保持编辑器控件获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.CurrentEditContext">
      <summary>
            当前正在执行的文档元素值编辑操作上下文对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.EditingValue">
      <summary>
            正在编辑数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextWindowsFormsEditorHost.ShowingDropDown">
      <summary>
            正在显示下拉列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WebClientContextMenuType">
      <summary>
            WEB客户端快捷菜单类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebClientContextMenuType.None">
      <summary>
            无任何快捷菜单
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebClientContextMenuType.SystemDefault">
      <summary>
            使用浏览器默认的快捷菜单
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebClientContextMenuType.Custom">
      <summary>
            使用自定义快捷菜单
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WebServerInfo">
      <summary>
            WEB服务器运行信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebServerInfo.MaxOnlineNumber">
      <summary>
            最大并发数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebServerInfo.CurrentOnlineNumber">
      <summary>
            当前在线用户数
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebServerInfo.ClientInfos">
      <summary>
            客户端信息清单
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WebServerInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WebWriterControlLoadDocumentOptions">
      <summary>
            Web控件中加载文档时的选项
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WebWriterControlRenderMode">
      <summary>
            WEB控件内容呈现模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.PageImage">
      <summary>
            已图片方式分页显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.NormalHtml">
      <summary>
            正常的HTML方式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.NormalHtmlKeepLinebreak">
      <summary>
            正常的HTML方式，带有换行设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.PagePreviewHtml">
      <summary>
            分页预览HTML模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.PrintHtml">
      <summary>
            直接打印用HTML模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.ActiveXControl">
      <summary>
            ActiveX控件的形式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.AxPrintPreviewControl">
      <summary>
            ActiveX的打印预览控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.NsoControl">
      <summary>
            NsoControl形式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WebWriterControlRenderMode.NormalHtmlEditable">
      <summary>
            可编辑的正常HTML方式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlProvider">
      <summary>
            编辑器控件功能提供者对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlProvider.Control">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.LoadDocumentOptionsFromAppSettings">
      <summary>
            从配置文件项目的AppSettings加载文档选项
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.HasEvent(System.String)">
      <summary>
            是否存在指定名称的事件绑定
            </summary>
      <param name="eventName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.IsSupportWebMethod(DCSoft.Writer.Controls.WriterControlWebMethodTypes)">
      <summary>
            是否支持WEB方法
            </summary>
      <param name="method">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.RaiseEvent(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            原始的触发事件
            </summary>
      <param name="eventName">
      </param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.ControlLoading">
      <summary>
            控件正在加载标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.HandleAppError(DCSoft.Writer.Dom.XTextElement,System.Exception,System.String)">
      <summary>
            处理应用程序错误
            </summary>
      <param name="element">
      </param>
      <param name="ext">
      </param>
      <param name="eventName">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.AddLastEventNames(System.String)">
      <summary>
            添加事件名称到最后事件名称列表中
            </summary>
      <param name="name">事件名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterExecuteEventExpression(DCSoft.Writer.WriterAfterExecuteEventExpressionEventArgs)">
      <summary>
            触发EventAfterExecuteEventExpression事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventRefreshDomTree(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventRefreshDomTree事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeforeCollapseSection(DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterCollapseSection(DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeforeExpandSection(DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterExpandSection(DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeginPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发开始打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventEndPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发结束打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventDrawPageFrameContent(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            触发EventAfterDrawPage事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementValidating(DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementCheckedChanged(System.String,System.String,System.String,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            触发EventElementCheckedChanged事件
            </summary>
      <param name="elementID">元素编号</param>
      <param name="elementName">元素名称</param>
      <param name="elementValue">元素数值</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeforeUIKeyboardInputString(DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs)">
      <summary>
            触发EventBeforeUIKeyboardInputString事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventTableRowHeightChanging(DCSoft.Writer.WriterTableRowHeightChangingEventArgs)">
      <summary>
            触发EventTableRowHeightChanging事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnStatusTextChanged(DCSoft.Writer.Controls.StatusTextChangedEventArgs)">
      <summary>
            触发StatusTextChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventDrawShapeContent(DCSoft.Writer.WriterDrawShapeContentEventArgs)">
      <summary>
            触发EventDrawShapeContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventReportError(DCSoft.Writer.WriterReportErrorEventArgs)">
      <summary>
            触发EventReportError事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterLoadRawDOM(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventAfterLoadRawDOM事件
            </summary>
      <remarks>
            这是一个比较底层的事件，在加载文档的DOM模型后触发，而且在AfterLoad之前触发。
            </remarks>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventExpressionFunction(DCSoft.Writer.WriterExpressionFunctionEventArgs)">
      <summary>
            触发EventExpressionFunction事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventGetAdornText(DCSoft.Writer.WriterGetAdornTextEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventEditElementValue(DCSoft.Writer.WriterEditElementValueEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementGotFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementMouseDown(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDown事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementMouseMove(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseMove事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementMouseUp(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseUp事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventLinkClick(DCSoft.Writer.WriterLinkEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventGetLinkListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            触发EventGetLinkListItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventCollectProtectedElements(DCSoft.Writer.Controls.CollectProtectedElementsEventArgs)">
      <summary>
            触发EventCollecProtectedElements事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventZoomChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发EventZoomChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventPromptProtectedContent(DCSoft.Writer.Controls.PromptProtectedContentEventArgs)">
      <summary>
            触发EventPromptProtectedContent事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventTableAddNewRowWhenPressTabKey(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventTableAddNewRowWhenPressTabKey事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventContentChanging(DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发EventContentChanging事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventEndTabStop(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventEndTabStop事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发EventContentChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventUIStartEditContent(DCSoft.Writer.WriterStartEditEventArgs)">
      <summary>
            触发EventUIStartEditContent事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnAfterLoadDocumentDom(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发AfterLoadDocumentDom事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventCreateInstance(System.Type,System.Object,System.String)">
      <summary>
            DCWriter内部使用。触发创建对象实例事件
            </summary>
      <param name="instanceType">对象实例类型</param>
      <param name="instance">已经创建好的对象实例</param>
      <param name="cmdName">操作相关的编辑器命令名称</param>
      <returns>创建的对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnQueryUserHistoryDisplayText(DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs)">
      <summary>
            触发QueryUserHistoryDisplayText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventParseSelectedItems(DCSoft.Writer.Controls.ParseSelectedItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventParseSelectedItems事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventFormatListItems(DCSoft.Writer.Controls.FormatListItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventGetListItemsDispalyText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnUnknowCommandEvent(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            触发未知命令事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnAfterRefreshPages">
      <summary>
            触发AfterRefreshPages事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnComCustomCommand(DCSoft.Writer.Controls.CustomCommandEventArgs)">
      <summary>
            触发ComCustomCommand事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterDialogClosed(DCSoft.Writer.WriterAfterShowDialogEventArgs)">
      <summary>
            触发ComCustomCommand事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventButtonClick(DCSoft.Writer.WriterButtonClickEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementMouseDblClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDblClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementLostFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventElementMouseClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventReadFileContent(DCSoft.Writer.WriterReadFileContentEventArgs)">
      <summary>
            触发EventReadFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventSaveFileContent(DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventSaveFileContentForAutoSave(DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContentForAutoSave事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnDocumentNavigateContentChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档导航数据发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventTableRowHeightChanged(DCSoft.Writer.WriterTableRowHeightChangedEventArgs)">
      <summary>
            触发EventTableRowHeightChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventQueryAssistInputItems(DCSoft.Writer.WriterQueryAssistInputItemsEventArgs)">
      <summary>
            触发EventQueryAssistInputItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventOutlineTreeChanged">
      <summary>
            DCWriter内部使用。触发EventOutlineTreeChanged事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeforePlayMedia(DCSoft.Writer.WriterBeforePlayMediaEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterFieldContentEdit(DCSoft.Writer.WriterAfterFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventBeforeFieldContentEdit(DCSoft.Writer.WriterBeforeFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventAfterPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面后事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventPrintQueryPageSettings(DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs)">
      <summary>
            触发打印时查询页面设置事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnQueryKBEntries(DCSoft.Writer.Controls.QueryKBEntriesEventArgs)">
      <summary>
            触发查询知识库节点列表事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventMouseDownExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseDownExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventMouseMoveExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseMoveExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventMouseUpExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseUpExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventKeyDownExt(System.Windows.Forms.KeyEventArgs)">
      <summary>
            触发EventKeyDownExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventKeyUpExt(System.Windows.Forms.KeyEventArgs)">
      <summary>
            触发EventKeyUpExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventKeyPressExt(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            触发EventKeyPressExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventMouseClickExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventMouseDblClickExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseDblClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.InnerOnFilterValue(DCSoft.Writer.FilterValueEventArgs)">
      <summary>
            执行数据过滤
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.CreateElementsByKBEntry(DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs)">
      <summary>
            根据知识库节点创建文档元素
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnHoverElementChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发HoverElementChanged事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventReadonlyChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnDocumentLoad(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档加载事件，触发此事件时，文档已经加载成功，但尚未显示出来。
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventInsertObject(DCSoft.Writer.InsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。向文档插入对象数据
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventCanInsertObject(DCSoft.Writer.CanInsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。判断能否插入对象
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnSelectionChanging(DCSoft.Writer.Dom.SelectionChangingEventArgs)">
      <summary>
            触发文档选择状态发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnSelectionChanged(System.EventArgs)">
      <summary>
            DCWriter内部使用。触发文档选择状态发生改变后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnDocumentContentChanged(System.EventArgs)">
      <summary>
            触发文档内容发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnQueryListItems(DCSoft.Writer.Controls.QueryListItemsEventArgs)">
      <summary>
            查询下拉列表项目
            </summary>
      <param name="args">参数</param>
      <returns>查询的内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnUserTrackListChanged(System.EventArgs)">
      <summary>
            触发用户修改痕迹信息列表发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnAfterExecuteCommand(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnBeforeExecuteCommand(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令执行前的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnScriptError">
      <summary>
            触发文档脚本发生错误事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnCommandError(DCSoft.Writer.Commands.WriterCommand,DCSoft.Writer.Commands.WriterCommandEventArgs,System.Exception)">
      <summary>
            DCWriter内部使用。触发自定义的错误事件
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnDocumentPrinted(DCSoft.Writer.WriterDocumentPrintedEventArgs)">
      <summary>
            触发DocumentPrinted
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventUpdateToolarState(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventUpdateToolarState事件
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlProvider.OnEventGetSignToolTip(DCSoft.Writer.WriterGetSignToolTipEventArgs)">
      <summary>
            触发EventGetSignToolTip事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlProvider.IsTryCathForRaiseEvent">
      <summary>
            在触发事件是是否采用try-catch结构。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlProvider.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlProvider.ControlEventTemplate">
      <summary>
            控件事件模板
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlProvider.EnabledControlEvent">
      <summary>
            是否允许控件事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlEventTemplate">
      <summary>
            编辑器控件事件模板
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterExecuteEventExpression(System.Object,DCSoft.Writer.WriterAfterExecuteEventExpressionEventArgs)">
      <summary>
            触发EventAfterExecuteEventExpression事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventRefreshDomTree(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventRefreshDomTree事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeforeCollapseSection(System.Object,DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterCollapseSection(System.Object,DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeforeExpandSection(System.Object,DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterExpandSection(System.Object,DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeginPrint(System.Object,DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发开始打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventPrintQueryPageSettings(System.Object,DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs)">
      <summary>
            触发打印时查询页面设置事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventPrintPage(System.Object,DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterPrintPage(System.Object,DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面后事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventEndPrint(System.Object,DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发结束打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeforeFieldContentEdit(System.Object,DCSoft.Writer.WriterBeforeFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterFieldContentEdit(System.Object,DCSoft.Writer.WriterAfterFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementValidating(System.Object,DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeforePlayMedia(System.Object,DCSoft.Writer.WriterBeforePlayMediaEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventOutlineTreeChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发EventOutlineTreeChanged事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementCheckedChanged(System.String,System.String,System.String,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            触发EventElementCheckedChanged事件
            </summary>
      <param name="elementID">元素编号</param>
      <param name="elementName">元素名称</param>
      <param name="elementValue">元素数值</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventQueryAssistInputItems(System.Object,DCSoft.Writer.WriterQueryAssistInputItemsEventArgs)">
      <summary>
            触发EventQueryAssistInputItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventBeforeUIKeyboardInputString(System.Object,DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs)">
      <summary>
            触发EventBeforeUIKeyboardInputString事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventTableRowHeightChanged(System.Object,DCSoft.Writer.WriterTableRowHeightChangedEventArgs)">
      <summary>
            触发EventTableRowHeightChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventTableRowHeightChanging(System.Object,DCSoft.Writer.WriterTableRowHeightChangingEventArgs)">
      <summary>
            触发EventTableRowHeightChanging事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnDocumentNavigateContentChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档导航数据发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnStatusTextChanged(System.Object,DCSoft.Writer.Controls.StatusTextChangedEventArgs)">
      <summary>
            触发StatusTextChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventDrawShapeContent(System.Object,DCSoft.Writer.WriterDrawShapeContentEventArgs)">
      <summary>
            触发EventDrawShapeContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventReportError(System.Object,DCSoft.Writer.WriterReportErrorEventArgs)">
      <summary>
            触发EventReportError事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventAfterLoadRawDOM(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventAfterLoadRawDOM事件
            </summary>
      <remarks>
            这是一个比较底层的事件，在加载文档的DOM模型后触发，而且在AfterLoad之前触发。
            </remarks>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventExpressionFunction(System.Object,DCSoft.Writer.WriterExpressionFunctionEventArgs)">
      <summary>
            触发EventExpressionFunction事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventGetAdornText(System.Object,DCSoft.Writer.WriterGetAdornTextEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventEditElementValue(System.Object,DCSoft.Writer.WriterEditElementValueEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventSaveFileContentForAutoSave(System.Object,DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContentForAutoSave事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventSaveFileContent(System.Object,DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventReadFileContent(System.Object,DCSoft.Writer.WriterReadFileContentEventArgs)">
      <summary>
            触发EventReadFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementMouseClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementGotFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementGotFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementLostFocus(System.Object,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementLostFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementMouseDblClick(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDblClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementMouseDown(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDown事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementMouseMove(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseMove事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventElementMouseUp(System.Object,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseUp事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventButtonClick(System.Object,DCSoft.Writer.WriterButtonClickEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventLinkClick(System.Object,DCSoft.Writer.WriterLinkEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventGetLinkListItems(System.Object,DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            触发EventGetLinkListItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventCollectProtectedElements(System.Object,DCSoft.Writer.Controls.CollectProtectedElementsEventArgs)">
      <summary>
            触发EventCollecProtectedElements事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventZoomChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发EventZoomChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventPromptProtectedContent(System.Object,DCSoft.Writer.Controls.PromptProtectedContentEventArgs)">
      <summary>
            触发EventPromptProtectedContent事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventTableAddNewRowWhenPressTabKey(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventTableAddNewRowWhenPressTabKey事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventContentChanging(System.Object,DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发EventContentChanging事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventEndTabStop(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventEndTabStop事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventContentChanged(System.Object,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发EventContentChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnComCustomCommand(System.Object,DCSoft.Writer.Controls.CustomCommandEventArgs)">
      <summary>
            触发ComCustomCommand事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventUIStartEditContent(System.Object,DCSoft.Writer.WriterStartEditEventArgs)">
      <summary>
            触发EventUIStartEditContent事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnAfterLoadDocumentDom(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发AfterLoadDocumentDom事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventCreateInstance(System.Object,DCSoft.Writer.Controls.CreateInstanceEventArgs)">
      <summary>
            DCWriter内部使用。触发创建对象实例事件
            </summary>
      <param name="instanceType">对象实例类型</param>
      <param name="instance">已经创建好的对象实例</param>
      <param name="cmdName">操作相关的编辑器命令名称</param>
      <returns>创建的对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnAfterRefreshPages(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发AfterRefreshPages事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnQueryUserHistoryDisplayText(System.Object,DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs)">
      <summary>
            触发QueryUserHistoryDisplayText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventParseSelectedItems(System.Object,DCSoft.Writer.Controls.ParseSelectedItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventParseSelectedItems事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventFormatListItems(System.Object,DCSoft.Writer.Controls.FormatListItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventGetListItemsDispalyText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnUnknowCommandEvent(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            触发未知命令事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnQueryKBEntries(System.Object,DCSoft.Writer.Controls.QueryKBEntriesEventArgs)">
      <summary>
            触发查询知识库节点列表事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventMouseDownExt(System.Object,DCSoft.Writer.WriterMouseEventArgs)">
      <summary>
            触发EventMouseDownExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventMouseMoveExt(System.Object,DCSoft.Writer.WriterMouseEventArgs)">
      <summary>
            触发EventMouseMoveExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventMouseUpExt(System.Object,DCSoft.Writer.WriterMouseEventArgs)">
      <summary>
            触发EventMouseUpExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventKeyDownExt(System.Object,System.Int32,System.Int32)">
      <summary>
            触发EventKeyDownExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventKeyUpExt(System.Object,System.Int32,System.Int32)">
      <summary>
            触发EventKeyUpExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventKeyPressExt(System.Object,System.Int32)">
      <summary>
            触发EventKeyPressExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventMouseClickExt(System.Object,DCSoft.Writer.WriterMouseEventArgs)">
      <summary>
            触发EventMouseClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventMouseDblClickExt(System.Object,DCSoft.Writer.WriterMouseEventArgs)">
      <summary>
            触发EventMouseDblClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnFilterValue(System.Object,DCSoft.Writer.FilterValueEventArgs)">
      <summary>
            执行数据过滤
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.CreateElementsByKBEntry(System.Object,DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs)">
      <summary>
            根据知识库节点创建文档元素
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnHoverElementChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发HoverElementChanged事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventReadonlyChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnDocumentLoad(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档加载事件，触发此事件时，文档已经加载成功，但尚未显示出来。
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventInsertObject(System.Object,DCSoft.Writer.InsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。向文档插入对象数据
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnEventCanInsertObject(System.Object,DCSoft.Writer.CanInsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。判断能否插入对象
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnSelectionChanging(System.Object,DCSoft.Writer.Dom.SelectionChangingEventArgs)">
      <summary>
            触发文档选择状态发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnSelectionChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档选择状态发生改变后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnDocumentContentChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发文档内容发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnQueryListItems(System.Object,DCSoft.Writer.Controls.QueryListItemsEventArgs)">
      <summary>
            查询下拉列表项目
            </summary>
      <param name="args">参数</param>
      <returns>查询的内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnUserTrackListChanged(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发用户修改痕迹信息列表发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnAfterExecuteCommand(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnBeforeExecuteCommand(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令执行前的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnScriptError(System.Object,DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发文档脚本发生错误事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnCommandError(System.Object,DCSoft.Writer.Controls.CommandErrorEventArgs)">
      <summary>
            DCWriter内部使用。触发自定义的错误事件
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventTemplate.OnDocumentPrinted(System.Object,DCSoft.Writer.WriterDocumentPrintedEventArgs)">
      <summary>
            触发DocumentPrinted
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventTemplate.Enabled">
      <summary>
            是否启用对象
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterExecuteEventExpression">
      <summary>
            触发刷新执行元素事件表达式功能
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventRefreshDomTree">
      <summary>
            触发刷新DOM树事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeforeCollapseSection">
      <summary>
            展开文档节前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterCollapseSection">
      <summary>
            收缩文档节后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeforeExpandSection">
      <summary>
            展开文档节前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterExpandSection">
      <summary>
            展开文档节后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeginPrint">
      <summary>
            开始打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventPrintQueryPageSettings">
      <summary>
            打印时查询页面设置事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventPrintPage">
      <summary>
            打印页面事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterPrintPage">
      <summary>
            打印页面后事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventEndPrint">
      <summary>
            结束打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeforeFieldContentEdit">
      <summary>
            通过数值编辑器修改输入域内容前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterFieldContentEdit">
      <summary>
            通过数值编辑器修改输入域内容前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementValidating">
      <summary>
            文档元素内容校验事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeforePlayMedia">
      <summary>
            准备播放媒体事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventOutlineTreeChanged">
      <summary>
            文档大纲树状结构发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementCheckedChanged">
      <summary>
            元素勾选状态发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventQueryAssistInputItems">
      <summary>
            查询辅助录入使用的字符串列表事件,注意：这个事件不是在UI线程中触发。不能在本事件处理中直接操作用UI控件。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventBeforeUIKeyboardInputString">
      <summary>
            键盘输入字符串事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventTableRowHeightChanged">
      <summary>
            表格行高度发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventTableRowHeightChanging">
      <summary>
            表格行高度正在发生改变事件，在这个事件中可以取消表格行高度修改操作
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.DocumentNavigateContentChanged">
      <summary>
            文档内容的导航数据发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.StatusTextChanged">
      <summary>
            状态栏文本发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventDrawShapeContent">
      <summary>
            自定义绘制图形内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventReportError">
      <summary>
            报告错误内容的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventAfterLoadRawDOM">
      <summary>
            加载文档DOM结构后的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventExpressionFunction">
      <summary>
            执行表达式函数功能事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventGetAdornText">
      <summary>
            获得文档元素的扩展文本内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventEditElementValue">
      <summary>
            编辑文档元素数值事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventSaveFileContentForAutoSave">
      <summary>
            为自动保存功能而设置的保存文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventSaveFileContent">
      <summary>
            保存文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventReadFileContent">
      <summary>
            读取文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementMouseClick">
      <summary>
            文档元素鼠标点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementGotFocus">
      <summary>
            文档元素获取焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementLostFocus">
      <summary>
            文档元素获取焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementMouseDblClick">
      <summary>
            文档元素鼠标双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementMouseDown">
      <summary>
            文档元素鼠标双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementMouseMove">
      <summary>
            文档元素鼠标移动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventElementMouseUp">
      <summary>
            文档元素鼠标按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventButtonClick">
      <summary>
            按钮点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventLinkClick">
      <summary>
            超链接点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventGetLinkListItems">
      <summary>
            获得联动下拉列表事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventCollectProtectedElements">
      <summary>
            收集内容保护信息事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventZoomChanged">
      <summary>
            控件缩放事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventPromptProtectedContent">
      <summary>
            提示内容受保护的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventTableAddNewRowWhenPressTabKey">
      <summary>
            使用TAB键新增表格行触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventEndTabStop">
      <summary>
            结束切换输入焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventContentChanging">
      <summary>
            内容正在改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventContentChanged">
      <summary>
            内容已经改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.ComCustomCommand">
      <summary>
            自定义命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventUIStartEditContent">
      <summary>
            用户界面层的开始编辑文档内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.AfterLoadDocumentDom">
      <summary>
            成功加载文档DOM结构触发的事件，此时文档虽然加载了DOM结构，但没有排版和显示。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventCreateInstance">
      <summary>
            创建对象实例事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.AfterRefreshPages">
      <summary>
            刷新分页后事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.QueryUserHistoryDisplayText">
      <summary>
            查询用户历史记录显示文本事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventParseSelectedItems">
      <summary>
            解释列表项目的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventFormatListItems">
      <summary>
            获得列表显示文本事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventUnknowCommand">
      <summary>
            未知编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.QueryKBEntries">
      <summary>
            查询知识库节点列表事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventMouseDownExt">
      <summary>
            增强型鼠标按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventMouseMoveExt">
      <summary>
            增强型鼠标移动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventMouseUpExt">
      <summary>
            增强型鼠标按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventKeyDownExt">
      <summary>
            扩展的键盘按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventKeyUpExt">
      <summary>
            扩展的键盘按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventKeyPressExt">
      <summary>
            扩展的键盘按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventMouseClickExt">
      <summary>
            增强型鼠标按键单击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventMouseDblClickExt">
      <summary>
            增强型鼠标按键双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.FilterValue">
      <summary>
            数据过滤事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventCreateElementsByKBEntry">
      <summary>
            根据知识库节点创建文档元素对象的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.HoverElementChanged">
      <summary>
            当前鼠标悬浮的元素改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventReadonlyChanged">
      <summary>
            控件Readonly属性值发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.VOIDCOMDocumentLoad">
      <summary>
            仅供COM调用的事件，一般不要使用
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.DocumentLoad">
      <summary>
            文档加载事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventInsertObject">
      <summary>
            向文档插入对象事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.EventCanInsertObject">
      <summary>
            判断能否插入对象事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.SelectionChanging">
      <summary>
            文档选择状态正在发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.SelectionChanged">
      <summary>
            文档选择状态发生改变后的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.DocumentContentChanged">
      <summary>
            文档内容发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.VOIDCOMDocumentContentChanged">
      <summary>
            仅供COM调用的事件，一般不要使用
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.QueryListItems">
      <summary>
            查询下拉列表项目事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.UserTrackListChanged">
      <summary>
            文档内容中的用户修改痕迹列表信息发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.AfterExecuteCommand">
      <summary>
            结束执行编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.BeforeExecuteCommand">
      <summary>
            开始执行编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.ScriptError">
      <summary>
            脚本发生错误事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.CommandError">
      <summary>
            自定义处理命令错误的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControlEventTemplate.DocumentPrinted">
      <summary>
            文档打印事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl">
      <summary>
            一些测试代码
            </summary>
      <summary>
            文本文档编辑控件
            </summary>
      <remarks>编制 袁永福</remarks>
      <summary>
             编辑器命令相关功能模块
             </summary>
      <remarks>袁永福到此一游</remarks>
      <summary>
            编辑器中文档批注相关的功能
            </summary>
      <summary>
            编辑器控件的文档对象模型处理模块
            </summary>
      <summary>
            文档元素级事件相关代码
            </summary>
      <summary>
            加载和保存文件相关的操作
            </summary>
      <summary>
            处理键盘事件
            </summary>
      <summary>
            授权相关
            </summary>
      <summary>
            编辑器鼠标事件处理
            </summary>
      <summary>
            编辑器中绘制用户界面的操作
            </summary>
      <summary>
            编辑器打印相关代码
            </summary>
      <summary>
            内容安全及授权相关
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.UnknowWriterCommand">
      <summary>
            处理未知命令的命令对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UnknowWriterCommand.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.WriterKeyEventExtHandler">
      <summary>
            编辑器键盘事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="keyCode">
      </param>
      <param name="modifiers">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.WriterKeyPressEventExtHandler">
      <summary>
            编辑器键盘按键事件委托类型
            </summary>
      <param name="eventSender">
      </param>
      <param name="keyCode">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.WarringInfoManager">
      <summary>
            警示信息管理器
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.WarringInfo">
      <summary>
            警告信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.WarringInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.Clear">
      <summary>
            清空警示信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.Remove(System.Int32)">
      <summary>
            删除指定编号的警示信息
            </summary>
      <param name="id">编号</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.Contains(System.Int32)">
      <summary>
            是否包含指定编号的信息
            </summary>
      <param name="id">编号</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.AddForException(System.Int32,System.Exception)">
      <summary>
            添加错误信息
            </summary>
      <param name="id">
      </param>
      <param name="ext">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.Add(System.Int32,System.Object,System.Object,System.EventHandler,System.Drawing.Bitmap)">
      <summary>
            添加警示文本信息
            </summary>
      <param name="id">编号，如果大于等于0，则覆盖重复ID号的警示信息</param>
      <param name="title">标题</param>
      <param name="text">文本内容</param>
      <param name="clickHandler">点击事件处理委托</param>
      <param name="iconBmp">图标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WarringInfoManager.GetMenus">
      <summary>
            获得警示信息弹出式菜单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.ReportErrorHandler">
      <summary>
            报告错误事件委托类型
            </summary>
      <param name="parentWindow">
      </param>
      <param name="message">
      </param>
      <param name="details">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControl.MyExtInfoControlPanel">
      <summary>
            内置的扩展信息容器控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MyExtInfoControlPanel.SetExtInfoControlLayout(System.Int32)">
      <summary>
            设置内置控件排版状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MyExtInfoControlPanel.AddExtInfoControl(System.Windows.Forms.Control)">
      <summary>
            添加扩展信息控件
            </summary>
      <param name="ctl">控件对象</param>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl._Enable_Panel1_Paint">
      <summary>
            是否启用Pandl1_Paint功能
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl._ShowPowerByDCSoft">
      <summary>
            是否在文档最下面出现技术支持的文本。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.components">
      <summary> 
            必需的设计器变量。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_AfterExecuteCommand">
      <summary>事件 AfterExecuteCommand 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_AfterLoadDocumentDom">
      <summary>事件 AfterLoadDocumentDom 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_AfterRefreshPages">
      <summary>事件 AfterRefreshPages 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_BeforeExecuteCommand">
      <summary>事件 BeforeExecuteCommand 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ComCustomCommand">
      <summary>事件 ComCustomCommand 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ComEventDocumentContentChanged">
      <summary>事件 ComEventDocumentContentChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ComEventDocumentLoad">
      <summary>事件 ComEventDocumentLoad 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ComEventSelectionChanged">
      <summary>事件 ComEventSelectionChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ComEventStatusTextChanged">
      <summary>事件 ComEventStatusTextChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_CommandError">
      <summary>事件 CommandError 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_DocumentContentChanged">
      <summary>事件 DocumentContentChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_DocumentLoad">
      <summary>事件 DocumentLoad 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_DocumentNavigateContentChanged">
      <summary>事件 DocumentNavigateContentChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_DocumentPrinted">
      <summary>事件 DocumentPrinted 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterCollapseSection">
      <summary>事件 EventAfterCollapseSection 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterExecuteEventExpression">
      <summary>事件 EventAfterExecuteEventExpression 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventDrawPageFrameContent">
      <summary>
            事件EventAfterDrawPageFrame的名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterExpandSection">
      <summary>事件 EventAfterExpandSection 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterFieldContentEdit">
      <summary>事件 EventAfterFieldContentEdit 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterLoadRawDOM">
      <summary>事件 EventAfterLoadRawDOM 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventAfterPrintPage">
      <summary>事件 EventAfterPrintPage 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforeCollapseSection">
      <summary>事件 EventBeforeCollapseSection 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforeExpandSection">
      <summary>事件 EventBeforeExpandSection 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforeFieldContentEdit">
      <summary>事件 EventBeforeFieldContentEdit 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforePlayMedia">
      <summary>事件 EventBeforePlayMedia 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforeShowDialog">
      <summary>事件 EventBeforeShowDialog 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeforeUIKeyboardInputString">
      <summary>事件 EventBeforeUIKeyboardInputString 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventBeginPrint">
      <summary>事件 EventBeginPrint 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventButtonClick">
      <summary>事件 EventButtonClick 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventCanInsertObject">
      <summary>事件 EventCanInsertObject 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventCollectProtectedElements">
      <summary>事件 EventCollectProtectedElements 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventContentChanged">
      <summary>事件 EventContentChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventContentChanging">
      <summary>事件 EventContentChanging 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventCreateElementsByKBEntry">
      <summary>事件 EventCreateElementsByKBEntry 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventCreateInstance">
      <summary>事件 EventCreateInstance 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventDrawShapeContent">
      <summary>事件 EventDrawShapeContent 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventEditElementValue">
      <summary>事件 EventEditElementValue 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementCheckedChanged">
      <summary>事件 EventElementCheckedChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementGotFocus">
      <summary>事件 EventElementGotFocus 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementLostFocus">
      <summary>事件 EventElementLostFocus 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementMouseClick">
      <summary>事件 EventElementMouseClick 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementMouseDblClick">
      <summary>事件 EventElementMouseDblClick 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementMouseDown">
      <summary>事件 EventElementMouseDown 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementMouseMove">
      <summary>事件 EventElementMouseMove 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementMouseUp">
      <summary>事件 EventElementMouseUp 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventElementValidating">
      <summary>事件 EventElementValidating 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventEndPrint">
      <summary>事件 EventEndPrint 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventEndTabStop">
      <summary>事件 EventEndTabStop 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventExpressionFunction">
      <summary>事件 EventExpressionFunction 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventFormatListItems">
      <summary>事件 EventFormatListItems 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventGetAdornText">
      <summary>事件 EventGetAdornText 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventGetLinkListItems">
      <summary>事件 EventGetLinkListItems 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventGetSignToolTip">
      <summary>事件 EventGetSignToolTip 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventInsertObject">
      <summary>事件 EventInsertObject 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventLinkClick">
      <summary>事件 EventLinkClick 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventOutlineTreeChanged">
      <summary>事件 EventOutlineTreeChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventParseSelectedItems">
      <summary>事件 EventParseSelectedItems 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventPrintPage">
      <summary>事件 EventPrintPage 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventPrintQueryPageSettings">
      <summary>事件 EventPrintQueryPageSettings 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventPromptProtectedContent">
      <summary>事件 EventPromptProtectedContent 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventQueryAssistInputItems">
      <summary>事件 EventQueryAssistInputItems 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventReadFileContent">
      <summary>事件 EventReadFileContent 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventReadonlyChanged">
      <summary>事件 EventReadonlyChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventRefreshDomTree">
      <summary>事件 EventRefreshDomTree 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventReportError">
      <summary>事件 EventReportError 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventSaveFileContent">
      <summary>事件 EventSaveFileContent 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventSaveFileContentForAutoSave">
      <summary>事件 EventSaveFileContentForAutoSave 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventTableAddNewRowWhenPressTabKey">
      <summary>事件 EventTableAddNewRowWhenPressTabKey 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventTableRowHeightChanged">
      <summary>事件 EventTableRowHeightChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventTableRowHeightChanging">
      <summary>事件 EventTableRowHeightChanging 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventUIStartEditContent">
      <summary>事件 EventUIStartEditContent 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventUnknowCommand">
      <summary>事件 EventUnknowCommand 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventUpdateToolarState">
      <summary>事件 EventUpdateToolarState 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventZoomChanged">
      <summary>事件 EventZoomChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_FilterValue">
      <summary>事件 FilterValue 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_HoverElementChanged">
      <summary>事件 HoverElementChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_QueryKBEntries">
      <summary>事件 QueryKBEntries 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_QueryListItems">
      <summary>事件 QueryListItems 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_QueryUserHistoryDisplayText">
      <summary>事件 QueryUserHistoryDisplayText 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_ScriptError">
      <summary>事件 ScriptError 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_SelectionChanged">
      <summary>事件 SelectionChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_SelectionChanging">
      <summary>事件 SelectionChanging 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_StatusTextChanged">
      <summary>事件 StatusTextChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_UserTrackListChanged">
      <summary>事件 UserTrackListChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_VOIDCOMCustomCommand">
      <summary>事件 VOIDCOMCustomCommand 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_VOIDCOMDocumentContentChanged">
      <summary>事件 VOIDCOMDocumentContentChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_VOIDCOMDocumentLoad">
      <summary>事件 VOIDCOMDocumentLoad 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_VOIDCOMSelectionChanged">
      <summary>事件 VOIDCOMSelectionChanged 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventGetCustomContextMenu">
      <summary>事件 EventGetCustomContextMenu 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventMouseClickExt">
      <summary>事件 EventMouseClickExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventMouseDblClickExt">
      <summary>事件 EventMouseDblClickExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventMouseDownExt">
      <summary>事件 EventMouseDownExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventMouseMoveExt">
      <summary>事件 EventMouseMoveExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventMouseUpExt">
      <summary>事件 EventMouseUpExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventKeyDownExt">
      <summary>事件 EventKeyDownExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventKeyPressExt">
      <summary>事件 EventKeyPressExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.EVENTNAME_EventKeyUpExt">
      <summary>事件 EventKeyUpExt 的名称</summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl._EnableStdEvent">
      <summary>
            允许触发标准事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl._EnableOnSelectionChanging">
      <summary>
            是否启用SelectionChanging事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControl.InnerGlobalEventReportError">
      <summary>
            内部的报告错误事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveFileContent(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            DCWriter内部使用。保存文件内容
            </summary>
      <param name="ctl">控件</param>
      <param name="args">事件参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ReadFileContent(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.WriterReadFileContentEventArgs)">
      <summary>
            DCWriter内部使用。读取文件内容
            </summary>
      <param name="ctl">编辑器控件对象</param>
      <param name="args">参数</param>
      <returns>读取的二进制内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethod(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodReturnInt32(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodReturnString(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodReturnBoolean(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodReturnDouble(System.String)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">方法名</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodExt(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodExtReturnInt32(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodExtReturnString(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodExtReturnBoolean(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteScriptMethodExtReturnDouble(System.String,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            执行脚本方法
            </summary>
      <param name="methodName">脚本方法名称</param>
      <param name="p1">
      </param>
      <param name="p2">
      </param>
      <param name="p3">
      </param>
      <param name="p4">
      </param>
      <param name="p5">
      </param>
      <param name="p6">
      </param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetGlobalJavaScript(System.String)">
      <summary>
            设置全局的JavaScript代码.
            </summary>
      <param name="script">代码文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteGlobalScriptMethod(System.String,System.Object[],System.Boolean)">
      <summary>
            执行全局脚本方法
            </summary>
      <param name="methodName">方法名称</param>
      <param name="parameters">参数列表</param>
      <param name="throwException">释放抛出异常</param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteGlobalScriptCommand(System.String,System.Boolean,System.Object,System.Boolean@)">
      <summary>
            使用脚本来执行编辑器命令
            </summary>
      <param name="commandName">命令名称</param>
      <param name="showUI">是否显示用户界面</param>
      <param name="parameter">参数</param>
      <param name="handled">是否处理了。</param>
      <returns>返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RaiseJQueryEvent(System.Object,System.String,System.Object)">
      <summary>
            触发JQuery绑定的事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="engine">特别指定的脚本引擎对象，如果未空则默认为文档自己的脚本引擎对象</param>
      <returns>是否执行了脚本事件处理代码</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerRaiseJQueryEvent(System.Object,System.String,System.Object)">
      <summary>
            触发JQuery绑定的事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="eventName">事件名称</param>
      <param name="paramter">事件参数</param>
      <param name="engine">脚本引擎对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.TestScrollView">
      <summary>
            测试滚动视图
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ShowLicenseShareDialog(System.Windows.Forms.IWin32Window)">
      <summary>
            显示WEB授权共享对话框
            </summary>
      <param name="parent">父窗口对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RecreateViewControlHandle">
      <summary>
            重新创建视图控件的句柄，类似重启编辑器控件。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsSleeping">
      <summary>
            控件是否处于睡眠状态
            </summary>
      <returns>是否处于睡眠状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Sleep(System.Boolean)">
      <summary>
            进入睡眠模式，和Wakeup()配对使用。睡眠的控件不响应任何用户界面事件，一些接口也暂停。
            </summary>
      <param name="clearContent">是否清空文档内容</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Wakeup">
      <summary>
            唤醒控件，和Sleep()配对使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExtSetPropertyValue(System.String,System.String)">
      <summary>
            扩展的设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="strValue">字符串形式的属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExtGetPropertyValue(System.String)">
      <summary>
            扩展的获得属性值
            </summary>
      <param name="name">属性名</param>
      <returns>字符串格式的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsFocused">
      <summary>
            是否获得输入焦点
            </summary>
      <returns>是否有焦点</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsHostInIE">
      <summary>
            控件是否承载在IE控件中
            </summary>
      <returns>是否承载</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CheckOverrideAboutButton">
      <summary>
            检查关于按钮是否被恶意覆盖。
            </summary>
      <returns>如果是恶意覆盖则返回false,否则返回true.</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.PreloadSystem">
      <summary>
            预加载部分程序功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetCustomAttribute(System.String,System.String)">
      <summary>
            设置自定义属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCustomAttribute(System.String)">
      <summary>
            获得自定义属性值
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResetFormValue">
      <summary>
            重置表单元素默认值
            </summary>
      <returns>是否导致文档内容发生改变</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetOptionValue(System.String,System.String)">
      <summary>
            设置选项值,选项名称为“选项组名.选项名称”的格式，比如“ViewOptions.ShowParagraphFlag”。
            </summary>
      <remarks>
            比如
            obj.SetOptionValue("ViewOptions.ShowParagraphFlag","true");
            <br />obj.SetOptionValue("ViewOptions.TagColorForNormalField","#AAAAAA");
            </remarks>
      <param name="name">选项名称</param>
      <param name="Value">新的选项值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetOptionValue(System.String)">
      <summary>
            获得指定名称的选项数值,选项名称为“选项组名.选项名称”的格式，比如“ViewOptions.ShowParagraphFlag”。
            </summary>
      <remarks>
            比如
            string v = obj.GetOptionValue("ViewOptions.ShowParagraphFlag" ); // 返回 "true"或"false"。
            <br />string v2 = obj.GetOptionValue("ViewOptions.TagColorForNormalField");// 返回类似"#AAAAAA"等表示颜色值的字符串。
            </remarks>
      <param name="name">选项名称</param>
      <returns>选项数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetGlobalOptionValue(System.String,System.String)">
      <summary>
            设置DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <param name="Value">选项值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetGlobalOptionValue(System.String)">
      <summary>
            获得DCWriter全局选项值
            </summary>
      <param name="name">选项名称</param>
      <returns>选项值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddXMLLinkListProvider(System.String,System.String)">
      <summary>
            添加XML级联提供者对象
            </summary>
      <param name="providerName">级联提供者名称</param>
      <param name="xmlFileName">相关的XML文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetServerTime">
      <summary>
            获得服务器时间
            </summary>
      <returns>获得的服务器时间</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SynchroServerTime(System.DateTime)">
      <summary>
            同步服务器时间
            </summary>
      <param name="serverTime">当前服务器时间</param>
      <remarks>
            本函数不会修改本地计算机时钟，而是修改本软件内部维护的一个虚拟时钟。
            虚拟时钟会依赖本地计算机时钟。
            不过同步服务器时间后，如果本机时钟修改了，
            则需要重新调用本函数来同步服务器时间。如果不重新同步则会采用本机时刻。
            因此建议定期（比如一分钟）来调用本函数同步服务器时间。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SynchroServerTimeByParameters(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            同步服务器时间
            </summary>
      <param name="year">当前年份</param>
      <param name="month">当前月份</param>
      <param name="day">当前天数</param>
      <param name="hour">当前小时数</param>
      <param name="minute">当前分钟数</param>
      <param name="second">当前秒数</param>
      <remarks>
            本函数是SynchroServerTime(DateTime serverTime)的另外一个版本。用于对不支持DateTime类型的编程语言的支持。
            本函数不会修改本地计算机时钟，而是修改本软件内部维护的一个虚拟时钟。
            虚拟时钟会依赖本地计算机时钟。
            不过同步服务器时间后，如果本机时钟修改了，
            则需要重新调用本函数来同步服务器时间。如果不重新同步则会采用本机时刻。
            因此建议定期（比如一分钟）来调用本函数同步服务器时间。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DebugWriteLine(System.String)">
      <summary>
            输出一行调试信息
            </summary>
      <param name="txt">文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearDeveloperTools">
      <summary>
            清空开发者工具
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteFastInputMode(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            DCWriter内部使用。执行快速录入模式
            </summary>
      <param name="sourceElement">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerExecuteFastInputMode2(System.Object,System.EventArgs)">
      <summary>
            执行快速录入模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateRuleState">
      <summary>
            更新标尺状态,DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateRuleVisible">
      <summary>
            更新标尺的可见性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnRightToLeftChanged(System.EventArgs)">
      <summary>
            处理RightToLeftChanged事件，更新标尺位置
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnResize(System.EventArgs)">
      <summary>
            控件大小发生改变时处理
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnLoad(System.EventArgs)">
      <summary>
            控件加载时处理
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.TestOnLoad">
      <summary>
            测试控件加载时处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InitHandleIdle">
      <summary>
            初始化空闲处理机制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetInnerViewControl">
      <summary>
            DCWriter内部使用。内置的文档视图控件
            </summary>
      <returns>获得的控件对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.HasValidateInnerViewControl">
      <summary>
            判断是否存在有效的内置文档视图控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddServiceInstance(System.Object)">
      <summary>
            添加服务对象
            </summary>
      <param name="instance">服务对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsRunningWASM">
      <summary>
            控件是否运行在WASM（Web Assembly）环境中。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsAxControl">
      <summary>
            是否作为ActiveX控件的模式运行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsRuninWPF">
      <summary>
            是否运行在WPF环境中
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateDefaultFont(System.Boolean)">
      <summary>
            更新文档的默认字体
            </summary>
      <param name="updateUI">是否更新用户界面</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetInputFieldSelectedIndexs(System.String,System.String)">
      <summary>
            设置输入域选择多个下拉项目
            </summary>
      <param name="id">输入域编号</param>
      <param name="indexs">从0开始的下拉项目序号，各个序号之间用逗号分开</param>
      <returns>操作是否修改文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EditorSetDefaultFont(DCSoft.Drawing.XFontValue,System.Drawing.Color,System.Boolean)">
      <summary>
            编辑器调用的设置文档的默认字体和颜色
            </summary>
      <param name="font">默认字体</param>
      <param name="color">默认文本颜色</param>
      <param name="updateUI">是否更新用户界面</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddBufferedListItems(System.String,DCSoft.Writer.Data.ListItemCollection,System.Boolean)">
      <summary>
            添加缓存的项目列表
            </summary>
      <remarks>
            在这里添加好项目列表后，只需要设置输入域对象的field.FieldSettings.ListSource.SourceName
            等于这里的name参数值就能使用缓存的列表对象。
            </remarks>
      <param name="name">名称</param>
      <param name="items">缓存的项目列表</param>
      <param name="globalItems">是否为全局缓存</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetBufferedListItems(System.String)">
      <summary>
            获得缓存的项目列表
            </summary>
      <remarks>
            获得 AddBufferedListItems()函数缓存的列表对象
            </remarks>
      <param name="name">名称</param>
      <returns>获得的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RuntimeReadonly">
      <summary>
            运行时的控件内容只读设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InDesignMode">
      <summary>
            控件是否处于调试模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WriteDataSource">
      <summary>
            本接口仅供保持兼容性，请改为使用WriteDataFromDocumentToDataSource()
            </summary>
      <returns>写入的数据条数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveToClientPosition(System.Int32,System.Int32)">
      <summary>
            移动当前光标位置到指定客户区坐标位置处
            </summary>
      <param name="clientX">控件客户区X坐标，像素单位</param>
      <param name="clientY">控件客户区Y坐标，像素单位</param>
      <returns>操作是否修改了插入点</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveTo(DCSoft.Writer.MoveTarget)">
      <summary>
            将插入点移动到指定位置
            </summary>
      <param name="target">移动的目标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveToPosition(System.Int32)">
      <summary>
            移动光标到指定位置处
            </summary>
      <param name="index">位置序号</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveLeft">
      <summary>
            向左移动光标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveRight">
      <summary>
            向左移动光标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveHome">
      <summary>
            移动光标到行首
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveEnd">
      <summary>
            移动光标到行尾
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveUpOneLine">
      <summary>
            移动光标到上一行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveDownOneLine">
      <summary>
            移动光标到下一行
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CancelFormatBrush">
      <summary>
            取消格式刷操作,DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetHostedInstance(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            获得指定元素承载的对象
            </summary>
      <param name="element">文档元素对象</param>
      <returns>承载的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EnableVisualStyles">
      <summary>
            启用可视化样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateDCViewGraphics">
      <summary>
            创建视图用的画布对象
            </summary>
      <returns>创建的画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RefreshDocument">
      <summary>
            刷新文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RefreshDocumentLayout">
      <summary>
            刷新文档排版
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RefreshDocumentExt(System.Boolean,System.Boolean)">
      <summary>
            刷新文档
            </summary>
      <param name="refreshSize">是否重新计算元素大小</param>
      <param name="executeLayout">是否进行文档内容重新排版</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RefreshInnerView(System.Boolean)">
      <summary>
            刷新文档内部排版和分页。
            </summary>
      <param name="bolFastMode">是否为快速模式，如果为快速模式，则不重新绘制文档</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdatePages">
      <summary>
            更新文档页状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteVBScript(System.String)">
      <summary>
            单独执行一段外界注入的VB脚本代码
            </summary>
      <param name="scriptText">脚本代码</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDataSourceBindingDescriptionsXML">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述数据源绑定信息的XML字符串。</returns>
      <example>
            本函数返回的是类似以下的XML字符串，注意：此处使用了方括号替换了尖括号。
            [DCDataSourceBindingDescriptions]
                [Binding DataSource="Patient" BindingPath="Name" ElementID="field1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Age" ElementID="field2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Address.Street" ElementID="field3" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio1" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="Sex" ElementID="radio2" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="Patient" BindingPath="过敏" ElementID="" FormatString="" AutoUpdate="False" Readonly="False" /]
                [Binding DataSource="年龄" BindingPath="" ElementID="field4" FormatString="" AutoUpdate="False" Readonly="False" /]
            [/DCDataSourceBindingDescriptions]
            </example>[System.Reflection.Obfuscation(Exclude = true, ApplyToMembers = true)]
        </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetBindingDataSources">
      <summary>
            获得文档中绑定的数据源名称字符串列表。各个名称之间用逗号分开。
            </summary>
      <returns>数据源名称列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDataSourceBindingDescriptions">
      <summary>
            获得描述数据源绑定信息的XML字符串
            </summary>
      <returns>描述信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ViewPointToClient(System.Int32,System.Int32)">
      <summary>
            视图坐标转换为控件客户区中的坐标
            </summary>
      <param name="x">X值</param>
      <param name="y">Y值</param>
      <returns>新坐标</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClientPointToView(System.Int32,System.Int32)">
      <summary>
            将控件客户区中的坐标转换为视图坐标
            </summary>
      <param name="x">X值</param>
      <param name="y">Y值</param>
      <returns>新坐标</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ScrollToViewPosition(System.Single)">
      <summary>
            滚动视图到指定的视图坐标位置处
            </summary>
      <param name="viewPosition">视图Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ScrollToCaret">
      <summary>
            滚动视图到光标位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ScrollToCaretExt(DCSoft.WinForms.ScrollToViewStyle)">
      <summary>
            滚动视图到光标位置
            </summary>
      <param name="style">滚动方式</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateTextCaretByElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            根据指定的文档元素对象更新光标
            </summary>
      <param name="element">指定的文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateTextCaret">
      <summary>
            根据当前元素更新光标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateTextCaretWithoutScroll">
      <summary>
            根据当前元素更新光标，而且不会造成用户视图区域的滚动
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SelectAll">
      <summary>
            选中文档所有内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Cut(System.Boolean)">
      <summary>
            剪切
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Copy">
      <summary>
            复制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Paste">
      <summary>
            粘贴
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Undo">
      <summary>
            撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Redo">
      <summary>
            重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DeleteSelection(System.Boolean)">
      <summary>
            删除选择区域
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteElementDefaultMethod(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            执行文档元素默认方法
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CancelEditElementValue">
      <summary>
            取消当前的编辑元素内容的操作
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BeginEditElementValueById(System.String)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="id">文档元素编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BeginEditElementValue(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="element">文档元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerBeginEditElementValue(DCSoft.Writer.Dom.XTextElement,System.Boolean,DCSoft.Writer.ValueEditorActiveMode,System.Boolean,System.Boolean)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="element">元素对象</param>
      <param name="detectOnly">本次调用只是检测当前元素的值能否编辑，但不执行编辑操作</param>
      <param name="sourceMode">发起编辑操作的来源</param>
      <param name="checkActiveMode">是否检测激活模式</param>
      <param name="checkRecursion">检查递归</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BeginInsertKB">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BeginInsertKBSpecifyText(System.String)">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <param name="specifyText">指定的文本</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetTransformItemByDescPoint(System.Single,System.Single)">
      <summary>
            DCWriter内部使用。
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetZoomRate(System.Single)">
      <summary>
            设置缩放比率
            </summary>
      <param name="rate">缩放比率</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateForAutoZoom(System.Boolean)">
      <summary>
            为自动缩放而更新控件状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CheckSystemEnvironment(System.Boolean)">
      <summary>
            检查系统运行环境，若成功则返回空引用，若不成功则返回提示信息
            </summary>
      <param name="throwException">是否抛出异常</param>
      <returns>返回的提示信息，若通过则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EditorHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DelayFocus(System.Int32)">
      <summary>
            延时获得焦点
            </summary>
      <param name="interval">延时的毫秒数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.MoveToPage(System.Int32)">
      <summary>
            跳到指定页,页号从0开始计算。
            </summary>
      <param name="index">从0开始的页号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BeginUpdate">
      <summary>
            开始更新内容，锁定用户界面
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EndUpdate">
      <summary>
            结束更新内容，解锁用户界面
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerEndUpdate(System.Boolean)">
      <summary>
            结束更新内容，解锁用户界面
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WriteDataFromDocumentToDataSource">
      <summary>
            将文档中的数据写入到数据源中
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateDataSourceForView">
      <summary>
            请改用WriteDataFromDocumentToDataSource().
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WriteDataFromDataSourceToDocumentSpecifyParameterNames(System.String)">
      <summary>
            将指定名称的文档参数值填充到文档中
            </summary>
      <param name="parameterNames">指定的文档参数名称，各个名称之间用英文逗号分开。比如“姓名,性别,国籍”，如果为空则更新全部数据源。</param>
      <returns>更新的数据点个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.WriteDataFromDataSourceToDocument">
      <summary>
            将数据源中的数据写入到文档中。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateViewForDataSource">
      <summary>
            请改用WriteDataFromDataSourceToDocument().
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GCCollect">
      <summary>
            系统清理内存。这个过程是耗时间的。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BackgroundTasks">
      <summary>
            后台任务管理器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Dispose(System.Boolean)">
      <summary> 
            清理所有正在使用的资源。
            </summary>
      <param name="disposing">如果应释放托管资源，为 true；否则为 false。</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerClearMemberValues">
      <summary>
            清除成员数值，DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InitializeComponent">
      <summary> 
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.COMARGB2Integer(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            将ARGB的颜色值转换为整数
            </summary>
      <param name="a">A</param>
      <param name="r">R</param>
      <param name="g">G</param>
      <param name="b">B</param>
      <returns>颜色整数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.COMLoadImageFromFile(System.String,System.Int32)">
      <summary>
            加载图片文件，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="fileName">图片文件名</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.COMLoadImageFromBinary(System.Byte[],System.Int32)">
      <summary>
            加载图片内容，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="content">图片内容</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.COMLoadImageFromBase64String(System.String,System.Int32)">
      <summary>
            加载图片BASE64字符串，图片用完后需要调用COMDisposeImage()销毁掉。
            </summary>
      <param name="base64String">图片BASE64字符串</param>
      <param name="transparetColorARGB">ARGB格式的透明色</param>
      <returns>图片句柄</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.COMDisposeImage(System.Int32)">
      <summary>
            销毁指定的图片数据
            </summary>
      <param name="imageIndex">图片句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComInvalidate">
      <summary>
            Invalidate方法的COM接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComSetProperty(System.String,System.String)">
      <summary>
            面向COM的设置控件属性值
            </summary>
      <remarks>有些属性值类型不是COM公开的，无法直接设置。因此采用字符串的方式来试图设置控件属性值。
            例如 ctl.ComSetProperty("DocumentOptions.BehaviorOptions.EnableScript","false");</remarks>
      <param name="propertyName">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComGetProperty(System.String)">
      <summary>
            面向COM的获得控件的属性值
            </summary>
      <remarks>有些属性值类型不是COM公开的，无法直接设置。因此采用指定名称来试图设置控件属性值。
            例如 ctl.ComGetProperty("DocumentOptions.BehaviorOptions.EnableScript") 返回true/false.</remarks>
      <param name="propertyName">属性名</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComCallMethodByName(System.String,System.String)">
      <summary>
            面向COM的调用控件的方法
            </summary>
      <param name="name">
      </param>
      <param name="paramters">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComCallInstanceMethodByName(System.Object,System.String,System.String)">
      <summary>
            面向COM的调用控件的方法
            </summary>
      <param name="instance">对象实例</param>
      <param name="name">方法名称</param>
      <param name="paramters">参数</param>
      <returns>方法返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateInstanceByTypeName(System.String)">
      <summary>
            创建指定名称的类型的对象实例
            </summary>
      <param name="typeName">类型名称</param>
      <returns>创建的对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CheckPropertyValue(System.Object,System.String,System.String)">
      <summary>
            检查对象属性值，如果为空则创建属性值
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名，不区分大小写</param>
      <param name="valueTypeName">指定的属性值类型名称</param>
      <returns>本操作是否创建了对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AppendToContainerControl(System.Int32)">
      <summary>
            将控件添加到指定句柄的窗体中
            </summary>
      <param name="containerHandle">指定的窗体句柄对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StaticAppendToContainerControl(System.Windows.Forms.Control,System.Int32)">
      <summary>
            将控件添加到指定句柄的窗体中
            </summary>
      <param name="containerHandle">指定的窗体句柄对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComFocus">
      <summary>
            COM下获得焦点
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ComSelect">
      <summary>
            COM下选择控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Win32SetFoucs">
      <summary>
            调用Win32API函数来设置控件获得焦点
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.TestFireComEventSelectionChanged">
      <summary>
            测试
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCommandNameList">
      <summary>
            获得所有支持的命令名称组成的字符串，各个名称之间用逗号分开
            </summary>
      <returns>字符串列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsCommandSupported(System.String)">
      <summary>
            判断是否支持指定名称的功能命令
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>是否支持功能命令</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsCommandEnabled(System.String)">
      <summary>
            判断指定名称功能命令是否可用
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>功能命令是否可用</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsCommandChecked(System.String)">
      <summary>
            判断指定名称的功能命令是否处于勾选状态
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>功能命令是否处于勾选状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetCommandEnabled(System.String,System.Boolean)">
      <summary>
            设置指定的命令是否有效
            </summary>
      <param name="commandName">命令名称</param>
      <param name="enable">是否有效</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetCommandEnableLowLevel(System.String,System.Boolean)">
      <summary>
            设置指定的命令是否底层有效
            </summary>
      <param name="commandName">命令名称</param>
      <param name="enable">底层是否有效</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetCommandEnableHotKey(System.String,System.Boolean)">
      <summary>
            设置指定的命令是否启用快键键
            </summary>
      <param name="commandName">命令名称</param>
      <param name="enableHotKey">是否启用快键键</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteStringCommand(System.String)">
      <summary>
            以字符串的方式执行命令
            </summary>
      <remarks>命令字符串格式为“命令名称,是否显示UI,参数”,例如“fileopen,false,c:\a.xml”</remarks>
      <param name="command">命令文本</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteCommand(System.String,System.Boolean,System.Object)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteCommandSpecifyArgs(System.String,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="args">参数</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExecuteCommandSpecifyRaiseFromUI(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <param name="raiseFromUI">用户界面操作而触发的命令</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RefreshCommandUIState">
      <summary>
            刷新命令的用户界面中的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCommandSession(System.String)">
      <summary>
            获得指定名称的命令使用的命令回话数据容器对象
            </summary>
      <param name="commandName">命令名称</param>
      <returns>获得的回话对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementBy2IDs(System.String,System.String)">
      <summary>
            根据父元素编号和子元素编号获得文档元素对象
            </summary>
      <param name="idParent">
      </param>
      <param name="idChild">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateContentSearchReplacer">
      <summary>
            创建一个文档内容查找替换器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ReflectionGetElementPropertyValue(System.String,System.String)">
      <summary>
            通过反射来获得指定编号的元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <returns>获得的属性值转换的字符串</returns>
      <remarks>
            例如 var strStyle = ctl.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ReflectionSetElementPropertyValue(System.String,System.String,System.String)">
      <summary>
            通过反射来设置指定编号的文档元素的属性值。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">属性路径，各个属性名称之间用点号分开。</param>
      <param name="newValue">新的属性值</param>
      <returns>操作是否成功</returns>
      <remarks>
            例如 ctl.ReflectionGetElementPropertyValue("field1" , "FieldSettings.EditStyle","DropdownList");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ReflectionCallElementMethod(System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)">
      <summary>
            通过反射来执行指定编号的文档元素的方法。本方法用于解决COM编程接口不稳定的问题。
            </summary>
      <param name="id">元素编号</param>
      <param name="path">方法路径,可以使用"属性名1.属性名2.属性名3.方法名"的方式来深入调用方法</param>
      <param name="parameter1">参数1</param>
      <param name="parameter2">参数2</param>
      <param name="parameter3">参数3</param>
      <param name="parameter4">参数4</param>
      <param name="parameter5">参数5</param>
      <param name="parameter6">参数6</param>
      <returns>方法返回值转换的字符串，对于void类型返回【null】。</returns>
      <remarks>
            例如 ctl.ReflectionCallElementMethod("field1","Select",null,null,null,null,null,null);
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetNativeHostedControlHandle(System.String,System.IntPtr)">
      <summary>
            设置承载的原生态的控件。
            </summary>
      <param name="handle">控件句柄</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetStyleIndexByString(System.String)">
      <summary>
            获得样式在列表中的编号。
            </summary>
      <param name="styleString">样式字符串，比如“FontName:宋体;FontSize:9”</param>
      <returns>编号</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DocumentValueValidate">
      <summary>
            文档内容进行校验，返回校验结果
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DocumentValueValidateWithCreateDocumentComments">
      <summary>
            文档内容进行校验，返回校验结果
            </summary>
      <returns>校验结果列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DocumentValueValidateXML">
      <summary>
            文档内容进行校验，以XML形式返回校验结果
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResetOutlineNodes">
      <summary>
            重新设置OutlineNodes属性值
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateElementByXMLFragment(System.String)">
      <summary>
            根据一个XML字符串创建一个文档元素对象
            </summary>
      <param name="xml">XML字符串</param>
      <returns>创建的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResetBodyLayoutOffset">
      <summary>
             DCWriter内部使用。重置文档正文排版偏移量
            </summary>
      <returns>操作是否修改了数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateBackgroundModeSetter">
      <summary>
            创建一个背景模式设置器
            </summary>
      <returns>创建的设置器</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetInputFieldInnerValue(System.String)">
      <summary>
            获得指定编号的输入域的InnerValue属性值。
            </summary>
      <param name="id">输入域编号</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetInputFieldInnerValue(System.String,System.String)">
      <summary>
            设置指定编号的输入域的InnerValue属性值。
            </summary>
      <param name="id">输入域编号</param>
      <param name="newValue">新的属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementTextByID(System.String,System.String)">
      <summary>
            设置文档元素文本内容
            </summary>
      <param name="id">元素编号</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementTextByID(System.String)">
      <summary>
            获得文档元素文本内容
            </summary>
      <param name="id">元素编号</param>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementText(System.String,System.String)">
      <summary>
            设置文档元素文本内容
            </summary>
      <param name="id">元素编号</param>
      <param name="text">文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementText(System.String)">
      <summary>
            获得文档元素文本内容
            </summary>
      <param name="id">元素编号</param>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementChecked(System.String)">
      <summary>
            获得单复选框文档元素的勾选状态,如果没找到元素则返回false。
            </summary>
      <param name="id">文档元素编号</param>
      <returns>元素的勾选状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementChecked(System.String,System.Boolean)">
      <summary>
            设置单/复选框的勾选状态
            </summary>
      <param name="id">文档元素编号</param>
      <param name="newChecked">新的勾选状态</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementVisible(System.String)">
      <summary>
            获得文档元素的可见性
            </summary>
      <param name="id">元素编号</param>
      <returns>可见性</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementVisible(System.String,System.Boolean)">
      <summary>
            设置文档元素可见性
            </summary>
      <param name="id">文档元素编号</param>
      <param name="visible">可见性</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddDropdownListItem(System.String,System.String,System.String,System.Boolean)">
      <summary>
            为下拉列表元素添加下拉列表项目
            </summary>
      <param name="id">元素编号</param>
      <param name="text">项目的文本值</param>
      <param name="Value">项目的数值</param>
      <param name="saveToXml">添加的项目是否保存在XML中</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementProperty(System.String,System.String,System.String)">
      <summary>
            设置文档元素自定义属性
            </summary>
      <param name="id">文档元素编号</param>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementProperty(System.String,System.String)">
      <summary>
            获得文档元素的自定义属性值
            </summary>
      <param name="id">文档元素编号</param>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.FocusElementById(System.String)">
      <summary>
            让指定文档元素获得输入焦点
            </summary>
      <param name="id">元素编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SelectElementById(System.String)">
      <summary>
            选中文档元素
            </summary>
      <param name="id">文档元素编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDocumnetParameterValue(System.String)">
      <summary>
            获得文档参数值
            </summary>
      <param name="name">参数名</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDocumentParameterValue(System.String,System.Object)">
      <summary>
            设置文档参数值
            </summary>
      <param name="name">参数名</param>
      <param name="Value">新的参数值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDocumentParameterValueXml(System.String,System.String)">
      <summary>
            设置XML格式的文档参数值
            </summary>
      <param name="name">参数名</param>
      <param name="xmlText">参数值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDocumentParameterValueXml(System.String)">
      <summary>
            获得Xml格式的文档参数值
            </summary>
      <param name="name">参数名</param>
      <returns>参数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDocumentParameterEnabled(System.String,System.Boolean)">
      <summary>
            设置参数是否有效
            </summary>
      <param name="parameterName">参数名</param>
      <param name="enabled">是否有效</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDocumentParameterEnabled(System.String)">
      <summary>
            获得参数是否有效
            </summary>
      <param name="parameterName">参数名</param>
      <returns>是否有效</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DetectValueBindingModified">
      <summary>
            检测数据源填充操作导致的修改文档元素的个数，但不真正填充数据源，不会修改文档内容。
            </summary>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDetectValueBindingModifiedMessage">
      <summary>
            检测数据源填充操作导致的修改文档元素的相关信息，但不真正填充数据源，不会修改文档内容。
            </summary>
      <returns>结果信息列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsCurrentDocument(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            判断是否为当前文档
            </summary>
      <param name="document">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetDocument">
      <summary>
            获得文档对象
            </summary>
      <returns>文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCurrentElement(System.Type)">
      <summary>
            获得当前插入点所在的指定类型的文档元素对象。
            </summary>
      <param name="elementType">指定的文档元素类型</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCurrentElementByTypeName(System.String)">
      <summary>
            获得当前插入点所在的指定类型的文档元素对象。
            </summary>
      <param name="typeName">指定的文档元素类型的名称</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementXMLFragmentByID(System.String)">
      <summary>
            返回包含数据的XML片段,本函数返回的XML字符串可以作为编辑器控件或文档对象的函数CreateElementByXMLFragment()的参数。
            </summary>
      <param name="id">元素编号</param>
      <returns>生成的XML片段字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementOuterXmlByID(System.String)">
      <summary>
            返回元素内置内容的文档XML字符串
            </summary>
      <param name="id">文档元素对象</param>
      <returns>获得的XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementInnerXmlByID(System.String)">
      <summary>
            返回元素外置内容的文档XML字符串
            </summary>
      <param name="id">元素编号</param>
      <returns>XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetFirstElementByType(System.Type)">
      <summary>
            在子孙文档元素中获得第一个指定类型的文档元素，但不包括本元素本身。
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetFirstElementByTypeName(System.String)">
      <summary>
            在子孙文档元素中获得第一个指定类型的文档元素，但不包括本元素本身。
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetFormValue(System.String)">
      <summary>
            获得表单数据
            </summary>
      <param name="name">字段名称</param>
      <returns>获得的表单数值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetHtmlText(System.Boolean)">
      <summary>
            获得文档的Html文本代码
            </summary>
      <param name="IncludeSelectionOnly">是否只包含选择区域</param>
      <returns>获得的RTF文本代码字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementById(System.String)">
      <summary>
            获得指定ID号的文档元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">编号</param>
      <returns>找到的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementByIdExt(System.String,System.Boolean)">
      <summary>
            获得文档中指定编号的元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <param name="idAttributeOnly">只匹配元素ID属性</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementsByName(System.String)">
      <summary>
            获得文档中指定name值的元素对象,查找时name值区分大小写的。
            </summary>
      <param name="name">指定的编号</param>
      <returns>找到的元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementsByType(System.Type)">
      <summary>
            获得本文档元素容器包含的所有的指定类型的文档元素列表
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementsByTypeName(System.String)">
      <summary>
            获得文档中所有的指定类型的文档元素列表
            </summary>
      <param name="elementTypeName">元素类型名称</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementsById(System.String)">
      <summary>
            获得文档中所有指定编号的元素对象列表,查找时ID值区分大小写的。
            </summary>
      <param name="id">指定的编号</param>
      <returns>找到的元素对象列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetInputFieldElementById(System.String)">
      <summary>
            获得指定ID号的输入域对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">ID号</param>
      <returns>找到的输入域元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetTableElementById(System.String)">
      <summary>
            获得指定ID号的表格对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">ID号</param>
      <returns>找到的表格元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementAttribute(System.String,System.String)">
      <summary>
            获得指定文档元素的属性
            </summary>
      <param name="id">元素编号</param>
      <param name="attributeName">属性名称</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetElementAttribute(System.String,System.String,System.String)">
      <summary>
            设置文档元素的属性值
            </summary>
      <param name="id">元素编号</param>
      <param name="attributeName">属性名</param>
      <param name="attributeValue">属性值</param>
      <returns>操作是否完成</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNextElement(DCSoft.Writer.Dom.XTextElement,System.Type,System.Boolean)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementType">要查找的元素的类型</param>
      <param name="includeHiddenElement">查找的时候是否查找隐藏的文档元素对象</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNextElement(DCSoft.Writer.Dom.XTextElement,System.Type)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementType">要查找的元素的类型</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNowDateTime">
      <summary>
            获得系统当前日期时间
            </summary>
      <returns>日期事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNextElementByTypeName(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            获得文档中指定类型的下一个元素
            </summary>
      <param name="startElement">开始查找的起始元素</param>
      <param name="nextElementTypeName">要查找的元素的类型的名称</param>
      <returns>找到的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCheckedValueList(System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            获得文档中所有的勾选的复选框元素的值
            </summary>
      <param name="spliter">各个项目之间的分隔字符串</param>
      <param name="includeCheckbox">是否包含复选框</param>
      <param name="includeRadio">是否包含单选框</param>
      <param name="includeElementID">是否包含元素ID号</param>
      <param name="includeElementName">是否包含元素Name属性值</param>
      <returns>获得的字符串</returns>
      <remarks>
            例如调用 document.GetCheckedValueList(";",true,true,true,true) 返回类似字符串
            “xbzw;胸部正位;gpzw;骨盆正位;fbww;腹部卧位”
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetTableCell(System.String,System.Int32,System.Int32)">
      <summary>
            获得指定表格中的指定单元格
            </summary>
      <param name="tableID">编号编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <returns>获得的单元格对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetTableCellText(System.String,System.Int32,System.Int32)">
      <summary>
            获得表格单元格的文本内容
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <returns>单元格文本</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetTableCellText(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            设置单元格文本值
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndex">从0开始计算的行号</param>
      <param name="colIndex">从0开始计算的列号</param>
      <param name="newText">新文本值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementByPosition(System.Int32,System.Int32)">
      <summary>
            获得控件客户区中指定位置处的文档元素对象
            </summary>
      <param name="x">X坐标</param>
      <param name="y">Y坐标</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementClientBounds(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定的文档元素在编辑器控件客户区中的边界
            </summary>
      <param name="element">文档元素对象</param>
      <returns>边界</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementClientBoundsString(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定的文档元素在编辑器控件客户区中的边界的字符串值，为"left,top,width,height"格式.
            </summary>
      <param name="element">文档元素对象</param>
      <returns>边界</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetSpecifyElements(System.Type)">
      <summary>
            获得文档中所有的指定类型的文档元素列表
            </summary>
      <param name="elementType">元素类型</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetSpecifyElementsByTypeName(System.String)">
      <summary>
            获得文档中所有的指定类型的文档元素列表
            </summary>
      <param name="typeName">元素类型名称</param>
      <returns>获得的元素列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearUndo">
      <summary>
            清空重做/撤销操作信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearContent">
      <summary>
            清空文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SelectContentByStartEndIndex(System.Int32,System.Int32)">
      <summary>
            选择内容
            </summary>
      <param name="startContentIndex">选择区域起始编号</param>
      <param name="endContentIndex">选择区域终止编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SelectContentByStartEndElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            选择内容
            </summary>
      <param name="startElement">选择区域起始元素</param>
      <param name="endElement">选择区域终止元素</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetSurplusLinesOfSpeifyPage(System.Int32,System.Single)">
      <summary>
            获得指定页的剩余空白行数
            </summary>
      <param name="pageIndex">从1开始计算的页码号</param>
      <param name="specifyLineHeight">指定的行高</param>
      <returns>剩余的空白行数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetElementEventTemplates(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素使用的事件模板列表,包含绑定的列表和相关的全局列表
            </summary>
      <param name="element">文档元素对象</param>
      <returns>事件模板列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetCurrentEventHandled">
      <summary>
            设置当前用户界面事件(鼠标和键盘)被处理，无需后续处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsAllowEvent(System.String)">
      <summary>
            事件是否允许。
            </summary>
      <param name="eventName">事件名称,不区分大小写。</param>
      <returns>是否允许</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.NativeHasEvent(System.String)">
      <summary>
            是否存在指定名称的事件绑定
            </summary>
      <param name="eventName">事件名称</param>
      <returns>是否有绑定</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearNativeEvent(System.String)">
      <summary>
            清除事件委托
            </summary>
      <param name="eventName">事件名称</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.NativeRaiseEvent(System.String,System.Object,System.Object,System.Object,System.Object)">
      <summary>
            原始的触发事件
            </summary>
      <param name="eventName">事件名称</param>
      <param name="p1">参数1</param>
      <param name="p2">参数2</param>
      <param name="p3">参数3</param>
      <param name="p4">参数4</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsSupportWebMethod(DCSoft.Writer.Controls.WriterControlWebMethodTypes)">
      <summary>
            判断是否支持指定的WEB方法
            </summary>
      <param name="method">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EnabledEventMessage">
      <summary>
            是否启用事件消息机制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearEventMessage">
      <summary>
            清空内部的编辑器控件事件消息队列
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetEventMessage">
      <summary>
            获得一个编辑器控件事件消息.只有当控件的EnabledControlEvent=false时，本函数才有效。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SendEventMessage(DCSoft.Writer.Controls.WriterControlEventMessage)">
      <summary>
            发送事件消息
            </summary>
      <param name="msg">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.PostEventMessage(DCSoft.Writer.Controls.WriterControlEventMessage)">
      <summary>
            发送事件消息
            </summary>
      <param name="msg">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforeRefreshPages(DCSoft.Writer.WriterBeforeRefreshPagesEventArgs)">
      <summary>
            触发EventAfterExecuteEventExpression事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterExecuteEventExpression(DCSoft.Writer.WriterAfterExecuteEventExpressionEventArgs)">
      <summary>
            触发EventAfterExecuteEventExpression事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventRefreshDomTree(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventRefreshDomTree事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforeCollapseSection(DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterCollapseSection(DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterCollapseSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforeExpandSection(DCSoft.Writer.WriterSectionElementCancelEventArgs)">
      <summary>
            触发EventBeforeExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterExpandSection(DCSoft.Writer.WriterSectionElementEventArgs)">
      <summary>
            触发EventAfterExpandSection事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeginPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发开始打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventDrawPageFrameContent(DCSoft.Writer.Dom.DocumentPaintEventArgs)">
      <summary>
            触发EventAfterDrawPage事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventPrintQueryPageSettings(DCSoft.Writer.WriterPrintQueryPageSettingsEventArgs)">
      <summary>
            触发打印时查询页面设置事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterPrintPage(DCSoft.Writer.WriterPrintPageEventEventArgs)">
      <summary>
            触发打印页面后事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventEndPrint(DCSoft.Writer.WriterPrintEventEventArgs)">
      <summary>
            触发结束打印事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforeFieldContentEdit(DCSoft.Writer.WriterBeforeFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterFieldContentEdit(DCSoft.Writer.WriterAfterFieldContentEditEventArgs)">
      <summary>
            DCWriter内部使用。触发EventBeforeFieldContentEdit事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementValidating(DCSoft.Writer.ElementValidatingEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforePlayMedia(DCSoft.Writer.WriterBeforePlayMediaEventArgs)">
      <summary>
            触发EventBeforePlayMedia事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventOutlineTreeChanged">
      <summary>
            DCWriter内部使用。触发EventOutlineTreeChanged事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementCheckedChanged(System.String,System.String,System.String,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            触发EventElementCheckedChanged事件
            </summary>
      <param name="elementID">元素编号</param>
      <param name="elementName">元素名称</param>
      <param name="elementValue">元素数值</param>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventQueryAssistInputItems(DCSoft.Writer.WriterQueryAssistInputItemsEventArgs)">
      <summary>
            触发EventQueryAssistInputItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventBeforeUIKeyboardInputString(DCSoft.Writer.WriterBeforeUIKeyboardInputStringEventArgs)">
      <summary>
            触发EventBeforeUIKeyboardInputString事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventTableRowHeightChanged(DCSoft.Writer.WriterTableRowHeightChangedEventArgs)">
      <summary>
            触发EventTableRowHeightChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventTableRowHeightChanging(DCSoft.Writer.WriterTableRowHeightChangingEventArgs)">
      <summary>
            触发EventTableRowHeightChanging事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnDocumentNavigateContentChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档导航数据发生改变事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetStatusUIElement(System.Object,System.String)">
      <summary>
            设置状态栏文本显示的用户界面元素
            </summary>
      <param name="uiElement">用户界面元素对象，可以是System.Windows.Forms.Control或者System.Windows.Forms.ToolStripItem</param>
      <param name="formatString">状态栏文本格式化字符串</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnStatusTextChanged(DCSoft.Writer.Controls.StatusTextChangedEventArgs)">
      <summary>
            触发StatusTextChanged事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventDrawShapeContent(DCSoft.Writer.WriterDrawShapeContentEventArgs)">
      <summary>
            触发EventDrawShapeContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventReportError(DCSoft.Writer.WriterReportErrorEventArgs)">
      <summary>
            触发EventReportError事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventAfterLoadRawDOM(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventAfterLoadRawDOM事件
            </summary>
      <remarks>
            这是一个比较底层的事件，在加载文档的DOM模型后触发，而且在AfterLoad之前触发。
            </remarks>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventExpressionFunction(DCSoft.Writer.WriterExpressionFunctionEventArgs)">
      <summary>
            触发EventExpressionFunction事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventGetAdornText(DCSoft.Writer.WriterGetAdornTextEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventEditElementValue(DCSoft.Writer.WriterEditElementValueEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResetAutoSaveTask">
      <summary>
            重置自动保存任务
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StartAutoSaveTask">
      <summary>
            开始启动自动保存任务
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StopAutoSaveTask">
      <summary>
            停止自动保存任务
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventSaveFileContentForAutoSave(DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContentForAutoSave事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventSaveFileContent(DCSoft.Writer.WriterSaveFileContentEventArgs)">
      <summary>
            触发EventSaveFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventReadFileContent(DCSoft.Writer.WriterReadFileContentEventArgs)">
      <summary>
            触发EventReadFileContent事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementMouseClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementGotFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementGotFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementLostFocus(DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发EventElementLostFocus事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementMouseDblClick(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDblClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementMouseDown(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseDown事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementMouseMove(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseMove事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventElementMouseUp(DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发EventElementMouseUp事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventButtonClick(DCSoft.Writer.WriterButtonClickEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventLinkClick(DCSoft.Writer.WriterLinkEventArgs)">
      <summary>
            触发EventLinkClick事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventGetLinkListItems(DCSoft.Writer.Data.GetLinkListItemsEventArgs)">
      <summary>
            触发EventGetLinkListItems事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerOnEventCollectProtectedElements(DCSoft.Writer.Dom.XTextContainerElement,DCSoft.Writer.Dom.ContentProtectedInfoList,System.Int32)">
      <summary>
            内部的触发收集内容保护信息的事件
            </summary>
      <param name="rootElement">容器文档元素对象</param>
      <param name="list">信息列表</param>
      <param name="limitedCount">最大信息数量限制</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventCollectProtectedElements(DCSoft.Writer.Controls.CollectProtectedElementsEventArgs)">
      <summary>
            触发EventCollecProtectedElements事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventZoomChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发EventZoomChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventPromptProtectedContent(DCSoft.Writer.Controls.PromptProtectedContentEventArgs)">
      <summary>
            触发EventPromptProtectedContent事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventTableAddNewRowWhenPressTabKey(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventTableAddNewRowWhenPressTabKey事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventContentChanging(DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发EventContentChanging事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventEndTabStop(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventEndTabStop事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventContentChanged(DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发EventContentChanged事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnComCustomCommand(DCSoft.Writer.Controls.CustomCommandEventArgs)">
      <summary>
            触发ComCustomCommand事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetLastCustomCommandName">
      <summary>
            最后一次执行的自定义命令名称
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetLastCustomCommandText">
      <summary>
            最后一次执行的自定义命令名称的文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventUIStartEditContent(DCSoft.Writer.WriterStartEditEventArgs)">
      <summary>
            触发EventUIStartEditContent事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnAfterLoadDocumentDom(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发AfterLoadDocumentDom事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventCreateInstance(System.Type,System.Object,System.String)">
      <summary>
            DCWriter内部使用。触发创建对象实例事件
            </summary>
      <param name="instanceType">对象实例类型</param>
      <param name="instance">已经创建好的对象实例</param>
      <param name="cmdName">操作相关的编辑器命令名称</param>
      <returns>创建的对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnAfterRefreshPages">
      <summary>
            触发AfterRefreshPages事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnQueryUserHistoryDisplayText(DCSoft.Writer.QueryUserHistoryDisplayTextEventArgs)">
      <summary>
            触发QueryUserHistoryDisplayText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventParseSelectedItems(DCSoft.Writer.Controls.ParseSelectedItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventParseSelectedItems事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventFormatListItems(DCSoft.Writer.Controls.FormatListItemsEventArgs)">
      <summary>
            DCWriter内部使用。触发EventGetListItemsDispalyText事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnUnknowCommandEvent(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            触发未知命令事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateUnknowCommand">
      <summary>
            DCWriter内部使用。创建处理未知命令的命令对象
            </summary>
      <returns>创建的命令对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnQueryKBEntries(DCSoft.Writer.Controls.QueryKBEntriesEventArgs)">
      <summary>
            触发查询知识库节点列表事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventMouseDownExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseDownExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventMouseMoveExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseMoveExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventScroll(System.Windows.Forms.ScrollEventArgs)">
      <summary>
            触发EventMouseUpExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventMouseUpExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseUpExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventKeyDownExt(System.Windows.Forms.KeyEventArgs)">
      <summary>
            触发EventKeyDownExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventKeyUpExt(System.Windows.Forms.KeyEventArgs)">
      <summary>
            触发EventKeyUpExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventKeyPressExt(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            触发EventKeyPressExt事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventMouseClickExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventMouseDblClickExt(System.Windows.Forms.MouseEventArgs)">
      <summary>
            触发EventMouseDblClickExt事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerOnFilterValue(DCSoft.Writer.FilterValueEventArgs)">
      <summary>
            执行数据过滤
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateElementsByKBEntry(DCSoft.Writer.Data.CreateElementsByKBEntryEventArgs)">
      <summary>
            根据知识库节点创建文档元素
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnHoverElementChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发HoverElementChanged事件
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventReadonlyChanged(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventGetAdornText事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnDocumentLoad(DCSoft.Writer.WriterEventArgs)">
      <summary>
            DCWriter内部使用。触发文档加载事件，触发此事件时，文档已经加载成功，但尚未显示出来。
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventInsertObject(DCSoft.Writer.InsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。向文档插入对象数据
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventCanInsertObject(DCSoft.Writer.CanInsertObjectEventArgs)">
      <summary>
            DCWriter内部使用。判断能否插入对象
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnSelectionChanging(DCSoft.Writer.Dom.SelectionChangingEventArgs)">
      <summary>
            触发文档选择状态发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnSelectionChanged(System.EventArgs)">
      <summary>
            DCWriter内部使用。触发文档选择状态发生改变后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetInnerFoozenDocumentComments(System.Boolean)">
      <summary>
            内部使用：是否冻结文档批注排版。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnDocumentContentChanged(System.EventArgs)">
      <summary>
            触发文档内容发生改变事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetItemsFromListItemsBuffer(DCSoft.Writer.Dom.XTextInputFieldElement,System.String)">
      <summary>
            从缓存区中加载数据
            </summary>
      <param name="field">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnQueryListItems(DCSoft.Writer.Controls.QueryListItemsEventArgs)">
      <summary>
            查询下拉列表项目
            </summary>
      <param name="args">参数</param>
      <returns>查询的内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnAfterExecuteCommand(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令后的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnBeforeExecuteCommand(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            DCWriter内部使用。执行编辑器命令执行前的事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnScriptError">
      <summary>
            触发文档脚本发生错误事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnCommandError(DCSoft.Writer.Commands.WriterCommand,DCSoft.Writer.Commands.WriterCommandEventArgs,System.Exception)">
      <summary>
            DCWriter内部使用。触发自定义的错误事件
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnDocumentPrinted(DCSoft.Writer.WriterDocumentPrintedEventArgs)">
      <summary>
            触发DocumentPrinted
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetNeedUpdateToolbarState">
      <summary>
            DCWriter内部使用。通知控件允许触发 EventUpdateToolarState事件。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.NeedRaiseEventUpdateToolarState">
      <summary>
            判断是否需要触发EventUpdateToolarState事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventUpdateToolarState(DCSoft.Writer.WriterEventArgs)">
      <summary>
            触发EventUpdateToolarState事件
            </summary>
      <param name="cmd">编辑器命令对象</param>
      <param name="cmdArgs">参数</param>
      <param name="exp">异常对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnEventGetSignToolTip(DCSoft.Writer.WriterGetSignToolTipEventArgs)">
      <summary>
            触发EventGetSignToolTip事件
            </summary>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetLastEventNames">
      <summary>
            获得收集到的事件名称列表，各个事件名称之间用逗号分开。
            </summary>
      <remarks>目前支持的事件名称有DocumentContentChanged、DocumentLoad、
            SelectionChanged、SelectionChanging、StatusTextChanged。
            当编辑器控件嵌入在HTML页面中运行时，JavaScript可能无法响应控件事件，此时可以
            调用定时器定期调用这个函数来获得已经触发的事件名称，然后进行事件处理。</remarks>
      <returns>事件名称列表。</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddLastEventNames(System.String)">
      <summary>
            添加事件名称到最后事件名称列表中
            </summary>
      <param name="name">事件名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementLoadEvent(System.String,DCSoft.Writer.ElementLoadEventHandler)">
      <summary>
            附加文档元素的Load事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementBeforeDropDownEvent(System.String,DCSoft.Writer.ElementCancelEventHandler)">
      <summary>
            附加文档元素的BeforeDropDown事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementContentChangedEvent(System.String,DCSoft.Writer.ContentChangedEventHandler)">
      <summary>
            附加文档元素的ContentChanged事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementContentChangingEvent(System.String,DCSoft.Writer.ContentChangingEventHandler)">
      <summary>
            附加文档元素的ContentChanging事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementExpressionEvent(System.String,DCSoft.Writer.ElementExpressionEventHandler)">
      <summary>
            附加文档元素的Expression事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementGotFocusEvent(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            附加文档元素的GotFocus事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementKeyDownEvent(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            附加文档元素的KeyDown事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementKeyPressEvent(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            附加文档元素的KeyPress事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementKeyUpEvent(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            附加文档元素的KeyUp事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementLostFocusEvent(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            附加文档元素的LostFocus事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseClickEvent(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            附加文档元素的MouseClick事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseDblClickEvent(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            附加文档元素的MouseDblClick事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseDownEvent(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            附加文档元素的MouseDown事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseEnterEvent(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            附加文档元素的MouseEnter事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseLeaveEvent(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            附加文档元素的MouseLeave事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AttachElementMouseMoveEvent(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            附加文档元素的MouseMove事件
            </summary>
      <param name="idList">元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.EditLabelPageText(DCSoft.Writer.Dom.XTextLabelElement)">
      <summary>
            编辑文本标签元素在当前页面中显示的文本
            </summary>
      <param name="lbl">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BrowseFileForRead(System.Windows.Forms.IWin32Window,DCSoft.Writer.WriterAppHost,System.String,System.String@,System.String)">
      <summary>
            为读取文件而显示浏览文件对话框
            </summary>
      <param name="args">参数</param>
      <returns>获得的文件信息</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.BrowseFileForWrite(System.Windows.Forms.IWin32Window,DCSoft.Writer.WriterAppHost,System.String,System.String@,System.String)">
      <summary>
            为保存文件而显示浏览对话框
            </summary>
      <param name="args">参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StartLocalAutoSave">
      <summary>
            启用基于本地文件系统的自动保存功能
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AutoSaveExists(System.String,System.Boolean)">
      <summary>
            是否存在自动保存的文件
            </summary>
      <param name="fileID">文件编号</param>
      <param name="confirm">是否提示用户</param>
      <returns>是否存在自动保存的文件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AutoSaveDelete(System.String)">
      <summary>
            删除自动保存的临时文件
            </summary>
      <param name="fileID">文件编号</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AutoSaveLoadDocument(System.String)">
      <summary>
            从自动保存中恢复文件内容
            </summary>
      <param name="fileID">文件编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetHtmlText">
      <summary>
            获得文档Html文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetHtmlText(System.String)">
      <summary>
            设置文档HTML内容
            </summary>
      <param name="html">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetXMLTextForSaveBinary">
      <summary>
            获得用于保存的XML内容的字节数组
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DetectFileFormat(System.String)">
      <summary>
            检测文件格式
            </summary>
      <param name="strData">文件内容</param>
      <returns>文件格式</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromString(System.String,System.String)">
      <summary>
            以指定的格式加载文本文档内容
            </summary>
      <param name="text">文本</param>
      <param name="format">格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromXmlReader(System.Xml.XmlReader,System.String)">
      <summary>
            以指定的格式从XML读取器加载文本文档内容
            </summary>
      <param name="reader">XML读取器</param>
      <param name="format">格式</param>
      <returns>操作是否成功</returns>
            2023-1-21 年三十
        </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromStream(System.IO.Stream,System.String)">
      <summary>
            以指定的格式从指定的文件流中加载文本文档内容
            </summary>
      <param name="stream">流对象</param>
      <param name="format">格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromBase64String(System.String,System.String)">
      <summary>
            以指定的格式从BASE64字符串加载文档内容
            </summary>
      <param name="text">BASE64字符串</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromFile(System.String,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="url">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocumentFromBinary(System.Byte[],System.String)">
      <summary>
            从指定的字节数组中加载文档
            </summary>
      <param name="bs">字节数组</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocument(System.String,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="strUrl">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocument(System.IO.Stream,System.String)">
      <summary>
            从指定的文件流中加载文档
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LoadDocument(System.IO.TextReader,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="reader">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.IsValidateXML(System.String)">
      <summary>
            判断是否为合法的XML字符串
            </summary>
      <param name="xml">XML字符串</param>
      <returns>是否合法</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocument(System.String,System.String)">
      <summary>
            保存文档到指定名称的文件中
            </summary>
      <param name="strUrl">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocumentToFile(System.String,System.String)">
      <summary>
            保存文档到指定名称的文件中
            </summary>
      <param name="url">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocumentToFileFast(System.String,System.String)">
      <summary>
            快速的保存文档到指定名称的文件中
            </summary>
      <param name="url">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocumentToStream(System.IO.Stream,System.String)">
      <summary>
            保存文档到指定文件流中
            </summary>
      <param name="stream">文件流</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocument(System.IO.Stream,System.String)">
      <summary>
            保存文档到指定的流中
            </summary>
      <param name="stream">文档流</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocumentToString(System.String)">
      <summary>
            保存文档为字符串
            </summary>
      <param name="format">文件格式</param>
      <returns>输出的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveDocumentToBase64String(System.String)">
      <summary>
            保存文档为BASE64字符串
            </summary>
      <param name="format">文件格式</param>
      <returns>输出的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreatePageBmp(System.Int32,System.Boolean)">
      <summary>
            获得指定页的图片对象
            </summary>
      <param name="pageIndex">从0开始计算的页码</param>
      <param name="showMarginLine">是否绘制表示页边距的灰线</param>
      <returns>获得的图片对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateLongBmp(System.Boolean)">
      <summary>
            创建长的文档内容位图对象,一个图片中包含了文档中所有的内容。
            </summary>
      <param name="showMarginLine">是否绘制表示页边距的虚线</param>
      <returns>创建的位图对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageToBase64String(System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageToBase64StringInPrintMode(System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageToBase64StringZoom(System.String,System.Single)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <param name="zoomRate">缩放比率</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageFile(System.String)">
      <summary>
            保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageFileInPrintMode(System.String)">
      <summary>
            以打印模式保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SaveLongImageFileZoom(System.String,System.Single)">
      <summary>
            保存长图片文件
            </summary>
      <param name="fileName">文件名</param>
      <param name="zoomRate">缩放比率</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageFile(System.Int32,System.String)">
      <summary>
            保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageFileInPrintMode(System.Int32,System.String)">
      <summary>
            保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageFileZoom(System.Int32,System.String,System.Single)">
      <summary>
            保存页面图片文件
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="zoomRate">缩放比率</param>
      <param name="fileName">文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageToBase64String(System.Int32,System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageToBase64StringInPrintMode(System.Int32,System.String)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SavePageImageToBase64StringZoom(System.Int32,System.String,System.Single)">
      <summary>
            保存页面图片到BASE64字符串中
            </summary>
      <param name="pageIndex">从0开始计算的页面序号</param>
      <param name="format">图片格式，可以为bmp,png,jpg</param>
      <param name="zoomRate">缩放比率</param>
      <returns>生成的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.HandleBackspace">
      <summary>
            处理退格键
            </summary>
      <remarks>
            当控件承载在IE浏览器中运行时，默认会按下Backspace键时浏览器会跳到上一个历史页面。
            本控件提供一个HandleBackspace方法，而在浏览器中编写javascript函数响应浏览器的
            onkeydown事件。若按键为backspace键，则javascript调用HandleBackspace方法。
            若该方法返回true，表示编辑器处理了backspace事件。浏览器无需继续执行该方法。
            若返回false，表示编辑器没有处理backspace事件，浏览器可按默认方式进行处理。
            </remarks>
      <returns>控件是否处理了backspace按键事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SendKeyDownEvent(System.Windows.Forms.Keys)">
      <summary>
            发送KeyDown事件
            </summary>
      <param name="keyCode">键盘按键值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SendKeyPressEvent(System.Char)">
      <summary>
            发送KeyPress事件
            </summary>
      <param name="keyChar">字符</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CheckFWRegisteredWithDialog(System.Windows.Forms.Form,System.Windows.Forms.Control)">
      <summary>
            检查赋能框架的授权状态
            </summary>
      <param name="dlg">对话框</param>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerSetShowPBDCST(System.Boolean)">
      <summary>
            dcwriter内部使用。
            </summary>
      <param name="v">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StaticSetRegisterCode(System.String)">
      <summary>
            设置注册码的静态方法
            </summary>
      <param name="regCode">注册码</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetRegisterCode(System.String)">
      <summary>
            设置注册码
            </summary>
      <param name="regCode">注册码文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DialogTitlePrefix">
      <summary>
            对话框标题前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetHoverElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            触发鼠标悬停的文档元素改变事件。
            </summary>
      <param name="oldHoverElement">旧的鼠标悬停元素</param>
      <param name="newHoverElement">新的鼠标悬停元素</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnCanDragDrop(DCSoft.Writer.Dom.XTextElement,System.Windows.Forms.DragEventArgs,System.Single,System.Single)">
      <summary>
            判断是否可以接受处理OLE拖拽事件
            </summary>
      <param name="element">处理的元素</param>
      <param name="e">拖拽事件参数</param>
      <param name="ViewX">使用视图坐标的拖拽位置的X坐标</param>
      <param name="ViewY">使用视图坐标的拖拽位置的Y坐标</param>
      <returns>是否可以接受拖拽来的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InnerPaste(System.String,System.Boolean)">
      <summary>
            执行粘贴操作
            </summary>
      <param name="specifyFormat">指定的数据格式</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.DisableMouseEventInHalfSecond">
      <summary>
            暂时禁止所有的鼠标事件,0.5秒后恢复
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RedrawDocument">
      <summary>
            重新绘制文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.FixZoomRateRange(System.Single)">
      <summary>
            修正缩放比率范围。DCWriter内部使用。
            </summary>
      <param name="rate">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDomImage(DCSoft.Writer.DCStdImageKey,System.Drawing.Bitmap)">
      <summary>
            设置DOM使用的图标
            </summary>
      <param name="key">图标标号</param>
      <param name="bmp">图片对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDomImageByFileName(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>
            设置DOM使用的图标
            </summary>
      <param name="key">图标标号</param>
      <param name="fileName">图片文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetDomImageByBase64String(DCSoft.Writer.DCStdImageKey,System.String)">
      <summary>
            设置DOM使用的图标
            </summary>
      <param name="key">图标标号</param>
      <param name="fileName">图片文件名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.FlashElement(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            高亮度提示文档元素
            </summary>
      <param name="element">文档元素对象</param>
      <param name="autoScroll">是否自动滚动</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.FlashElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            高亮度提示文档元素
            </summary>
      <param name="elements">文档元素对象</param>
      <param name="autoScroll">是否自动滚动</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddSelectionAreaRectangle(System.Drawing.Rectangle)">
      <summary>
            添加被选择区域矩形
            </summary>
      <param name="rect">矩形</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ViewInvalidate(DCSoft.Writer.Dom.XTextLine,DCSoft.Drawing.PageContentPartyStyle)">
      <summary>
            声明指定文档行区域无效，需要重新绘制。
            </summary>
      <param name="line">
      </param>
      <param name="party">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ViewInvalidate(System.Drawing.RectangleF,DCSoft.Drawing.PageContentPartyStyle)">
      <summary>
            声明指定区域无效，需要重新绘制。无效矩形采用视图坐标。
            </summary>
      <param name="rect">无效矩形</param>
      <param name="party">文档区域</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Invalidate(DCSoft.Writer.Dom.XTextRange)">
      <summary>
            设置指定的区域视图无效
            </summary>
      <param name="range">文档区域</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RuntimeDefaultPrinterName">
      <summary>
            运行时用的默认打印机名称
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetGlobalPageIndexoffset(System.Int32)">
      <summary>
            设置全局的页码偏移量。
            </summary>
      <param name="offset">偏移量</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.PrintDocumentExt(System.Boolean,System.String)">
      <summary>
            指定页码打印文档，页码是从1开始计算的。但是这个起始页码也可以由SetGlobalPageIndexoffset()修改。
            </summary>
      <param name="showDialog">是否显示打印机选择对话框</param>
      <param name="specifyPageIndexs">
            指定的页码，各个页码之间用逗号分开，页码是从1开始计算的，如果为空则打印整个文档</param>
      <remarks>
            比如
            ctl.PrintDocumentExt( true , "1,3,5,7,9");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.PrintDocument">
      <summary>
            打印整个文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.PrintCurrentPage">
      <summary>
            打印当前页
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetJumpPrintByElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Printing.JumpPrintPositionMode,DCSoft.Writer.Dom.XTextElement,DCSoft.Printing.JumpPrintPositionMode)">
      <summary>
            根据文档元素来设置续打位置
            </summary>
      <param name="startElement">起始位置定位元素</param>
      <param name="startMode">起始位置模式</param>
      <param name="endElement">结束位置定位元素</param>
      <param name="endMode">结束位置模式</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetJumpPrintPositionTo(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            将续打位置移动到指定文档元素的上边缘
            </summary>
      <param name="element">文档元素对象</param>
      <param name="autoSetStartPageIndex">自动设置开始显示页码</param>
      <param name="useTopPosition">true:设置到文档元素的上边缘，false:设置到文档元素的下边缘</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetJumpPrintEndPositionTo(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            将下端续打位置移动到指定文档元素的边缘
            </summary>
      <param name="element">文档元素对象</param>
      <param name="autoSetEndPageIndex">自动设置开始显示页码</param>
      <param name="useTopPosition">true:设置到文档元素的上边缘，false:设置到文档元素的下边缘</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearCurrentSign">
      <summary>
            清空当前签名数据
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CanSignBySignImage">
      <summary>
            判断是否允许执行SignBySignImage函数。
            </summary>
      <returns>是否允许执行</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SignBySignImage(DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>
            对当前选中的签名图片元素进行签名操作
            </summary>
      <param name="input">签名操作输入参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SignElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Security.DCSignInputInfo)">
      <summary>
            对指定的文档元素内容进行签名。
            </summary>
      <param name="rootElement">容器元素，必须为XTextContainerElement类型</param>
      <param name="input">输入的参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ReSignElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            对指定的容器元素进行重新签名。
            </summary>
      <param name="rootElement">容器元素，必须为XTextContainerElement类型</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCurrentElementForSign">
      <summary>
            为电子签名操作而获取当前元素
             </summary>
      <returns>元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResignCurrentElement">
      <summary>
            对当前签名进行重新签名操作
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResignCurrentElementSpecifyMode(DCSoft.Common.DCCASignMode)">
      <summary>
            对当前签名进行指定模式的重新签名操作
            </summary>
      <param name="mode">指定的模式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LockContentByTableRow(System.String,System.Int32,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="tableID">表格编号</param>
      <param name="rowIndexBase0">从0开始计算的表格行序号</param>
      <param name="userID">锁定操作的用户ID</param>
      <param name="authoriseUserIDList">授权操作的用户ID列表，各个列表之间用英文逗号分开</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LockContentByElementID(System.String,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="elementID">元素编号，必须为一个容器类型的元素的编号</param>
      <param name="userID">锁定操作的用户ID</param>
      <param name="authoriseUserIDList">授权操作的用户ID列表，各个列表之间用英文逗号分开</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.LockContentByElement(DCSoft.Writer.Dom.XTextContainerElement,System.String,System.String,System.Boolean)">
      <summary>
            锁定文档元素的内容
            </summary>
      <param name="element">文档元素，必须为容器类文档元素</param>
      <param name="userID">
      </param>
      <param name="authoriseUserIDList">
      </param>
      <param name="logUndo">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CommitContentUserTraceById(System.String)">
      <summary>
            提交指定容器元素中的用户痕迹信息
            </summary>
      <param name="id">文档元素编号</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CommitContentUserTrace(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            提交指定容器元素中的用户痕迹信息
            </summary>
      <param name="element">容器文档元素对象</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CommitDocumentUserTrace">
      <summary>
            提交文档中所有的用户痕迹信息
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RejectUserTrace">
      <summary>
            拒绝对文档的修订
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.NavigateByUserTrackInfo(DCSoft.Writer.UserTrackInfo)">
      <summary>
            导航到指定的用户痕迹信息
            </summary>
      <param name="info">用户痕迹信息对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLogin">
      <summary>
            根据当前操作员信息进行用户登录
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLogin(DCSoft.Writer.Security.UserLoginInfo,System.Boolean)">
      <summary>
            执行用户登录操作
            </summary>
      <param name="loginInfo">登录信息</param>
      <param name="updateUI">是否更新用户界面</param>
      <returns>操作是否成功</returns>
      <remarks>
            本方法会自动启用授权控制，并以留痕模式显示文档内容。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLoginByCurrentUserInfo">
      <summary>
            根据当前操作员信息进行用户登录
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLogin(System.String,System.String,System.Int32)">
      <summary>
            用户登录
            </summary>
      <param name="userID">用户编号</param>
      <param name="userName">用户名</param>
      <param name="permissionLevel">用户等级</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLoginByUserLoginInfo(DCSoft.Writer.Security.UserLoginInfo,System.Boolean)">
      <summary>
            根据用户登录信息执行用户登录操作
            </summary>
      <param name="loginInfo">登录信息</param>
      <param name="updateUI">是否更新用户界面</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UserLoginByParameter(System.String,System.String,System.Int32)">
      <summary>
            根据参数进行用户登录
            </summary>
      <param name="userID">用户编号</param>
      <param name="userName">用户名</param>
      <param name="permissionLevel">用户等级</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CheckAutoUserLogin">
      <summary>
            检查用户自动登录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateUserInfoSaveTime">
      <summary>
            更新用户历史记录的时间
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateUserInfoSaveTimeExt(System.Boolean)">
      <summary>
            更新用户历史记录的时间
            </summary>
      <remarks>是否追加新的操作记录</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateDocumentFromClipboard">
      <summary>
            从系统剪切板创建文档对象
            </summary>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetSourceDataObjectForPaste(System.Boolean)">
      <summary>
            为粘贴操作获得数据源对象
            </summary>
      <returns>数据对象</returns>
      <remarks>DCWriter内部使用</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearInnerDataObject">
      <summary>
            清空内部的数据对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetSubDoumentContentXmlByID(System.String)">
      <summary>
            获得指定编号的子文档内容XML字符串
            </summary>
      <param name="id">子文档元素编号</param>
      <returns>获得的XML字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AppendSubDocument(DCSoft.Writer.Dom.XTextSubDocumentElement)">
      <summary>
            追加新的子文档对象
            </summary>
      <param name="newSubDoc">子文档对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.InsertSubDocuentAtCurrentPosition(DCSoft.Writer.Dom.XTextSubDocumentElement,System.Boolean)">
      <summary>
            在当前位置处插入子文档元素
            </summary>
      <param name="newSubDoc">要插入的子文档对象</param>
      <param name="insertUp">true:在上面插入；false:在下面插入</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UpdateToolTip(System.Boolean)">
      <summary>
            根据元素提示文本信息列表来更新用户界面
            </summary>
      <param name="checkVersion">是否检测提示信息版本号</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateContentBitmap">
      <summary>
            创建包含控件内容的BMP图片对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddExtInfoControl(System.Windows.Forms.Control)">
      <summary>
            添加扩展信息控件
            </summary>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExtInfoRemoveGroup(System.String)">
      <summary>
            删除指定分组的扩展信息
            </summary>
      <param name="groupName">组名</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExtInfoClear">
      <summary>
            删除所有扩展信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ExtInfoAddItem(System.String,System.String,System.String,System.Drawing.Image,System.EventHandler)">
      <summary>
            添加扩展信息
            </summary>
      <param name="groupName">组名</param>
      <param name="title">标题</param>
      <param name="description">说明文本</param>
      <param name="img">小图标，建议为16*16大小。</param>
      <param name="clickEventHandler">点击时的处理事件委托</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CursorHand">
      <summary>
            表示超链接的手型的鼠标光标对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.CreateWaittingUI(System.String,System.Int32)">
      <summary>
             创建等待操作界面
             </summary>
      <param name="msg">消息内容</param>
      <param name="delayMilliseconds">延时显示的毫秒数</param>
      <example>
             例如以下代码将显示一个等待操作界面，如果操作过程少于100毫秒则用户界面无任何变化。
             如果超过100毫秒，则在第100毫秒的时候显示等待操作的信息。
            <br />using (IDisposable man = ctl.CreateWaittingUI("正在操作中，请稍候...",100))
            <br />{
            <br />    进行一些和编辑器相关的很耗时的操作。
            <br />}
             </example>
      <returns>获得的操作信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetToMSWordVisualStyle">
      <summary>
            将控件设置成MS Word的显示样式。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetAllResourceStringValue">
      <summary>
            获得所有的字符串资源
            </summary>
      <returns>字符串资源列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetResourceStringValue(System.String,System.String)">
      <summary>
            设置字符串资源内容,改操作的影响是全局性的。
            </summary>
      <param name="name">字符串资源名称</param>
      <param name="Value">字符串资源值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StaticSetResourceStringValue(System.String,System.String)">
      <summary>
            设置字符串资源内容,改操作的影响是全局性的。
            </summary>
      <param name="name">字符串资源名称</param>
      <param name="Value">字符串资源值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Focus">
      <summary>
            编辑器控件获得输入焦点
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ResetUIStartEditContentState">
      <summary>
            重置检测文档内容编辑状态标记，使得可以再次进行判断。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UIStartEditContent">
      <summary>
            用户界面层的开始编辑文档内容
            </summary>
      <returns>如果返回true，则可以编辑文档内容；如果返回false则不能编辑文档内容。</returns>
      <remarks>
            此处的能否编辑文档内容和控件当的Readonly属性不一样。在该方法中，一开始是假定控件内容
            可以编辑，此时是按照内容可以编辑的状态来设置的编辑器命令状态。比如Bold,Italic,Paste等命令。
            不过用户真的动手修改文档内容时，会调用这个方法，如果返回false则该编辑操作取消掉。
            不过编辑器命令状态还是假定内容可编辑的。
            
            举个例子，如果系统实现了文档锁定机制，当编辑器打开一个文档，还没确定文档是否被锁定了。
            此时可以响应EventStartEditContent事件来确定文档是否真的被锁定了。如果被其他用户锁定了，
            则该方法返回false，如果没被锁定，则当前用户可以锁定文档，然后返回true。
            这种锁定仅影响用户界面层的操作，比如鼠标键盘事件、执行编辑器命令。但对程序直接调用
            控件和文档对象的各种属性方法来修改文档内容是没有影响的。
            本函数内部触发控件的EventUIStartEditContent事件，应用系统需要相应这个事件来判断文档
            是否处于锁定状态，以及锁定文档的操作。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UIStartEditContentSpecifyElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            用户界面层的开始编辑文档内容
            </summary>
      <returns>如果返回true，则可以编辑文档内容；如果返回false则不能编辑文档内容。</returns>
      <remarks>
            此处的能否编辑文档内容和控件当的Readonly属性不一样。在该方法中，一开始是假定控件内容
            可以编辑，此时是按照内容可以编辑的状态来设置的编辑器命令状态。比如Bold,Italic,Paste等命令。
            不过用户真的动手修改文档内容时，会调用这个方法，如果返回false则该编辑操作取消掉。
            不过编辑器命令状态还是假定内容可编辑的。
            
            举个例子，如果系统实现了文档锁定机制，当编辑器打开一个文档，还没确定文档是否被锁定了。
            此时可以响应EventStartEditContent事件来确定文档是否真的被锁定了。如果被其他用户锁定了，
            则该方法返回false，如果没被锁定，则当前用户可以锁定文档，然后返回true。
            这种锁定仅影响用户界面层的操作，比如鼠标键盘事件、执行编辑器命令。但对程序直接调用
            控件和文档对象的各种属性方法来修改文档内容是没有影响的。
            本函数内部触发控件的EventUIStartEditContent事件，应用系统需要相应这个事件来判断文档
            是否处于锁定状态，以及锁定文档的操作。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetCompositionRect(System.Single,System.Single,System.Single)">
      <summary>
            设置弹出式列表的最佳位置
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="height">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ShowAboutDialog">
      <summary>
            显示关于对话框
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNavigateNodesString">
      <summary>
            获得导航节点字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.GetNavigateNodesXMLString">
      <summary>
            获得导航节点XML字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.NavigateByNodeID(System.String)">
      <summary>
            导航到指定编号的节点的位置
            </summary>
      <param name="id">节点编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.Navigate(DCSoft.Writer.NavigateNode)">
      <summary>
            导航到节点指定的位置
            </summary>
      <param name="node">节点</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.SetStatusText(System.String)">
      <summary>
            设置状态栏文本，并触发事件
            </summary>
      <param name="text">新状态栏文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ToolWindows">
      <summary>
            配套的工具窗体列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StaticUIShowDialog(System.Windows.Forms.IWin32Window,System.Windows.Forms.Form,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            显示对话框
            </summary>
      <param name="ctl">控件对象</param>
      <param name="dlg">对话框对象</param>
      <param name="sourceElement">相关文档元素对象</param>
      <returns>对话框返回结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.StaticUIShowDialog(System.Windows.Forms.IWin32Window,System.Windows.Forms.CommonDialog,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            显示对话框
            </summary>
      <param name="ctl">控件对象</param>
      <param name="dlg">对话框对象</param>
      <param name="sourceElement">相关文档元素对象</param>
      <returns>对话框返回结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UIShowDialog(System.Windows.Forms.CommonDialog,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            显示对话框，返回对话框结果
            </summary>
      <param name="dlg">对话框对象</param>
      <param name="sourceElement">相关文档元素对象</param>
      <returns>返回的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.UIShowDialog(System.Windows.Forms.Form,DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            显示对话框，返回对话框结果
            </summary>
      <param name="dlg">对话框对象</param>
      <param name="sourceElement">相关文档元素对象</param>
      <returns>返回的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuItem(System.String,System.String)">
      <summary>
            添加快捷菜单项目
            </summary>
      <param name="text">菜单文本</param>
      <param name="commandName">菜单命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.ClearContextMenuItem">
      <summary>
            清空快捷菜单项目
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RaiseElementContentChangedEvent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            主动的触发文档元素的内容发生改变事件
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuSeparatorByTypeName(System.String)">
      <summary>
            向文档元素快键菜单添加一个分隔条
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuSeparator(System.Type)">
      <summary>
            向文档元素快键菜单添加一个分隔条
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>分隔条对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RemoveContextMenuItemByTypeName(System.String,System.String)">
      <summary>
            删除指定文档元素类型的快键菜单项目
            </summary>
      <param name="elementTypeName">类型名称</param>
      <param name="name">菜单名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.RemoveContextMenuItem(System.Type,System.String)">
      <summary>
            删除指定文档元素类型的快键菜单项目
            </summary>
      <param name="elementType">类型</param>
      <param name="name">菜单名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuItemByTypeName(System.String,System.String,System.String,System.String)">
      <summary>
            添加文档元素的快键菜单
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
      <param name="name">菜单项目名称</param>
      <param name="commandName">绑定的编辑器命令</param>
      <param name="text">菜单项目文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextCustomMenuItem(System.Type,System.String,System.EventHandler)">
      <summary>
            添加自定义快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="text">文本</param>
      <param name="clickHandler">自定义的功能函数委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuItem(System.Type,System.String,System.String,System.String,System.String,System.EventHandler)">
      <summary>
            添加快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="name">菜单项目名称</param>
      <param name="commandName">编辑器命令名</param>
      <param name="text">文本</param>
      <param name="iconBase64String">图标</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuItemByTypeTextCommandName(System.Type,System.String,System.String)">
      <summary>
            添加快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="text">文本</param>
      <param name="commandName">编辑器命令名</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.AddContextMenuItemByTypeTextHandler(System.Type,System.String,System.EventHandler)">
      <summary>
            添加快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="text">文本</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControl.OnHandleDestroyed(System.EventArgs)">
      <summary>
            为修复问题DCWRITER_CS-302而做的判断
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ControlTypeName">
      <summary>
            控件类型全名
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LockScrollPosition">
      <summary>
            锁定滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Log">
      <summary>
            系统日志信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContainerPanel">
      <summary>
            容器面板控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerSPBDCS">
      <summary>
            设置属性值为“南京都昌信息科技有限公司版权所有，盗版有奖举报电话13382028281，网站www.dcwriter.cn。”，
            即可隐藏编辑器右下角的"内置都昌软件"字样。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AllowApplyLocalDocumentOptions">
      <summary>
            允许启用ApplyLocalDocumentOptions功能。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SelectionVersion">
      <summary>
            选择状态版本号。任何选择区域或插入点的改变都会增加该属性值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DebugConfig">
      <summary>
            全局调试设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LicenceDisplayMode">
      <summary>
            授权信息显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ShowRegisterInfoInProgressUI">
      <summary>
            在进度等待界面中显示注册信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LastAlertInfos">
      <summary>
            最后一次操作产生的系统警告信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.BackColorString">
      <summary>
            控件背景色字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.BackColor">
      <summary>
            背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DateTimeService">
      <summary>
            时间提供者对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DeveloperToolsVisible">
      <summary>
            开发者工具是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContextMenuStrip">
      <summary>
            快键菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContextMenu">
      <summary>
            快键菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentPageBorderColorString">
      <summary>
            当前页面边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentPageBorderColor">
      <summary>
            当前页面边框线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GraphicsUnit">
      <summary>
            绘图单位
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.MoveCaretWithScroll">
      <summary>
            移动光标时是否自动滚动到光标区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AcceptsTab">
      <summary>
            获取或设置一个值，该值指示在控件中按 TAB 键时，是否在控件中键入一个 TAB 字符，而不是按选项卡的顺序将焦点移动到下一个控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ForceShowCaret">
      <summary>
            是否强制显示光标而不管控件是否获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RuleVisible">
      <summary>
            标尺是否可见,为了提高兼容性，默认不显示标尺。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RuleBackColor">
      <summary>
            标尺背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RuleEnabled">
      <summary>
            标尺是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DebugFlag">
      <summary>
            调试用的标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.StaticDebugFlag">
      <summary>
            调试用的静态标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoScroll">
      <summary>
            本控件不能设置自动滚动
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerViewControl">
      <summary>
            DCWriter内部使用。内置的文档视图控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.IsUpdating">
      <summary>
            正在更新用户界面，用户界面被锁定了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.KBLibraryUrl">
      <summary>
            知识库文件URL
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.KBLibrary">
      <summary>
            知识库对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.WaittingMode">
      <summary>
            控件是否处于等待模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoSetDocumentDefaultFont">
      <summary>
            自动设置文档的默认字体
            </summary>
      <remarks>若该属性值为true，则编辑器会自动将控件的字体和前景色设置
            到文档的默认字体和文本颜色。修改本属性值不会立即更新文档视图，
            此时需要调用“UpdateDefaultFont( true )”来更新文档视图。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ControlHostManger">
      <summary>
            承载的控件管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InitalizeParameterValues">
      <summary>
            初始化是用的参数列表，格式为“参数名:参数值;参数名:参数值;”。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ListItemsBuffer">
      <summary>
            列表缓存对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LastUIEventTime">
      <summary>
            最后一次用户界面事件的发生时间
            </summary>
      <remarks>这里的用户界面事件包括鼠标键盘事件、OLE拖拽事件，
            应用程序可以根据这个属性值来实现超时锁定用户界面的功能。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Readonly">
      <summary>
            文档内容只读标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HeaderFooterReadonly">
      <summary>
            页眉页脚是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormView">
      <summary>
            表单视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ServerObject">
      <summary>
            服务器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentOptions">
      <summary>
            文档设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentViewOptions">
      <summary>
            文档视图选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentBehaviorOptions">
      <summary>
            文档行为选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentEditOptions">
      <summary>
            文档编辑选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentSecurityOptions">
      <summary>
            文档安全选项
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentOptionsXML">
      <summary>
            文档设置XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ExcludeKeywords">
      <summary>
            违禁关键字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentControler">
      <summary>
            文档控制器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AppHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InitingAxWriterControl">
      <summary>
            正在初始化AxWriterControl类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RateOfDocumentUnitToPixel">
      <summary>
            获得将文档单位转换为屏幕像素单位的比率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContentViewHeight">
      <summary>
            文档内容视图高度
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormValuesString">
      <summary>
            获得各个表单数据组成的字符串，采用“名称=值&amp;名称=值&amp;名称=值”的形式，
            模仿HTML提交表单数据的字符串格式，遇到HTML特殊字符会进行转义处理。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormValues">
      <summary>
            表单数据组成在字典
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormValuesXml">
      <summary>
            XML格式的表单数据字典
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormValuesArray">
      <summary>
            表单数据组成的字符串数组，序号为偶数的元素为名称，序号为奇数的元素为数值。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HideCaretWhenHasSelection">
      <summary>
            当选择了文档内容时隐藏光标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SelectionStartPosition">
      <summary>
            文档中当前元素或被选择区域的开始位置在编辑器控件客户区中的坐标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PositionInfoText">
      <summary>
             表示当前插入点位置信息的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.IsEditingElementValue">
      <summary>
            正在编辑文档元素数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AbsoluteFocused">
      <summary>
            绝对的是否占有焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RaiseDocumentFoucsEventWhenControlFocusEvent">
      <summary>
            在控件的获得/失去焦点事件时是否触发文档的获得/失去焦点事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageSpacing">
      <summary>
            处于页面视图模式时各个页面间的距离，像素为单位
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.VisiblePages">
      <summary>
            可见页面的集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Pages">
      <summary>
            页面集合
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageIndex">
      <summary>
            设置或返回从1开始的当前页号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageCount">
      <summary>
            总页数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentPageIndex">
      <summary>
            从1开始计算的当前页号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentPage">
      <summary>
            当前页对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ReadViewMode">
      <summary>
            阅读版式视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageAlignment">
      <summary>
            页面边界对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageBackColor">
      <summary>
            页背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageBackColorString">
      <summary>
            页面背景文字字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HeaderFooterFlagVisible">
      <summary>
            是否显示页眉页脚标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ViewMode">
      <summary>
            页面显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.StartPageIndex">
      <summary>
            从0开始的计算的开始显示的页码号,只有处于分页视图模式下该属性才有效。小于0则不启用该设置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EndPageIndex">
      <summary>
            从0开始计算的最后显示的页码号,为0表示没有设置。只有处于分页视图模式下该属性才有效。小于0则不启用该设置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.MouseDragScroll">
      <summary>
            DCWriter内部使用。使用鼠标拖拽滚动模式标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InsertMode">
      <summary>
            当前是否处于插入模式,若处于插入模式,则光标比较细,否则处于改写模式,光标比较粗
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageBorderColorString">
      <summary>
            页面边框颜色值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageBorderColor">
      <summary>
            页面边框线颜色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.XZoomRate">
      <summary>
            X方向缩放率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.YZoomRate">
      <summary>
            Y方向缩放率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoZoom">
      <summary>
            设置自动缩放
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LocalMessageFilters">
      <summary>
            控件本地的Windows消息过滤器列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CanEnableIme">
      <summary>
            启用输入法
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerIsDisposed">
      <summary>
            控件是否被销毁了。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ForcePreProcessMessage">
      <summary>
            强制预处理消息，用于避免某些情况下的堆栈溢出错误。
            </summary>
      <remarks>一般情况下，AxWriterControl会自动检测是否需要强制预处理消息。不排除在某些情况下
            无法自动检测而导致出现堆栈溢出的错误，此时可以设置这个属性来强制预处理消息。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LayoutDock">
      <summary>
            布局停靠样式，仅仅向COM接口提供该属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommandControler">
      <summary>
            命令控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommentEditableWhenReadonly">
      <summary>
            即使在只读状态下是否能编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommentVisibility">
      <summary>
            是否显示文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DoubleClickToEditComment">
      <summary>
            鼠标双击来编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommentManager">
      <summary>
            文档批注管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.OutlineNodes">
      <summary>
            文档大纲层次的根节点列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentOutlineNode">
      <summary>
            当前文档大纲结构节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.BackgroundMode">
      <summary>
            后台运行模式
            </summary>
      <remarks>
            后台模式下，任何控件、文档只读和授权内容保护无效，可以任意修改文档内容。
            但仍然会根据需要留下历史修改痕迹。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Modified">
      <summary>
            文档内容改变标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Tables">
      <summary>
            文档中所有的表格对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Images">
      <summary>
            文档中所有的图片对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InputFields">
      <summary>
            文档中包含的文本输入域列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ModifiedInputFields">
      <summary>
            文档中包含的内容被修改的文本输入域列表对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentFontName">
      <summary>
            当前光标所在的字体名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentBold">
      <summary>
            当前光标所在的粗体样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentItalic">
      <summary>
            当前光标所在的斜体样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentUnderline">
      <summary>
            当前光标所在的下划线样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentSuperscript">
      <summary>
            当前光标所在的上标样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentSubscript">
      <summary>
            当前光标所在的下标样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentFontSize">
      <summary>
            当前光标所在的字体大小
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentParagraphAlign">
      <summary>
            当前段落对齐方式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentParagraphEOF">
      <summary>
            当前段落对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentBaseUrl">
      <summary>
            文档基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Comments">
      <summary>
            文档批注列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DocumentContentVersion">
      <summary>
            当前文档内容版本号，对文档内容的任何修改都会使得该版本号增加
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentStyle">
      <summary>
            当前元素样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SingleSelectedOrCurrentElement">
      <summary>
            当前唯一选中的元素或当前插入点右边的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentElement">
      <summary>
            当前插入点所在的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SingleSelectedElement">
      <summary>
            当前单选的文档元素对象
            </summary>
      <remarks>
            当只选中一个文档元素对象，则返回给文档元素对象，如果没有选中元素
            或者选中多个元素，则返回空。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentInputField">
      <summary>
            当前插入点所在的输入域元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentTableCell">
      <summary>
            当前插入点所在的单元格元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentTableRow">
      <summary>
            当前插入点所在的表格行元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentTable">
      <summary>
            当前插入点所在的表格元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentUser">
      <summary>
            当前用户信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentSection">
      <summary>
            当前插入点所在的文档节对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentContentPartyStyle">
      <summary>
            当前文档部分类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HoverElement">
      <summary>
            鼠标悬停的元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentLine">
      <summary>
            当前文本行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnableCollectOuterReference">
      <summary>
            允许启用CollectOuterReference功能。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CheckBoxes">
      <summary>
            文档中包含的所有的复选框元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RadioBoxes">
      <summary>
            文档中包含的所有的单选框元素列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Sections">
      <summary>
            获得文档中文档节列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FocusedPageIndexBase0">
      <summary>
            从0开始计算的获得输入焦点的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentComment">
      <summary>
            当前文档批注对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentColumnIndex">
      <summary>
            获得从1开始计算的当前列号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentLineIndex">
      <summary>
            当前行号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentLineIndexInPage">
      <summary>
            获得从1开始计算的当前文本行在页中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentLinePrivateIndexInPage">
      <summary>
            获得从1开始计算的当前文本行在页中的内置序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentLineOwnerPageIndex">
      <summary>
            获得从1开始计算的当前文本行所在的页码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Selection">
      <summary>
            文档选择的部分
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SelectedText">
      <summary>
            文档中被选中的文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnabledElementEvent">
      <summary>
            是否允许触发文档元素级事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EventTemplates">
      <summary>
            文档元素事件模板列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplates">
      <summary>
            全局文档元素事件模板列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_Field">
      <summary>
            文本域元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_CheckBox">
      <summary>
            复选框元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_Table">
      <summary>
            表格元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_TableRow">
      <summary>
            表格行元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_Cell">
      <summary>
            单元格元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_Image">
      <summary>
            图片元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalEventTemplate_Element">
      <summary>
            所有类型元素全局事件模板对象,是GlobalEventTemplates属性的封装。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AllowedEventNames">
      <summary>
            允许的事件名称列表。各个名称之间用逗号分开，名称不区分大小写。如果设置为空，则允许所有事件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.WebServiceUrl">
      <summary>
            Web服务页面地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalWebServiceUrl">
      <summary>
            全局性的Web服务页面地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.WebServiceClient">
      <summary>
            Web服务客户端
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.IsTryCathForRaiseEvent">
      <summary>
            是否用TRY-CATCH模式触发事件
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnabledControlEvent">
      <summary>
            是否允许控件的事件
            </summary>
      <remarks>
            如果本属性为false，则不触发任何编辑器的事件，不过System.Windows.Forms.Control中定义的事件仍然会触发。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LastEventMessage">
      <summary>
            最后一次获得的事件消息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ControlEventTemplate">
      <summary>
            控件事件模板对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HasEventSaveFileContentForAutoSave">
      <summary>
            是否有加载和保存文件内容的事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnabledEventReadSaveFileContent">
      <summary>
            是否启用读取和保存文件内容的事件，默认值为true，对于COM开发默认值为false。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HasEventReadSaveFileContent">
      <summary>
            是否有加载和保存文件内容的事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HasQueryListItems">
      <summary>
            判断是否存在QueryListItems事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalElementEventMan">
      <summary>
            全局文档元素事件处理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.OpenFileFilter">
      <summary>
            打开文件使用的文件名过滤字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SaveFileFilter">
      <summary>
            保存时使用的文件名过滤条件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoSaveManager">
      <summary>
            自动保存管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SpecifyLoadFileNameOnce">
      <summary>
            DCWriter内部使用, 指定的一次性使用的加载文件时的文件名。
             </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Text">
      <summary>
            控件数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RTFText">
      <summary>
            RTF文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.XMLTextUnFormatted">
      <summary>
            未格式化的XML文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.XMLText">
      <summary>
            XML文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.XMLTextWithDocumentState">
      <summary>
            获得文档XML内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.XMLTextForSave">
      <summary>
            生成用于保存的XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ShowWaittingUIForLoadingDocument">
      <summary>
            加载文档时显示等待界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LicenseServicePageUrl">
      <summary>
            授权服务器地址.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageTitlePosition">
      <summary>
            页面标题位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RegisterCodeFileUrl">
      <summary>
            注册码文件URL地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.RegisterCode">
      <summary>
            注册码
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AdditionPageTitle">
      <summary>
            显示在已经注册的页码标题文本后面的额外的页码标题文本。比如“授权给XX医院使用”。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AllowDragContent">
      <summary>
            能否直接拖拽文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AcceptDataFormats">
      <summary>
            编辑器控件能接受的数据格式，包括粘贴操作和OLE拖拽操作获得的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CreationDataFormats">
      <summary>
            编辑器控件能创建的数据格式，这些数据将用于复制操作和OLE拖拽操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DragEventHandled">
      <summary>
            拖拽事件已经处理标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GrayingDisabledHeaderFooter">
      <summary>
            是否灰化显示不活跃的页眉页脚。默认true。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DomImageList">
      <summary>
            DOM使用的图标列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HighlightRange">
      <summary>
            高亮度显示区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.HighlightRanges">
      <summary>
            高亮度显示区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PageSettings">
      <summary>
            页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.BoundsSelection">
      <summary>
            区域选择打印的信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ExtViewMode">
      <summary>
            扩展视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.GlobalDefaultPrinterName">
      <summary>
            全局的默认打印机名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DefaultPrinterName">
      <summary>
            默认打印机名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LastPrintResult">
      <summary>
            最后一次打印结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.LastPrintPosition">
      <summary>
            最后一次的打印位置
            </summary>
      <remarks>
            一般本属性和控件的JumpPrintPosition属性搭配使用.
            比如在打印后存储该属性值,下次打开文档后,再设置JumpPrintPosition属性值.
            能设置上次打印结束的位置为续打起始位置.
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.JumpPrint">
      <summary>
            续打信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnableJumpPrint">
      <summary>
            是否允许续打
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.JumpPrintPosition">
      <summary>
            续打位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.JumpPrintEndPosition">
      <summary>
            续打结束位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.UserTrackInfos">
      <summary>
            用户修改痕迹信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.IsAdministrator">
      <summary>
            是否以管理员模式运行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoUserLogin">
      <summary>
            每打开文档时自动进行用户登录
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoUserLoginInfo">
      <summary>
            执行自动登录时使用的用户登录信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.DataObjectRange">
      <summary>
            数据对象应用范围。本属性实际上引用了DocumentOptions.BehaviorOptions.DataObjectRange属性.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Clipboard">
      <summary>
            剪切板
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentSubDocument">
      <summary>
            当前子文档节元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.SubDocuments">
      <summary>
            文档中包含的子文档对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ShowTooltip">
      <summary>
            是否显示提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ToolTips">
      <summary>
            元素提示文本信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.WarringInfoMan">
      <summary>
            警示信息管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContentScrollPosition">
      <summary>
            内容滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.FormActivateUnstable">
      <summary>
            控件所在窗体的激活状态不稳定标记，此时应该停止响应Form.Deactivate/Activated事件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.PopupFormSizeFix">
      <summary>
            弹出式的窗体大小修正量
            </summary>
      <remarks>
            一些应用程序使用了皮肤的功能，此时弹出式的窗体可能强加上皮肤的功能，导致客户区大小设置不正确。
            此时可以使用该属性来对冲掉皮肤对客户区大小的影响。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ExtInfoControlVisible">
      <summary>
            是否显示扩展信息控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ShowExtInfo">
      <summary>
            是否显示扩展信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerCursorSizeWE">
      <summary>
            水平方向调整位置或大小的鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerCursorSizeNS">
      <summary>
            垂直方向调整位置或大小的鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerCursorRightArrow">
      <summary>
            表示靠右指针的鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerCursorSelectCell">
      <summary>
            表示选择单元格的鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.InnerCursorArrow">
      <summary>
            表示指针的鼠标光标对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommandStateNeedRefreshFlag">
      <summary>
            命令状态需要刷新标识
            </summary>
      <remarks>
            当不能启用控件事件或者无法响应控件事件时，可以使用定时器来判断本属性值，如果本属性值为true，
            则需要刷新应用程序界面按钮的状态，然后设置本属性值为false。
            比如
            void Timer_Intervel()
            {
                if( myWriterControl.CommandStateNeedRefreshFlag == true )
                {
                    myWriterControl.CommandStateNeedRefreshFlag = false ;
                    ---- 此处编写刷新菜单按钮状态的代码 ----
                }
            }
            在DCWriter内部会根据实时情况来自动设置本属性值为true，以标记应用程序需要刷新按钮状态了。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.UITools">
      <summary>
            用户界面工具对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ShowingUI">
      <summary>
            编辑器正在显示某种用户界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.EnableUIEventStartEditContent">
      <summary>
             允许执行StartEditContent事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.Navigator">
      <summary>
            文档内容导航者
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CurrentNavigateNode">
      <summary>
            当前光标位置所在的导航节点对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.StatusText">
      <summary>
            状态文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoDisposeDocument">
      <summary>
            销毁控件的时候是否自动销毁文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.AutoDisposeContextMenu">
      <summary>
            销毁控件的时候是否自动销毁快捷菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.CommentContextMenuStrip">
      <summary>
            批注使用的快键菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControl.ContextMenuManager">
      <summary>
            快捷菜单管理器
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeRefreshPages">
      <summary>
            触发刷新执行元素事件表达式功能
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterExecuteEventExpression">
      <summary>
            触发刷新执行元素事件表达式功能
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventRefreshDomTree">
      <summary>
            触发刷新DOM树事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeCollapseSection">
      <summary>
            展开文档节前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterCollapseSection">
      <summary>
            收缩文档节后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeExpandSection">
      <summary>
            展开文档节前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterExpandSection">
      <summary>
            展开文档节后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeginPrint">
      <summary>
            开始打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventDrawPageFrameContent">
      <summary>
            绘制文档页面框架之后的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventPrintQueryPageSettings">
      <summary>
            打印时查询页面设置事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventPrintPage">
      <summary>
            打印页面事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterPrintPage">
      <summary>
            打印页面后事件，一般用于恢复某些临时状态
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventEndPrint">
      <summary>
            结束打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeFieldContentEdit">
      <summary>
            通过数值编辑器修改输入域内容前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterFieldContentEdit">
      <summary>
            通过数值编辑器修改输入域内容前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementValidating">
      <summary>
            文档元素内容校验事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforePlayMedia">
      <summary>
            准备播放媒体事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventOutlineTreeChanged">
      <summary>
            文档大纲树状结构发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementCheckedChanged">
      <summary>
            元素勾选状态发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventQueryAssistInputItems">
      <summary>
            查询辅助录入使用的字符串列表事件,注意：这个事件不是在UI线程中触发。不能在本事件处理中直接操作用UI控件。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeUIKeyboardInputString">
      <summary>
            键盘输入字符串事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventTableRowHeightChanged">
      <summary>
            表格行高度发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventTableRowHeightChanging">
      <summary>
            表格行高度正在发生改变事件，在这个事件中可以取消表格行高度修改操作
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.DocumentNavigateContentChanged">
      <summary>
            文档内容的导航数据发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.StatusTextChanged">
      <summary>
            状态栏文本发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventDrawShapeContent">
      <summary>
            自定义绘制图形内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventReportError">
      <summary>
            报告错误内容的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterLoadRawDOM">
      <summary>
            加载文档DOM结构后的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventExpressionFunction">
      <summary>
            执行表达式函数功能事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventGetAdornText">
      <summary>
            获得文档元素的扩展文本内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventEditElementValue">
      <summary>
            编辑文档元素数值事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventSaveFileContentForAutoSave">
      <summary>
            为自动保存功能而设置的保存文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventSaveFileContent">
      <summary>
            保存文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventReadFileContent">
      <summary>
            读取文件内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementMouseClick">
      <summary>
            文档元素鼠标点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementGotFocus">
      <summary>
            文档元素获取焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementLostFocus">
      <summary>
            文档元素获取焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementMouseDblClick">
      <summary>
            文档元素鼠标双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementMouseDown">
      <summary>
            文档元素鼠标双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementMouseMove">
      <summary>
            文档元素鼠标移动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventElementMouseUp">
      <summary>
            文档元素鼠标按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventButtonClick">
      <summary>
            按钮点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventLinkClick">
      <summary>
            超链接点击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventGetLinkListItems">
      <summary>
            获得联动下拉列表事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventCollectProtectedElements">
      <summary>
            收集内容保护信息事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventZoomChanged">
      <summary>
            控件缩放事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventPromptProtectedContent">
      <summary>
            提示内容受保护的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventTableAddNewRowWhenPressTabKey">
      <summary>
            使用TAB键新增表格行触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventEndTabStop">
      <summary>
            结束切换输入焦点事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventContentChanging">
      <summary>
            内容正在改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventContentChanged">
      <summary>
            内容已经改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventBeforeShowDialog">
      <summary>
            在显示对话框之前触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventAfterShowDialog">
      <summary>
            在关闭对话框之后触发的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ComCustomCommand">
      <summary>
            自定义命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.VOIDCOMCustomCommand">
      <summary>
            没有参数的自定义命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventUIStartEditContent">
      <summary>
            用户界面层的开始编辑文档内容事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.AfterLoadDocumentDom">
      <summary>
            成功加载文档DOM结构触发的事件，此时文档虽然加载了DOM结构，但没有排版和显示。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventCreateInstance">
      <summary>
            创建对象实例事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.AfterRefreshPages">
      <summary>
            刷新分页后事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.QueryUserHistoryDisplayText">
      <summary>
            查询用户历史记录显示文本事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventParseSelectedItems">
      <summary>
            解释列表项目的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventFormatListItems">
      <summary>
            获得列表显示文本事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventUnknowCommand">
      <summary>
            未知编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.QueryKBEntries">
      <summary>
            查询知识库节点列表事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventMouseDownExt">
      <summary>
            增强型鼠标按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventMouseMoveExt">
      <summary>
            增强型鼠标移动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventScroll">
      <summary>
            控件内容滚动事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventMouseUpExt">
      <summary>
            增强型鼠标按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventKeyDownExt">
      <summary>
            扩展的键盘按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventKeyUpExt">
      <summary>
            扩展的键盘按键松开事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventKeyPressExt">
      <summary>
            扩展的键盘按键按下事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventMouseClickExt">
      <summary>
            增强型鼠标按键单击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventMouseDblClickExt">
      <summary>
            增强型鼠标按键双击事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.FilterValue">
      <summary>
            数据过滤事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventCreateElementsByKBEntry">
      <summary>
            根据知识库节点创建文档元素对象的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.HoverElementChanged">
      <summary>
            当前鼠标悬浮的元素改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventReadonlyChanged">
      <summary>
            控件Readonly属性值发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.VOIDCOMDocumentLoad">
      <summary>
            仅供COM调用的事件，一般不要使用
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.DocumentLoad">
      <summary>
            文档加载事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventInsertObject">
      <summary>
            向文档插入对象事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventCanInsertObject">
      <summary>
            判断能否插入对象事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.SelectionChanging">
      <summary>
            文档选择状态正在发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.SelectionChanged">
      <summary>
            文档选择状态发生改变后的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.VOIDCOMSelectionChanged">
      <summary>
            仅供COM调用的事件，一般不要使用
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.DocumentContentChanged">
      <summary>
            文档内容发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.VOIDCOMDocumentContentChanged">
      <summary>
            仅供COM调用的事件，一般不要使用
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.QueryListItems">
      <summary>
            查询下拉列表项目事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.UserTrackListChanged">
      <summary>
            文档内容中的用户修改痕迹列表信息发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.AfterExecuteCommand">
      <summary>
            结束执行编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.BeforeExecuteCommand">
      <summary>
            开始执行编辑器命令事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ScriptError">
      <summary>
            脚本发生错误事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.CommandError">
      <summary>
            自定义处理命令错误的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.DocumentPrinted">
      <summary>
            文档打印事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventUpdateToolarState">
      <summary>
            通知应用程序更新工具条或菜单的状态。
            </summary>
      <remarks>
            在控件的SelectionChanged事件中更新工具条和菜单的状态性能比较差，因为SelectionChanged事件触发的过于频繁。
            而使用本事件能大幅降低更新频率。
            </remarks>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventGetSignToolTip">
      <summary>
            通知应用程序创建签名图片提示文本事件。
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.EventGetCustomContextMenu">
      <summary>
            获得用户自定义快捷菜单事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ComEventSelectionChanged">
      <summary>
            针对COM而声明的文档内容选择状态发生改变事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ComEventDocumentLoad">
      <summary>
            针对COM声明的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ComEventDocumentContentChanged">
      <summary>
            针对COM声明的事件
            </summary>
    </member>
    <member name="E:DCSoft.Writer.Controls.WriterControl.ComEventStatusTextChanged">
      <summary>
            针对COM声明的事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterViewControlPackage">
      <summary>
            编辑器内部视图控件包装
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.AutoScrollPosition">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.AutoScrollMinSize">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.HorizontalScroll">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.VerticalScroll">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.Width">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControlPackage.Height">
      <summary>
            滚动位置
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IInputFieldElementEditorControl">
      <summary>
            自定义输入域数值编辑控件要实现的接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IInputFieldElementEditorControl.EditorInitalize(DCSoft.Writer.Controls.InputFieldElementEditorEventArgs)">
      <summary>
            初始化控件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.IInputFieldElementEditorControl2021">
      <summary>
            数值编辑弹出式界面时，编辑器控件的一些事件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IInputFieldElementEditorControl2021.OnWriterControlKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            编辑控件键盘按下事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IInputFieldElementEditorControl2021.OnWriterControlKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            编辑控件字符事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IInputFieldElementEditorControl2021.OnWriterControlKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            编辑控件键盘松开事件
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs">
      <summary>
            自定义输入域数值编辑器事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.CloseDropDown">
      <summary>
            关闭下拉列表界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.WriterControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.Element">
      <summary>
            输入域元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.EditorHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.Context">
      <summary>
            上下文信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.InputFieldElementEditorEventArgs.Result">
      <summary>
            操作结果
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.XTextInputFieldElementCustomEditor">
      <summary>
            使用自定义控件的文本输入域内容编辑器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.XTextInputFieldElementCustomEditor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.XTextInputFieldElementCustomEditor.GetEditStyle(DCSoft.Writer.Controls.TextWindowsFormsEditorHost,DCSoft.Writer.Controls.ElementValueEditContext)">
      <summary>
            获得编辑样式
            </summary>
      <param name="host">
      </param>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.XTextInputFieldElementCustomEditor.EditValue(DCSoft.Writer.Controls.TextWindowsFormsEditorHost,DCSoft.Writer.Controls.ElementValueEditContext)">
      <summary>
            编辑数值
            </summary>
      <param name="host">宿主对象</param>
      <param name="context">上下文对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.CollectProtectedElementsEventHandler">
      <summary>
            收集内容保护信息事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.ComVoidHandler">
      <summary>
            专供COM事件的无参数委托类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.CreateInstanceEventHandler">
      <summary>
            创建对象实例事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.CustomCommandEventHandler">
      <summary>
            自定义命令事件委托类型
            </summary>
      <param name="objectSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.DCDocumentRuleControl">
      <summary>
            标尺对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl.PageSettings">
      <summary>
            页面设置对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl.Direction">
      <summary>
            标尺方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl._WorkingAreaBounds">
      <summary>
            工作区域边界
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl._ClipRectangle">
      <summary>
            视图剪切区域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl._CurrentPage">
      <summary>
            当前页面对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleControl._ClipBoundsForDragPoint">
      <summary>
            拖拽操作的限制范围
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.SetToolTip(System.String)">
      <summary>
            设置提示文本
            </summary>
      <param name="txt">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.BindControl(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            绑定编辑器控件
            </summary>
      <param name="ctl">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.ClearData">
      <summary>
            清除数据，取消绑定控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.Dispose(System.Boolean)">
      <summary>
            销毁控件
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.UpdateState(System.Boolean)">
      <summary>
            更新状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.ViewControlPointToClient(System.Drawing.Point)">
      <summary>
            编辑器视图控件中的坐标位置转换为标尺控件中的坐标位置
            </summary>
      <param name="p">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnVisibleChanged(System.EventArgs)">
      <summary>
            控件可见性发生改变事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnResize(System.EventArgs)">
      <summary>
            处理控件大小改变事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标移动事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标按键按下事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标双击事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.HandleMouseEvent(System.Windows.Forms.MouseEventArgs,DCSoft.WinForms.MouseEventType)">
      <summary>
            处理鼠标事件
            </summary>
      <param name="e">参数</param>
      <param name="type">事件类型</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            绘制控件视图
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.DrawHorizontal(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            绘制水平标尺
            </summary>
      <param name="g">
      </param>
      <param name="clipRectangle">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.DCDocumentRuleControl.DrawVertical(System.Drawing.Graphics,System.Drawing.Rectangle)">
      <summary>
            绘制垂直标尺
            </summary>
      <param name="g">
      </param>
      <param name="clipRectangle">
      </param>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.CurrentParagraphFlag">
      <summary>
            当前段落符号元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.DoubleBuffered">
      <summary>
            启用双缓冲
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.PageSettingsReadonly">
      <summary>
            设置是否是只读的
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.ParagraphSettingsReadonly">
      <summary>
            段落设置只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.Control">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.XZoomRate">
      <summary>
            水平缩放比率
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.DCDocumentRuleControl.YZoomRate">
      <summary>
            垂直缩放比率
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.DCDocumentRuleDirection">
      <summary>
            标尺方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleDirection.Vertical">
      <summary>
            垂直方向
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCDocumentRuleDirection.Horizontal">
      <summary>
            水平方向
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IfrmAssistStringList">
      <summary>
            显示辅助输入的窗口,DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.Add(System.String)">
      <summary>
            添加字典项目
            </summary>
      <param name="item">新项目</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.AddItemsFromFile(System.String)">
      <summary>
            从文件加载列表项目
            </summary>
      <param name="fileName">文件名</param>
      <returns>加载的项目个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.AddItemsFromStream(System.IO.Stream)">
      <summary>
            从流中加载项目
            </summary>
      <param name="stream">流对象</param>
      <returns>加载的项目个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.AddItems(System.String)">
      <summary>
            添加多个字典项目
            </summary>
      <param name="multiLines">多行文本</param>
      <returns>添加的项目个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.Sort">
      <summary>
            进行内容排序
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.Clear">
      <summary>
            清空内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.HideList">
      <summary>
            隐藏列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IfrmAssistStringList.UpdateList">
      <summary>
            更新列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IfrmAssistStringList.Count">
      <summary>
            字典条码个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IfrmAssistStringList.LoadingList">
      <summary>
            正在加载列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.GlobalElementEventManager">
      <summary>
            全局文档元素事件管理器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._Control">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForLoad">
      <summary>
            文档元素加载事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseClick">
      <summary>
            文档元素加载事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseDblClick">
      <summary>
            文档元素MouseDblClick事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseDown">
      <summary>
            文档元素MouseDown事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseMove">
      <summary>
            文档元素MouseMove事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseUp">
      <summary>
            文档元素MouseUp事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForKeyDown">
      <summary>
            文档元素KeyDown事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForKeyPress">
      <summary>
            文档元素KeyPress事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForKeyUp">
      <summary>
            文档元素KeyUp事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForContentChanged">
      <summary>
            文档元素ContentChanged事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForContentChanging">
      <summary>
            文档元素ContentChanging事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForGotFocus">
      <summary>
            文档元素GotFocus事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForLostFocus">
      <summary>
            文档元素LostFocus事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForValidating">
      <summary>
            文档元素Validating事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForValidated">
      <summary>
            文档元素Validated事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForBeforeDropDown">
      <summary>
            文档元素BeforeDropDown事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseEnter">
      <summary>
            文档元素MouseEnter事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForMouseLeave">
      <summary>
            文档元素MouseLeave事件委托列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.GlobalElementEventManager._HandlerForExpression">
      <summary>
            文档元素Expression事件委托列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachLoad(System.String,DCSoft.Writer.ElementLoadEventHandler)">
      <summary>
            添加文档元素加载事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseClick(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            添加文档元素MouseClick事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseClick(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发文档元素MouseClick事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseDblClick(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            添加文档元素MouseDblClick事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseDblClick(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发文档元素MouseDblClick事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseDown(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            添加文档元素MouseDown事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseDown(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发文档元素MouseDown事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseMove(System.String,DCSoft.Writer.ElementMouseEventHandler)">
      <summary>
            添加文档元素MouseMove事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseMove(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发文档元素MouseDown事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseUp(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementMouseEventArgs)">
      <summary>
            触发文档元素MouseUp事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachKeyDown(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            添加文档元素KeyDown事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseKeyDown(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            触发文档元素KeyDown事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachKeyPress(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            添加文档元素KeyPress事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseKeyPress(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            触发文档元素KeyPress事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachKeyUp(System.String,DCSoft.Writer.ElementKeyEventHandler)">
      <summary>
            添加文档元素KeyUp事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseKeyUp(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementKeyEventArgs)">
      <summary>
            触发文档元素KeyUp事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachContentChanged(System.String,DCSoft.Writer.ContentChangedEventHandler)">
      <summary>
            添加文档元素ContentChanged事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseContentChanged(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ContentChangedEventArgs)">
      <summary>
            触发文档元素ContentChanged事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachContentChanging(System.String,DCSoft.Writer.ContentChangingEventHandler)">
      <summary>
            添加文档元素ContentChanging事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseContentChanging(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ContentChangingEventArgs)">
      <summary>
            触发文档元素ContentChanging事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachGotFocus(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            添加文档元素GotFocus事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseGotFocus(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发文档元素GotFocus事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachLostFocus(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            添加文档元素LostFocus事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseLostFocus(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发文档元素LostFocus事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseValidated(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发文档元素Validated事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachBeforeDropDown(System.String,DCSoft.Writer.ElementCancelEventHandler)">
      <summary>
            添加文档元素BeforeDropDown事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseEnter(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            添加文档元素MouseEnter事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseEnter(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发文档元素MouseEnter事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachMouseLeave(System.String,DCSoft.Writer.ElementEventHandler)">
      <summary>
            添加文档元素MouseLeave事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.RaiseMouseLeave(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.ElementEventArgs)">
      <summary>
            触发文档元素MouseLeave事件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.AttachExpression(System.String,DCSoft.Writer.ElementExpressionEventHandler)">
      <summary>
            添加文档元素Expression事件委托
            </summary>
      <param name="idList">文档元素编号列表</param>
      <param name="handler">事件委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.GlobalElementEventManager.InnerAttachHandler(System.Collections.IDictionary,System.String,System.Delegate)">
      <summary>
            添加事件委托对象
            </summary>
      <param name="dic">
      </param>
      <param name="idList">
      </param>
      <param name="handler">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.DCLicenceDisplayMode">
      <summary>
            授权信息显示模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCLicenceDisplayMode.PageHeader">
      <summary>
            在页眉中显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCLicenceDisplayMode.ControlHeader">
      <summary>
            在控件的抬头中显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DCLicenceDisplayMode.ProgressUI">
      <summary>
            在程序等待操作界面中显示
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IDeveloperToolsControl.RefreshView(System.Boolean)">
      <summary>
            刷新DOM树
            </summary>
      <param name="extMode">精细模式</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IDeveloperToolsControl.DebugWriteLine(System.String)">
      <summary>
            输出一行调试文本
            </summary>
      <param name="txt">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.UIInputCharBuffer">
      <summary>
            用户界面输入的字符的缓冲区
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.UIInputCharBuffer.UseBufferMode">
      <summary>
            启用缓存区模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.PromptProtectedContentEventHandler">
      <summary>
            提示内容保护事件委托对象
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">参数</param>
    </member>
    <member name="F:DCSoft.Writer.Controls.StartEditContentState.NeverDetect">
      <summary>
            从未检测过
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.StartEditContentState.FailWithouAgain">
      <summary>
            曾经检测失败而且无需重新检测
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.StartEditContentState.FailWithAgain">
      <summary>
            曾经检测失败而且可以重新检测
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.StartEditContentState.Success">
      <summary>
            检测成功过，无需重新检测
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlEventMessageManager">
      <summary>
            消息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventMessageManager.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventMessageManager.ClearTimeoutEventMessage">
      <summary>
            清空超时的消息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventMessageManager.Clear">
      <summary>
            清空内部的编辑器控件事件消息队列
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlEventMessageManager.GetEventMessage">
      <summary>
            获得一个编辑器控件事件消息.只有当控件的EnabledControlEvent=false时，本函数才有效。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlEventMessageManager.LastEventMessage">
      <summary>
            最后一次获得的事件消息对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlEventMessageType">
      <summary>
            编辑器事件类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.None">
      <summary>
            无事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseDown">
      <summary>
            鼠标按下消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseMove">
      <summary>
            鼠标移动消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseUp">
      <summary>
            鼠标按键松开消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseClick">
      <summary>
            鼠标点击消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseDblClick">
      <summary>
            鼠标双击消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.KeyDown">
      <summary>
            按键按下消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.KeyPress">
      <summary>
            按键字符消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.KeyUp">
      <summary>
            按键松开消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ElementFocus">
      <summary>
            元素获得焦点消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ElementLostFocus">
      <summary>
            元素失去焦点消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentContentChanged">
      <summary>
            文档内容发生改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentLoad">
      <summary>
            文档加载消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentNavigateContentChanged">
      <summary>
            文档导航内容发生改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentPrinted">
      <summary>
            文档打印消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.AfterLoadRawDOM">
      <summary>
            加载文档DOM底层结构消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.BeforePlayMedia">
      <summary>
            播放媒体前消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ElementValidating">
      <summary>
            文档元素内容校验消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.BeforeUIKeyboardInputString">
      <summary>
            键盘输入字符串消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.OutlineTreeChanged">
      <summary>
            导航树改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ElementCheckedChanged">
      <summary>
            元素勾选改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.QueryAssistInputItems">
      <summary>
            插入辅助输入字符列表消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.TableRowHeightChanged">
      <summary>
            表格行改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.StatusTextChanged">
      <summary>
            状态栏发生改变消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ReportError">
      <summary>
            报错消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ButtonClick">
      <summary>
            按钮元素点击消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.LinkClick">
      <summary>
            超链接点击消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ZoomChanged">
      <summary>
            视图缩放消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.PromptProtectedContent">
      <summary>
            提示内容包含信息消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.TableAddNewRowWhenPressTabKey">
      <summary>
            由于按下Tab键而新增表格行的消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.EndTabStop">
      <summary>
            结束Tab切换焦点消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ContentChanged">
      <summary>
            内容修改事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.CustomCommand">
      <summary>
            自定义命令事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.AfterLoadDocumentDom">
      <summary>
            加载文档DOM结构后的事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.AfterRefreshPages">
      <summary>
            刷新页面后事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.UnknowCommand">
      <summary>
            未知命令事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.HoverElementChanged">
      <summary>
            当前鼠标悬停元素改变事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ReadonlyChanged">
      <summary>
            控件只读状态改变事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.SelectionChanged">
      <summary>
            选择区域发生改变事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.UserTrackListChanged">
      <summary>
            用户痕迹列表发生改变事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.AfterExecuteCommand">
      <summary>
            执行命令后事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.ScriptError">
      <summary>
            脚本错误消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.CommandError">
      <summary>
            执行命令错误消息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentCommentClick">
      <summary>
            文档批注点击事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.DocumentCommentDblClick">
      <summary>
            文档批注双击事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseLeave">
      <summary>
            鼠标进入事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlEventMessageType.MouseEnter">
      <summary>
            鼠标离开事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlWebMethodTypes">
      <summary>
            编辑器事件类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlWebMethodTypes.Invalidate">
      <summary>
            无效状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlWebMethodTypes.None">
      <summary>
            没有任何事件 
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlWebMethodTypes.All">
      <summary>
            所有的事件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlOptions">
      <summary>
            编辑器控件选项
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlOptions._ForceShowCaret">
      <summary>
            是否强制显示光标而不管控件是否获得输入焦点
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlOptions._AcceptsTab">
      <summary>
            获取或设置一个值，该值指示在控件中按 TAB 键时，是否在控件中键入一个 TAB 字符，而不是按选项卡的顺序将焦点移动到下一个控件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlOptions.intViewMode">
      <summary>
            页面显示模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlOptions._InsertMode">
      <summary>
            当前是否处于插入模式,若处于插入模式,则光标比较细,否则处于改写模式,光标比较粗
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlOptions.intPageSpacing">
      <summary>
            处于页面视图模式时各个页面间的距离，像素为单位
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlOptions.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlOptions.WriteToControl(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            将数据填充到编辑器控件中
            </summary>
      <param name="ctl">编辑器控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlOptions.ReadFromControl(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            从编辑器控件获得数据
            </summary>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlOptions.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.RuleVisible">
      <summary>
            标尺是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.RuleBackColor">
      <summary>
            标尺背景色
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.RuleEnabled">
      <summary>
            标尺是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.ForceShowCaret">
      <summary>
            是否强制显示光标而不管控件是否获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.AcceptsTab">
      <summary>
            获取或设置一个值，该值指示在控件中按 TAB 键时，是否在控件中键入一个 TAB 字符，而不是按选项卡的顺序将焦点移动到下一个控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.UserInfo">
      <summary>
            当前用户信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.Font">
      <summary>
            字体对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.AdditionPageTitle">
      <summary>
            显示在已经注册的页码标题文本后面的额外的页码标题文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.StartPageIndex">
      <summary>
            从0开始的计算的开始显示的页码号,只有处于分页视图模式下该属性才有效。小于0则不启用该设置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.EndPageIndex">
      <summary>
            从0开始计算的最后显示的页码号,为0表示没有设置。只有处于分页视图模式下该属性才有效。小于0则不启用该设置。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.ViewMode">
      <summary>
            页面显示模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.FormView">
      <summary>
            表单视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.HeaderFooterFlagVisible">
      <summary>
            是否显示页眉页脚标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.HeaderFooterReadonly">
      <summary>
            页眉页脚是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.HideCaretWhenHasSelection">
      <summary>
            当选择了文档内容时隐藏光标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.InsertMode">
      <summary>
            当前是否处于插入模式,若处于插入模式,则光标比较细,否则处于改写模式,光标比较粗
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.IsAdministrator">
      <summary>
            是否以管理员模式运行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.JumpPrint">
      <summary>
            续打信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.PageSpacing">
      <summary>
            处于页面视图模式时各个页面间的距离，像素为单位
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.PageTitlePosition">
      <summary>
            页面标题位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.Readonly">
      <summary>
            文档内容只读标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.StatusText">
      <summary>
            状态文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.BackgroundMode">
      <summary>
            后台运行模式
            </summary>
      <remarks>
            后台模式下，任何控件、文档只读和授权内容保护无效，可以任意修改文档内容。
            但仍然会根据需要留下历史修改痕迹。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterControlOptions.KBLibraryUrl">
      <summary>
            知识库文件URL
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterDataObjectRange">
      <summary>
            编辑器数据对象应用范围
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterDataObjectRange.OS">
      <summary>
            整个操作系统范围
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterDataObjectRange.Application">
      <summary>
            一个应用程序中所有的编辑器控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterDataObjectRange.SingleWriterControl">
      <summary>
            一个编辑器控件内部
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterViewControl">
      <summary>
             编辑器命令相关功能模块
             </summary>
      <remarks>袁永福到此一游</remarks>
      <summary>
            编辑器中文档批注相关的功能
            </summary>
      <summary>
            编辑器控件的文档对象模型处理模块
            </summary>
      <summary>
            文档元素级事件相关代码
            </summary>
      <summary>
            加载和保存文件相关的操作
            </summary>
      <summary>
            处理键盘事件
            </summary>
      <summary>
            授权相关
            </summary>
      <summary>
            编辑器鼠标事件处理
            </summary>
      <summary>
            编辑器中绘制用户界面的操作
            </summary>
      <summary>
            编辑器打印相关代码
            </summary>
      <summary>
            内容安全及授权相关
            </summary>
      <summary>
            文本文档编辑控件
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.ShowingUI">
      <summary>
            编辑器正在显示某种用户界面
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.StatusText">
      <summary>
            状态文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.AutoDisposeContextMenu">
      <summary>
            销毁控件的时候是否自动销毁快捷菜单
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.CommentContextMenuStrip">
      <summary>
            批注使用的快键菜单
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._CommandSessions">
      <summary>
            编辑器命令回话数据容器对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._SpecifyEnable_InnerGetElementEventTemplates">
      <summary>
            是否特别的标记启用 InnerGetElementEventTemplates()
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._AllowApplyLocalDocumentOptions">
      <summary>
            允许启用ApplyLocalDocumentOptions功能。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._PreserveAssistStringListForm">
      <summary>
            内部使用：保留快速录入窗口对象的标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._AdditionPageTitle">
      <summary>
            显示在已经注册的页码标题文本后面的额外的页码标题文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.DragEventHandled">
      <summary>
            拖拽事件已经处理标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.__ShowPowerByDCSoftTooltip">
      <summary>
            是否显示都昌软件技术支持的提示文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._DragState">
      <summary>
            正在拖拽控件文档内容标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._SelectionAreaRectangles">
      <summary>
            可逆矩形列表
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.AutoUserLogin">
      <summary>
            每打开文档时自动进行用户登录
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.AutoUserLoginInfo">
      <summary>
            执行自动登录时使用的用户登录信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._GlobalApplicationDataObjectID">
      <summary>
            本应用程序对应的数据源对象标示编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._LocalDataObjectID">
      <summary>
            本控件对应的数据源对象标示编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._LowLevelToolTip">
      <summary>
            底层的提示文本信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._CoreVersion">
      <summary>
            内核版本号#######
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.AutoSetDocumentDefaultFont">
      <summary>
            自动设置文档的默认字体
            </summary>
      <remarks>若该属性值为true，则编辑器会自动将控件的字体和前景色设置
            到文档的默认字体和文本颜色。修改本属性值不会立即更新文档视图，
            此时需要调用“UpdateDefaultFont( true )”来更新文档视图。</remarks>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.StyleInfoForFormatBrush">
      <summary>
            为格式刷而准备的文档格式信息对象,DCWriter内部使用。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._ControlLoaded">
      <summary>
            控件已经加载标记
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._ForceDisableScrollView">
      <summary>
            强制禁用平滑滚动
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._UpdatingTextCaret">
      <summary>
            正在更新光标操作的标记，防止递归。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._IsFirstResize">
      <summary>
            是否为第一个执行有效的处理Resize事件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl.RaiseDocumentFoucsEventWhenControlFocusEvent">
      <summary>
            在控件的获得/失去焦点事件时是否触发文档的获得/失去焦点事件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._StartTickForDelayGotFocus">
      <summary>
            延时启用GotFocus事件的时刻值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._IME_CompositionString">
      <summary>
            保存输入法一次输入的字符的缓存区
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._IME_CompositionWindow_Showing">
      <summary>
            正在显示输入法辅助小窗口。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._DisposingControl">
      <summary>
            正在销毁控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterViewControl._EditorHost">
      <summary>
            是否正在显示元素数值编辑界面。包括下拉列表或者对话框。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InitHandleIdle">
      <summary>
            初始化空闲处理机制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ResetUIStartEditContentState">
      <summary>
            重置检测文档内容编辑状态标记，使得可以再次进行判断。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UIStartEditContent">
      <summary>
            用户界面层的开始编辑文档内容
            </summary>
      <returns>如果返回true，则可以编辑文档内容；如果返回false则不能编辑文档内容。</returns>
      <remarks>
            此处的能否编辑文档内容和控件当的Readonly属性不一样。在该方法中，一开始是假定控件内容
            可以编辑，此时是按照内容可以编辑的状态来设置的编辑器命令状态。比如Bold,Italic,Paste等命令。
            不过用户真的动手修改文档内容时，会调用这个方法，如果返回false则该编辑操作取消掉。
            不过编辑器命令状态还是假定内容可编辑的。
            
            举个例子，如果系统实现了文档锁定机制，当编辑器打开一个文档，还没确定文档是否被锁定了。
            此时可以响应EventStartEditContent事件来确定文档是否真的被锁定了。如果被其他用户锁定了，
            则该方法返回false，如果没被锁定，则当前用户可以锁定文档，然后返回true。
            这种锁定仅影响用户界面层的操作，比如鼠标键盘事件、执行编辑器命令。但对程序直接调用
            控件和文档对象的各种属性方法来修改文档内容是没有影响的。
            本函数内部触发控件的EventUIStartEditContent事件，应用系统需要相应这个事件来判断文档
            是否处于锁定状态，以及锁定文档的操作。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UIStartEditContentSpecifyElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            用户界面层的开始编辑文档内容
            </summary>
      <returns>如果返回true，则可以编辑文档内容；如果返回false则不能编辑文档内容。</returns>
      <remarks>
            此处的能否编辑文档内容和控件当的Readonly属性不一样。在该方法中，一开始是假定控件内容
            可以编辑，此时是按照内容可以编辑的状态来设置的编辑器命令状态。比如Bold,Italic,Paste等命令。
            不过用户真的动手修改文档内容时，会调用这个方法，如果返回false则该编辑操作取消掉。
            不过编辑器命令状态还是假定内容可编辑的。
            
            举个例子，如果系统实现了文档锁定机制，当编辑器打开一个文档，还没确定文档是否被锁定了。
            此时可以响应EventStartEditContent事件来确定文档是否真的被锁定了。如果被其他用户锁定了，
            则该方法返回false，如果没被锁定，则当前用户可以锁定文档，然后返回true。
            这种锁定仅影响用户界面层的操作，比如鼠标键盘事件、执行编辑器命令。但对程序直接调用
            控件和文档对象的各种属性方法来修改文档内容是没有影响的。
            本函数内部触发控件的EventUIStartEditContent事件，应用系统需要相应这个事件来判断文档
            是否处于锁定状态，以及锁定文档的操作。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetCompositionRect(System.Single,System.Single,System.Single)">
      <summary>
            设置弹出式列表的最佳位置
            </summary>
      <param name="x">
      </param>
      <param name="y">
      </param>
      <param name="height">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ShowAboutDialog">
      <summary>
            显示关于对话框
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Navigator">
      <summary>
            文档内容导航者
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentNavigateNode">
      <summary>
            当前光标位置所在的导航节点对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.NavigateByNodeID(System.String)">
      <summary>
            导航到指定编号的节点的位置
            </summary>
      <param name="id">节点编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Navigate(DCSoft.Writer.NavigateNode)">
      <summary>
            导航到节点指定的位置
            </summary>
      <param name="node">节点</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetStatusText(System.String)">
      <summary>
            设置状态栏文本，并触发事件
            </summary>
      <param name="text">新状态栏文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ToolWindows">
      <summary>
            配套的工具窗体列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextMenuItem(System.String,System.String)">
      <summary>
            添加快捷菜单项目
            </summary>
      <param name="text">菜单文本</param>
      <param name="commandName">菜单命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ClearContextMenuItem">
      <summary>
            清空快捷菜单项目
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RaiseElementContentChangedEvent(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            主动的触发文档元素的内容发生改变事件
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextMenuSeparatorByTypeName(System.String)">
      <summary>
            向文档元素快键菜单添加一个分隔条
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextMenuSeparator(System.Type)">
      <summary>
            向文档元素快键菜单添加一个分隔条
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>分隔条对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RemoveContextMenuItemByTypeName(System.String,System.String)">
      <summary>
            删除指定文档元素类型的快键菜单项目
            </summary>
      <param name="elementTypeName">类型名称</param>
      <param name="name">菜单名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RemoveContextMenuItem(System.Type,System.String)">
      <summary>
            删除指定文档元素类型的快键菜单项目
            </summary>
      <param name="elementType">类型</param>
      <param name="name">菜单名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextMenuItemByTypeName(System.String,System.String,System.String,System.String)">
      <summary>
            添加文档元素的快键菜单
            </summary>
      <param name="elementTypeName">文档元素类型名称</param>
      <param name="name">菜单项目名称</param>
      <param name="commandName">绑定的编辑器命令</param>
      <param name="text">菜单项目文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextCustomMenuItem(System.Type,System.String,System.EventHandler)">
      <summary>
            添加自定义快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="text">文本</param>
      <param name="clickHandler">自定义的功能函数委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddContextMenuItem(System.Type,System.String,System.String,System.String,System.String,System.EventHandler)">
      <summary>
            添加快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="name">菜单项目名称</param>
      <param name="commandName">编辑器命令名</param>
      <param name="text">文本</param>
      <param name="iconBase64String">图标</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ComInvalidate">
      <summary>
            Invalidate方法的COM接口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.PreProcessMessage(System.Windows.Forms.Message@)">
      <summary>
            处理在DELPHI中某些情况下用户按下键盘导致无限递归而堆栈溢出的错误。
            为此重写了PreProcessMessage来自己处理消息
            </summary>
      <param name="msg">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ComSetProperty(System.String,System.String)">
      <summary>
            面向COM的设置控件属性值
            </summary>
      <remarks>有些属性值类型不是COM公开的，无法直接设置。因此采用字符串的方式来试图设置控件属性值。</remarks>
      <param name="propertyName">属性名</param>
      <param name="Value">属性值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckPropertyValue(System.Object,System.String,System.String)">
      <summary>
            检查对象属性值，如果为空则创建属性值
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名，不区分大小写</param>
      <param name="valueTypeName">指定的属性值类型名称</param>
      <returns>本操作是否创建了对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ComFocus">
      <summary>
            COM下获得焦点
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ComSelect">
      <summary>
            COM下选择控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Win32SetFoucs">
      <summary>
            调用Win32API函数来设置控件获得焦点
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetCommandNameList">
      <summary>
            获得所有支持的命令名称组成的字符串，各个名称之间用逗号分开
            </summary>
      <returns>字符串列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IsCommandSupported(System.String)">
      <summary>
            判断是否支持指定名称的功能命令
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>是否支持功能命令</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IsCommandEnabled(System.String)">
      <summary>
            判断指定名称功能命令是否可用
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>功能命令是否可用</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IsCommandChecked(System.String)">
      <summary>
            判断指定名称的功能命令是否处于勾选状态
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>功能命令是否处于勾选状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetCommandEnableLowLevel(System.String,System.Boolean)">
      <summary>
            设置指定的命令是否底层有效
            </summary>
      <param name="commandName">命令名称</param>
      <param name="enable">底层是否有效</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetCommandEnableHotKey(System.String,System.Boolean)">
      <summary>
            设置指定的命令是否启用快键键
            </summary>
      <param name="commandName">命令名称</param>
      <param name="enable">是否启用快键键</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteStringCommand(System.String)">
      <summary>
            以字符串的方式执行命令
            </summary>
      <remarks>命令字符串格式为“命令名称,是否显示UI,参数”,例如“fileopen,false,c:\a.xml”</remarks>
      <param name="command">命令文本</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteCommand(System.String,System.Boolean,System.Object)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteCommandSpecifyArgs(System.String,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="args">参数</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteCommandSpecifyRaiseFromUI(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <param name="raiseFromUI">用户界面操作而触发的命令</param>
      <returns>执行命令后的结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateInvalidatedCommandState">
      <summary>
            更新所有状态无效的命令的状态。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetCommandSession(System.String)">
      <summary>
            获得指定名称的命令使用的命令回话数据容器对象
            </summary>
      <param name="commandName">命令名称</param>
      <returns>获得的回话对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RuntimeCommentVisible">
      <summary>
            运行时是否显示文档批注
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RuntimeHasCommentLayout">
      <summary>
            运行时是否显示文档批注
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DrawDocumentComments(DCSoft.Drawing.DCGraphics,System.Drawing.RectangleF)">
      <summary>
            绘制文档批注
            </summary>
      <param name="g">
      </param>
      <param name="clipRectangle">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CreateBackgroundModeSetter">
      <summary>
            创建一个背景模式设置器
            </summary>
      <returns>创建的设置器</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentElement">
      <summary>
            当前插入点所在的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetCurrentElement(System.Type)">
      <summary>
            获得当前插入点所在的指定类型的文档元素对象。
            </summary>
      <param name="elementType">指定的文档元素类型</param>
      <returns>获得的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.HoverElement">
      <summary>
            鼠标悬停的元素
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetElementById(System.String)">
      <summary>
            获得指定ID号的文档元素对象,查找时ID值区分大小写的。
            </summary>
      <param name="id">编号</param>
      <returns>找到的文档元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetElementByPosition(System.Int32,System.Int32)">
      <summary>
            获得控件客户区中指定位置处的文档元素对象
            </summary>
      <param name="x">X坐标</param>
      <param name="y">Y坐标</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetElementClientBounds(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定的文档元素在编辑器控件客户区中的边界
            </summary>
      <param name="element">文档元素对象</param>
      <returns>边界</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ClearContent">
      <summary>
            清空文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentColumnIndex">
      <summary>
            获得从1开始计算的当前列号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentLineIndex">
      <summary>
            当前行号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentLineIndexInPage">
      <summary>
            获得从1开始计算的当前文本行在页中的序号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CurrentLineOwnerPageIndex">
      <summary>
            获得从1开始计算的当前文本行所在的页码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetSurplusLinesOfSpeifyPage(System.Int32,System.Single)">
      <summary>
            获得指定页的剩余空白行数
            </summary>
      <param name="pageIndex">从1开始计算的页码号</param>
      <param name="specifyLineHeight">指定的行高</param>
      <returns>剩余的空白行数</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetElementEventTemplates(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素使用的事件模板列表,包含绑定的列表和相关的全局列表
            </summary>
      <param name="element">文档元素对象</param>
      <returns>事件模板列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InnerGetElementEventTemplates(DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            获得指定元素使用的事件模板列表,包含绑定的列表和相关的全局列表
            </summary>
      <param name="element">文档元素对象</param>
      <param name="fastMode">快速模式</param>
      <returns>事件模板列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetHtmlText">
      <summary>
            获得文档Html文本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetHtmlText(System.String)">
      <summary>
            设置文档HTML内容
            </summary>
      <param name="html">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ClearState">
      <summary>
            清空一些状态数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocumentFromString(System.String,System.String)">
      <summary>
            以指定的格式加载文本文档内容
            </summary>
      <param name="text">文本</param>
      <param name="format">格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocumentFromBase64String(System.String,System.String)">
      <summary>
            以指定的格式从BASE64字符串加载文档内容
            </summary>
      <param name="text">BASE64字符串</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocumentFromFile(System.String,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="url">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocumentFromBinary(System.Byte[],System.String)">
      <summary>
            从指定的字节数组中加载文档
            </summary>
      <param name="bs">字节数组</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetMessageForLoadWaittingUI(DCSoft.Drawing.WaittingUIManager,System.String)">
      <summary>
            设置UI等待界面的消息
            </summary>
      <param name="man">
      </param>
      <param name="fileName">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocument(System.String,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="strUrl">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ApplyLocalDocumentOptions">
      <summary>
            判断是否使用存储在文档中的系统选项
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetSpecifyLoadFileNameOnceWithDetect(System.String)">
      <summary>
            带判断的设置SpecifyLoadFileNameOnce属性值。DCWriter内部使用。
            </summary>
      <param name="v">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocument(System.IO.Stream,System.String)">
      <summary>
            从指定的文件流中加载文档
            </summary>
      <param name="stream">文件流对象</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocument(System.IO.TextReader,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="reader">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.LoadDocumentFromXmlReader(System.Xml.XmlReader,System.String)">
      <summary>
            从指定的文件地址中加载文档
            </summary>
      <param name="reader">文件地址</param>
      <param name="format">文件格式</param>
      <returns>是否成功加载文档</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocument(System.String,System.String)">
      <summary>
            保存文档到指定名称的文件中
            </summary>
      <param name="strUrl">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocumentToFileFast(System.String,System.String)">
      <summary>
            快速保存文档到指定名称的文件中
            </summary>
      <param name="strFileName">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocumentToFile(System.String,System.String)">
      <summary>
            保存文档到指定名称的文件中
            </summary>
      <param name="url">文件名</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocumentToString(System.String)">
      <summary>
            保存文档为字符串
            </summary>
      <param name="format">文件格式</param>
      <returns>输出的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocumentToBase64String(System.String)">
      <summary>
            保存文档为BASE64字符串
            </summary>
      <param name="format">文件格式</param>
      <returns>输出的BASE64字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SaveDocument(System.IO.Stream,System.String)">
      <summary>
            保存文档到指定的流中
            </summary>
      <param name="stream">文档流</param>
      <param name="format">文件格式</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ActiveAssistStringListForm">
      <summary>
            激活快捷辅助录入浮动窗口
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CancelActiveAssistStringListForm">
      <summary>
            取消快捷辅助录入界面
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.TranslateKeyboardInputString(System.String)">
      <summary>
            自动转换输入的字符串
            </summary>
      <param name="txt">输入的字符串</param>
      <returns>转换后的字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.HandleBackspace">
      <summary>
            处理退格键
            </summary>
      <remarks>
            当控件承载在IE浏览器中运行时，默认会按下Backspace键时浏览器会跳到上一个历史页面。
            本控件提供一个HandleBackspace方法，而在浏览器中编写javascript函数响应浏览器的
            onkeydown事件。若按键为backspace键，则javascript调用HandleBackspace方法。
            若该方法返回true，表示编辑器处理了backspace事件。浏览器无需继续执行该方法。
            若返回false，表示编辑器没有处理backspace事件，浏览器可按默认方式进行处理。
            </remarks>
      <returns>控件是否处理了backspace按键事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SendKeyDownEvent(System.Windows.Forms.Keys)">
      <summary>
            发送KeyDown事件
            </summary>
      <param name="keyCode">键盘按键值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SendKeyPressEvent(System.Char)">
      <summary>
            发送KeyPress事件
            </summary>
      <param name="keyChar">字符</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ProcessDialogKey(System.Windows.Forms.Keys)">
      <summary>
            处理对话框按键事件
            </summary>
      <param name="keyData">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
      <summary>
            处理键盘按键按下事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IgnoreKeyPressEventShortly(System.Int32)">
      <summary>
            短暂的忽略掉键盘字符事件
            </summary>
      <param name="milliSeconds">毫秒数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)">
      <summary>
            处理键盘字符事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
      <summary>
            处理键盘按钮松开事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckLicenseStateVersion">
      <summary>
            检查授权状态版本号，如果注册信息发生改变，则版本号会变化。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckRegisterCodeVersion">
      <summary>
            检查注册码版本号设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DrawBigLicenseText(System.Object)">
      <summary>
            绘制大的注册提示信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckRegisteredWithDialog(System.Int32,System.Object,System.Windows.Forms.Control)">
      <summary>
            检查授权状态，若为授权则显示对话框
            </summary>
      <param name="applicationID">应用编号</param>
      <param name="dlg">对话框</param>
      <param name="ctl">显示对话框的父控件</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.FixPageTitleInfo(System.Object,DCSoft.Printing.PrintPage)">
      <summary>
            修正页面标题文档
            </summary>
      <param name="info">
      </param>
      <param name="page">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DrawPageTitle(System.Object)">
      <summary>
            绘制页面标题
            </summary>
      <param name="vvv">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RuntimeShowNoLicenseFunctionRisk(DCSoft.Writer.DocumentBehaviorOptions)">
      <summary>
            是否显示无授权风险提示信息
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DialogTitlePrefix">
      <summary>
            对话框标题前缀
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetHoverElement(DCSoft.Writer.Dom.XTextElement,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            触发鼠标悬停的文档元素改变事件。
            </summary>
      <param name="oldHoverElement">旧的鼠标悬停元素</param>
      <param name="newHoverElement">新的鼠标悬停元素</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnDragEnter(System.Windows.Forms.DragEventArgs)">
      <summary>
            处理OLE拖拽进入事件
            </summary>
      <param name="drgevent">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnDragOver(System.Windows.Forms.DragEventArgs)">
      <summary>
            处理OLE拖拽经过事件
            </summary>
      <param name="drgevent">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)">
      <summary>
            处理OLE拖拽反馈事件
            </summary>
      <param name="gfbevent">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnDragDrop(System.Windows.Forms.DragEventArgs)">
      <summary>
            处理OLE拖拽完成事件
            </summary>
      <param name="drgevent">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.MyHandleDragEvent(System.Windows.Forms.DragEventArgs,System.Int32)">
      <summary>
            内部的处理OLE拖拽事件
            </summary>
      <param name="drgevent">
      </param>
      <param name="style">事件类型 0:OnDragOver , 1:OnDragDrop</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnCanDragDrop(DCSoft.Writer.Dom.XTextElement,System.Windows.Forms.DragEventArgs,System.Single,System.Single)">
      <summary>
            判断是否可以接受处理OLE拖拽事件
            </summary>
      <param name="element">处理的元素</param>
      <param name="e">拖拽事件参数</param>
      <param name="ViewX">使用视图坐标的拖拽位置的X坐标</param>
      <param name="ViewY">使用视图坐标的拖拽位置的Y坐标</param>
      <returns>是否可以接受拖拽来的数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InnerPaste(System.String,System.Boolean)">
      <summary>
            执行粘贴操作
            </summary>
      <param name="specifyFormat">指定的数据格式</param>
      <param name="showUI">是否显示用户界面</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseWheel(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标滚轮事件
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DisableMouseEventTimeout(System.Int32)">
      <summary>
            禁止未来一段时间内的鼠标事件
            </summary>
      <param name="milliseconds">禁止持续的毫秒数，如果大于0则有效。</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IsEnabledMouseEvent">
      <summary>
            判断是否允许鼠标事件
            </summary>
      <returns>是否允许鼠标事件</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标单击事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标双击事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标移动事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标按键按下事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.MoveToClientPosition(System.Int32,System.Int32)">
      <summary>
            移动当前光标位置到指定客户区坐标位置处
            </summary>
      <param name="clientX">控件客户区X坐标，像素单位</param>
      <param name="clientY">控件客户区Y坐标，像素单位</param>
      <returns>操作是否修改了插入点</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetDocumentCommentForLastMouseEvent">
      <summary>
            获得最后一次鼠标事件时鼠标光标命中的文档批注对象
            </summary>
      <returns>文档批注对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.MyHandleMouseEvent(System.Windows.Forms.MouseEventArgs,DCSoft.Writer.Dom.DocumentEventStyles)">
      <summary>
            处理鼠标事件
            </summary>
      <param name="e">事件参数</param>
      <param name="style">事件类型</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DragSelectionContent">
      <summary>
            拖拽被选择的文档内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetFieldElementForOpeingUI(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            设置当前正在打开数值编辑器用户界面的输入域元素对象
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
      <summary>
            处理鼠标按键松开事件
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnMouseLeave(System.EventArgs)">
      <summary>
            处理鼠标光标离开事件
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.FlashElements(DCSoft.Writer.Dom.XTextElementList,System.Boolean)">
      <summary>
            高亮度提示文档元素
            </summary>
      <param name="elements">文档元素对象</param>
      <param name="autoScroll">是否自动滚动</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnPaint(System.Windows.Forms.PaintEventArgs)">
      <summary>
            处理绘制用户界面事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DrawPageFrame(System.Object,DCSoft.Drawing.DCGraphics,System.Drawing.Rectangle,System.Boolean)">
      <summary>
            绘制页面框架
            </summary>
      <param name="v_PrintPage">
      </param>
      <param name="g">
      </param>
      <param name="ClipRectangle">
      </param>
      <param name="FillBackGround">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DrawDocumentContent(DCSoft.Printing.IPageDocument,DCSoft.Printing.InnerPageDocumentPaintEventArgs,DCSoft.Drawing.InnerPaintEventArgs)">
      <summary>
            绘制文档内容
            </summary>
      <param name="document">
      </param>
      <param name="args">
      </param>
      <param name="nativeArgs">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnAfterPaintItem(DCSoft.Drawing.InnerPaintEventArgs,DCSoft.Drawing.SimpleRectangleTransform)">
      <summary>
            完成绘制一个视图转换单元后执行的操作
            </summary>
      <param name="args">绘图事件参数</param>
      <param name="item">视图转换单元</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddSelectionAreaRectangle(System.Drawing.Rectangle)">
      <summary>
            添加被选择区域矩形
            </summary>
      <param name="rect">矩形</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ViewInvalidate(DCSoft.Writer.Dom.XTextLine,DCSoft.Drawing.PageContentPartyStyle)">
      <summary>
            声明指定文档行区域无效，需要重新绘制。
            </summary>
      <param name="line">
      </param>
      <param name="party">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ViewInvalidate(System.Drawing.RectangleF,DCSoft.Drawing.PageContentPartyStyle)">
      <summary>
            声明指定区域无效，需要重新绘制。无效矩形采用视图坐标。
            </summary>
      <param name="rect">无效矩形</param>
      <param name="party">文档区域</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Invalidate(DCSoft.Writer.Dom.XTextRange)">
      <summary>
            设置指定的区域视图无效
            </summary>
      <param name="range">文档区域</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InvalidateElements(System.Collections.IEnumerable)">
      <summary>
            声明一群文档元素视图无效，需要重新绘制
            </summary>
      <param name="elements">元素对象集合</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.PrintDocumentExt(System.Boolean,System.String)">
      <summary>
            指定页码打印文档，页码是从0开始计算的。
            </summary>
      <param name="showDialog">是否显示打印机选择对话框</param>
      <param name="specifyPageIndexs">
            指定的页码，各个页码之间用逗号分开，页码是从0开始计算的，如果为空则打印整个文档</param>
      <remarks>
            比如
            ctl.PrintDocumentExt( true , "1,3,5,7,9");
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.PrintDocument">
      <summary>
            打印整个文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.PrintCurrentPage">
      <summary>
            打印当前页
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.NormalJumpPrint">
      <summary>
            是否处于常规续打模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetJumpPrintPositionTo(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            将续打位置移动到指定文档元素的上边缘
            </summary>
      <param name="element">文档元素对象</param>
      <param name="autoSetStartPageIndex">自动设置开始显示页码</param>
      <param name="useTopPosition">true:设置到文档元素的上边缘，false:设置到文档元素的下边缘</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetJumpPrintEndPositionTo(DCSoft.Writer.Dom.XTextElement,System.Boolean,System.Boolean)">
      <summary>
            将下端续打位置移动到指定文档元素的边缘
            </summary>
      <param name="element">文档元素对象</param>
      <param name="autoSetEndPageIndex">自动设置开始显示页码</param>
      <param name="useTopPosition">true:设置到文档元素的上边缘，false:设置到文档元素的下边缘</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CommitContentUserTraceById(System.String)">
      <summary>
            提交指定容器元素中的用户痕迹信息
            </summary>
      <param name="id">文档元素编号</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CommitContentUserTrace(DCSoft.Writer.Dom.XTextContainerElement)">
      <summary>
            提交指定容器元素中的用户痕迹信息
            </summary>
      <param name="element">容器文档元素对象</param>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CommitDocumentUserTrace">
      <summary>
            提交文档中所有的用户痕迹信息
            </summary>
      <returns>操作是否修改了文档内容</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserTrackInfos">
      <summary>
            用户修改痕迹信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.NavigateByUserTrackInfo(DCSoft.Writer.UserTrackInfo)">
      <summary>
            导航到指定的用户痕迹信息
            </summary>
      <param name="info">用户痕迹信息对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLogin">
      <summary>
            根据当前操作员信息进行用户登录
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLogin(System.String,System.String,System.Int32)">
      <summary>
            用户登录
            </summary>
      <param name="userID">用户编号</param>
      <param name="userName">用户名</param>
      <param name="permissionLevel">用户等级</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLogin(DCSoft.Writer.Security.UserLoginInfo,System.Boolean)">
      <summary>
            执行用户登录操作
            </summary>
      <param name="loginInfo">登录信息</param>
      <param name="updateUI">是否更新用户界面</param>
      <returns>操作是否成功</returns>
      <remarks>
            本方法会自动启用授权控制，并以留痕模式显示文档内容。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLoginByCurrentUserInfo">
      <summary>
            根据当前操作员信息进行用户登录
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLoginByUserLoginInfo(DCSoft.Writer.Security.UserLoginInfo,System.Boolean)">
      <summary>
            根据用户登录信息执行用户登录操作
            </summary>
      <param name="loginInfo">登录信息</param>
      <param name="updateUI">是否更新用户界面</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UserLoginByParameter(System.String,System.String,System.Int32)">
      <summary>
            根据参数进行用户登录
            </summary>
      <param name="userID">用户编号</param>
      <param name="userName">用户名</param>
      <param name="permissionLevel">用户等级</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckAutoUserLogin">
      <summary>
            检查用户自动登录
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateUserInfoSaveTime">
      <summary>
            更新用户历史记录的时间
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateUserInfoSaveTimeExt(System.Boolean)">
      <summary>
            更新用户历史记录的时间
            </summary>
      <remarks>是否追加新的操作记录</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CreateDocumentFromClipboard">
      <summary>
            从系统剪切板创建文档对象
            </summary>
      <returns>创建的文档对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetSourceDataObjectForPaste(System.Boolean)">
      <summary>
            为粘贴操作获得数据源对象
            </summary>
      <returns>数据对象</returns>
      <remarks>DCWriter内部使用</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ClearInnerDataObject">
      <summary>
            清空内部的数据对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateToolTip(System.Boolean,DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            根据元素提示文本信息列表来更新用户界面
            </summary>
      <param name="checkVersion">是否检测提示信息版本号</param>
      <param name="args">相关的文档事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.IsSleeping">
      <summary>
            控件是否处于睡眠状态
            </summary>
      <returns>是否处于睡眠状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Sleep(System.Boolean)">
      <summary>
            进入睡眠模式，和Wakeup()配对使用。睡眠的控件不响应任何用户界面事件，一些接口也暂停。
            </summary>
      <param name="clearContent">是否清空文档内容</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Wakeup">
      <summary>
            唤醒控件，和Sleep()配对使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddServiceInstance(System.Object)">
      <summary>
            添加服务对象
            </summary>
      <param name="instance">服务对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CoreVersion">
      <summary>
            编辑器内核版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.WaittingMode">
      <summary>
            控件是否处于等待模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateDefaultFont(System.Boolean)">
      <summary>
            更新文档的默认字体
            </summary>
      <param name="updateUI">是否更新用户界面</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.EditorSetDefaultFont(DCSoft.Drawing.XFontValue,System.Drawing.Color,System.Boolean)">
      <summary>
            编辑器调用的设置文档的默认字体和颜色
            </summary>
      <param name="font">默认字体</param>
      <param name="color">默认文本颜色</param>
      <param name="updateUI">是否更新用户界面</param>
      <returns>本次操作对文档的影响</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AddBufferedListItems(System.String,DCSoft.Writer.Data.ListItemCollection,System.Boolean)">
      <summary>
            添加缓存的项目列表
            </summary>
      <remarks>
            在这里添加好项目列表后，只需要设置输入域对象的field.FieldSettings.ListSource.SourceName
            等于这里的name参数值就能使用缓存的列表对象。
            </remarks>
      <param name="name">名称</param>
      <param name="items">缓存的项目列表</param>
      <param name="globalItems">是否为全局缓存</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RuntimeReadonly">
      <summary>
            运行时的控件内容只读设置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InDesignMode">
      <summary>
            控件是否处于设计模式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnFontChanged(System.EventArgs)">
      <summary>
            控件字体发生改变事件，更新文档的默认字体
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.MoveTo(DCSoft.Writer.MoveTarget)">
      <summary>
            将插入点移动到指定位置
            </summary>
      <param name="target">移动的目标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.MoveToPosition(System.Int32)">
      <summary>
            移动光标到指定位置处
            </summary>
      <param name="index">位置序号</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CancelFormatBrush">
      <summary>
            取消格式刷操作,DCWriter内部使用。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ApplyFormatBrush">
      <summary>
            执行格式刷完成功能
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RateOfDocumentUnitToPixel">
      <summary>
            获得将文档单位转换为屏幕像素单位的比率
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.GetHostedInstance(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            获得指定元素承载的对象
            </summary>
      <param name="element">文档元素对象</param>
      <returns>承载的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.EnableVisualStyles">
      <summary>
            启用可视化样式
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ControlLoading">
      <summary>
            控件正在加载标记
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnLoad(System.EventArgs)">
      <summary>
            控件加载时的处理
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.TestOnLoad">
      <summary>
            控件加载时的处理
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckControlLoaded">
      <summary>
            检查控件是否加载
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CreateDCViewGraphics">
      <summary>
            创建视图用的画布对象
            </summary>
      <returns>创建的画布对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RefreshDocument">
      <summary>
            刷新文档
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.RefreshDocumentExt(System.Boolean,System.Boolean)">
      <summary>
            刷新文档
            </summary>
      <param name="refreshSize">是否重新计算元素大小</param>
      <param name="executeLayout">是否进行文档内容重新排版</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ContentViewHeight">
      <summary>
            文档内容视图高度
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdatePages(System.Int32)">
      <summary>
            更新文档页状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CheckHandle">
      <summary>
            检测窗体句柄，确保已经创建了句柄
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteVBScript(System.String)">
      <summary>
            单独执行一段外界注入的VB脚本代码
            </summary>
      <param name="scriptText">脚本代码</param>
      <returns>执行结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnLinkClick(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            暂不支持
            </summary>
      <param name="element">文档元素对象</param>
      <param name="link">链接目标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ViewPointToClient(System.Int32,System.Int32)">
      <summary>
            视图坐标转换为控件客户区中的坐标
            </summary>
      <param name="x">X值</param>
      <param name="y">Y值</param>
      <returns>新坐标</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ClientPointToView(System.Int32,System.Int32)">
      <summary>
            将控件客户区中的坐标转换为视图坐标
            </summary>
      <param name="x">X值</param>
      <param name="y">Y值</param>
      <returns>新坐标</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SmoothScrollView">
      <summary>
            是否启用平滑滚动效果
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ScrollToViewPosition(System.Single)">
      <summary>
            滚动视图到指定的视图坐标位置处
            </summary>
      <param name="viewPosition">视图Y坐标</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ScrollToCaret">
      <summary>
            滚动视图到光标位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ScrollToCaretExt(DCSoft.WinForms.ScrollToViewStyle)">
      <summary>
            滚动视图到光标位置
            </summary>
      <param name="style">滚动方式</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateTextCaretByElement(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            根据指定的文档元素对象更新光标
            </summary>
      <param name="element">指定的文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateTextCaret">
      <summary>
            根据当前元素更新光标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateTextCaretWithoutScroll">
      <summary>
            根据当前元素更新光标，而且不会造成用户视图区域的滚动
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SelectionStartPosition">
      <summary>
            文档中当前元素或被选择区域的开始位置在编辑器控件客户区中的坐标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SelectAll">
      <summary>
            选中文档所有内容
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Cut(System.Boolean)">
      <summary>
            剪切
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Copy">
      <summary>
            复制
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Paste">
      <summary>
            粘贴
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Undo">
      <summary>
            撤销操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Redo">
      <summary>
            重复操作
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DeleteSelection(System.Boolean)">
      <summary>
            删除选择区域
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.PositionInfoText">
      <summary>
             表示当前插入点位置信息的字符串
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateCurrentPage">
      <summary>
            更新当前页
            </summary>
      <returns>操作是否修改了当前页对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.ExecuteElementDefaultMethod(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            执行文档元素默认方法
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.CancelEditElementValue">
      <summary>
            取消当前的编辑元素内容的操作
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.BeginEditElementValueById(System.String)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="id">文档元素编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.BeginEditElementValue(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="element">文档元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.BeginEditElementValue(DCSoft.Writer.Dom.XTextElement,System.Boolean,DCSoft.Writer.ValueEditorActiveMode,System.Boolean,System.Boolean)">
      <summary>
            开始执行编辑元素内容值的操作
            </summary>
      <param name="element">元素对象</param>
      <param name="detectOnly">本次调用只是检测当前元素的值能否编辑，但不执行编辑操作</param>
      <param name="sourceMode">发起编辑操作的来源</param>
      <param name="checkActiveMode">是否检测激活模式</param>
      <param name="checkRecursion">检查递归</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.BeginInsertKB">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.BeginInsertKBSpecifyText(System.String)">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <param name="specifyText">指定的文本</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnScroll(System.Windows.Forms.ScrollEventArgs)">
      <summary>
            处理控件视图滚动事件
            </summary>
      <param name="se">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnResize(System.EventArgs)">
      <summary>
            控件大小改变事件处理
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.SetZoomRate(System.Single)">
      <summary>
            设置缩放比率
            </summary>
      <param name="rate">缩放比率</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.UpdateForAutoZoom(System.Boolean)">
      <summary>
            为自动缩放而更新控件状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnRightToLeftChanged(System.EventArgs)">
      <summary>
            处理排版方向发生改变事件
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.AbsoluteFocused">
      <summary>
            绝对的是否占有焦点
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnGotFocus(System.EventArgs)">
      <summary>
            处理控件获得焦点事件,刷新光标
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnLostFocus(System.EventArgs)">
      <summary>
            处理控件失去焦点事件
            </summary>
      <param name="e">事件参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Select(System.Boolean,System.Boolean)">
      <summary>
            选择控件
            </summary>
      <param name="directed">
      </param>
      <param name="forward">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnHandleDestroyed(System.EventArgs)">
      <summary>
            为修复问题DCWRITER_CS-302而做的判断
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.WndProc(System.Windows.Forms.Message@)">
      <summary>
            处理底层消息
            </summary>
      <param name="m">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.HandleShift_InsertForIme">
      <summary>
            处理输入法导致从Shift+Insert快捷键,用于处理输入法的大段自定义短语输入。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.InsertStringFromUI(System.String)">
      <summary>
            插入从UI输入的字符串
            </summary>
      <param name="text">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.Dispose(System.Boolean)">
      <summary>
            销毁对象
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.OnValidating(System.ComponentModel.CancelEventArgs)">
      <summary>
            准备验证数据
            </summary>
      <param name="e">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterViewControl.DelayFocus(System.Int32)">
      <summary>
            延时获得焦点
            </summary>
      <param name="interval">延时的毫秒数</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ExtInfo">
      <summary>
            扩展信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ImmProvider">
      <summary>
            创建输入法控制器
            </summary>
      <returns>创建的对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Caret">
      <summary>
            光标控制对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.EnableUIEventStartEditContent">
      <summary>
             允许执行StartEditContent事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ContextMenuManager">
      <summary>
            快捷菜单管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ForcePreProcessMessage">
      <summary>
            强制预处理消息，用于避免某些情况下的堆栈溢出错误。
            </summary>
      <remarks>一般情况下，AxWriterControl会自动检测是否需要强制预处理消息。不排除在某些情况下
            无法自动检测而导致出现堆栈溢出的错误，此时可以设置这个属性来强制预处理消息。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.LayoutDock">
      <summary>
            布局停靠样式，仅仅向COM接口提供该属性
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CommandControler">
      <summary>
            命令控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CommentEditableWhenReadonly">
      <summary>
            即使在只读状态下是否能编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CommentVisibility">
      <summary>
            是否显示文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CommentSettings">
      <summary>
            文档批注配置信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DoubleClickToEditComment">
      <summary>
            鼠标双击来编辑文档批注
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ViewHandleManager">
      <summary>
            文档元素视图中的小把柄管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CommentManager">
      <summary>
            文档批注管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.BackgroundMode">
      <summary>
            后台运行模式
            </summary>
      <remarks>
            后台模式下，任何控件、文档只读和授权内容保护无效，可以任意修改文档内容。
            但仍然会根据需要留下历史修改痕迹。
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Modified">
      <summary>
            文档内容改变标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.GraphicsUnit">
      <summary>
            绘图单位
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CurrentContentPartyStyle">
      <summary>
            当前文档部分类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Selection">
      <summary>
            文档选择的部分
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.EnabledElementEvent">
      <summary>
            是否允许触发文档元素级事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.EventTemplates">
      <summary>
            文档元素事件模板列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.GlobalEventTemplates">
      <summary>
            全局文档元素事件模板列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Text">
      <summary>
            控件数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.RTFText">
      <summary>
            RTF文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.XMLTextUnFormatted">
      <summary>
            未格式化的XML文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.XMLText">
      <summary>
            XML文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.XMLTextWithDocumentState">
      <summary>
            获得文档XML内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.XMLTextForSave">
      <summary>
            生成用于保存的XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.SpecifyLoadFileNameOnce">
      <summary>
            DCWriter内部使用, 指定的一次性使用的加载文件时的文件名。
             </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.AssistStringListForm">
      <summary>
            快捷辅助录入窗口对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.IgnoreNextKeyPressEventOnce">
      <summary>
            取消下一次的KePress事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DlgSnapshotDelay">
      <summary>
            延时截屏使用的对话框,DCWriter内部使用.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CurrentUIEventType">
      <summary>
            当前用户界面事件类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.InputCharBuffer">
      <summary>
            输入的字符的缓冲区
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.PageTitlePosition">
      <summary>
            页面标题位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.RegisterCodeFileUrl">
      <summary>
            注册码文件URL地址
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.AllowDragContent">
      <summary>
            能否直接拖拽文档内容
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.AcceptDataFormats">
      <summary>
            编辑器控件能接受的数据格式，包括粘贴操作和OLE拖拽操作获得的数据
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.CreationDataFormats">
      <summary>
            编辑器控件能创建的数据格式，这些数据将用于复制操作和OLE拖拽操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.MouseCaptureTransform">
      <summary>
            鼠标拖拽使用的转换对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DragState">
      <summary>
            编辑器控件正在执行OLE拖拽事件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DomImageList">
      <summary>
            DOM使用的图标列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.GrayingDisabledHeaderFooter">
      <summary>
            是否灰化显示不活跃的页眉页脚。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.HighlightRange">
      <summary>
            高亮度显示区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.HighlightRanges">
      <summary>
            高亮度显示区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.FocusedPageIndexBase0">
      <summary>
            从0开始计算的获得焦点的当前页码号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.PageSettings">
      <summary>
            页面设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.BoundsSelection">
      <summary>
            区域选择打印的信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ExtViewMode">
      <summary>
            扩展视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.LastPrintResult">
      <summary>
            最后一次打印结果
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.LastPrintPosition">
      <summary>
            最后一次的打印位置
            </summary>
      <remarks>
            一般本属性和控件的JumpPrintPosition属性搭配使用.
            比如在打印后存储该属性值,下次打开文档后,再设置JumpPrintPosition属性值.
            能设置上次打印结束的位置为续打起始位置.
            </remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.JumpPrint">
      <summary>
            续打信息
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.EnableJumpPrint">
      <summary>
            是否允许续打
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.JumpPrintPosition">
      <summary>
            续打位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.JumpPrintEndPosition">
      <summary>
            续打结束位置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.IsAdministrator">
      <summary>
            是否以管理员模式运行
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.RuntimeClipboard">
      <summary>
            运行时使用的剪切板对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ShowTooltip">
      <summary>
            是否显示提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.TooltipControl">
      <summary>
            内置的提示信息控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ToolTips">
      <summary>
            元素提示文本信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.OwnerWriterControl">
      <summary>
            控件所在的编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.KBLibraryUrl">
      <summary>
            知识库文件URL
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.KBLibrary">
      <summary>
            知识库对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ControlHostManger">
      <summary>
            承载的控件管理器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.MoveFocusHotKey">
      <summary>
            移动焦点使用的快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.InitalizeParameterValues">
      <summary>
            初始化是用的参数列表，格式为“参数名:参数值;参数名:参数值;”。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ListItemsBuffer">
      <summary>
            列表缓存对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.LastUIEventTime">
      <summary>
            最后一次用户界面事件的发生时间
            </summary>
      <remarks>这里的用户界面事件包括鼠标键盘事件、OLE拖拽事件，
            应用程序可以根据这个属性值来实现超时锁定用户界面的功能。</remarks>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.Readonly">
      <summary>
            文档内容只读标记
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.HeaderFooterReadonly">
      <summary>
            页眉页脚是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.FormView">
      <summary>
            表单视图模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ServerObject">
      <summary>
            服务器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DocumentOptions">
      <summary>
            文档设置
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DocumentOptionsXML">
      <summary>
            文档设置XML字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.ExcludeKeywords">
      <summary>
            违禁关键字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DocumentControler">
      <summary>
            文档控制器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.AppHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.HideCaretWhenHasSelection">
      <summary>
            当选择了文档内容时隐藏光标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.IsEditingElementValue">
      <summary>
            正在编辑文档元素数值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.InnerEnableEditElementValue">
      <summary>
            内部的是否运行启用文档元素数据编辑器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DragableElement">
      <summary>
            可以被拖拽的文档元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.DragableHandleBounds">
      <summary>
            拖拽句柄边界
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.IsShowingEditorDropdown">
      <summary>
            是否正在显示下拉列表形式的元素数据编辑界面。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WriterViewControl.EditorHost">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlExtViewMode">
      <summary>
            编辑器控件视图状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlExtViewMode.Normal">
      <summary>
            正常模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlExtViewMode.JumpPrint">
      <summary>
            续打模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlExtViewMode.OffsetJumpPrint">
      <summary>
            偏移续打模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlExtViewMode.BoundsSelection">
      <summary>
            区域选择模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ContentFormatUtils">
      <summary>
            内容格式例程
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.dlgPromptProtectedContent">
      <summary>
            显示内容保护信息的对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgPromptProtectedContent.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgPromptProtectedContent.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgPromptProtectedContent.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgPromptProtectedContent.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.dlgPromptProtectedContent.ContentProtectedInfo">
      <summary>
            内容保护信息列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ComponentTypeControler">
      <summary>
            组件类型控制器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ComponentTypeControler.RefreshBuffer">
      <summary>
            刷新缓存区
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ComponentTypeControler.LoadRemoteAssembly(System.String)">
      <summary>
            加载远程程序集对象
            </summary>
      <param name="fileName">文件名</param>
      <returns>程序集名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.ComponentTypeControler.FillTreeView(System.Windows.Forms.TreeView,System.String)">
      <summary>
            填充树状列表
            </summary>
      <param name="tvwControl">树状列表控件</param>
      <param name="selectedTypeName">选择的类型名称</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.ComponentTypeControler.IgnoreType(DCSoft.Design.ComponentTypeInfo)">
      <summary>
            判断是否忽略类型
            </summary>
      <param name="info">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.ComponentTypeControler.AddAssemblyNode(System.Windows.Forms.TreeView,System.String,System.String)">
      <summary>
            添加程序集节点
            </summary>
      <param name="tvwControl">树状列表控件</param>
      <param name="asmName">程序集名称</param>
      <param name="selectedTypeName">选择的类型名称</param>
      <returns>添加的节点对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.ComponentTypeControler.BrowseType">
      <summary>
            浏览操作类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ComponentTypeBrowseTypes">
      <summary>
            浏览操作类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ComponentTypeBrowseTypes.ForControlHost">
      <summary>
            为承载控件而浏览类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ComponentTypeBrowseTypes.ForDataSource">
      <summary>
            为设置数据源而浏览类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IContextMenuStripManager">
      <summary>
            上下文快捷菜单管理器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.AddContextMenuSeparator(System.Type)">
      <summary>
            向文档元素快键菜单添加一个分隔条
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>分隔条对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.AddContextMenuItem(System.Type,System.String,System.String,System.String,System.String,System.EventHandler)">
      <summary>
            添加快键菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="name">菜单项目名称</param>
      <param name="commandName">编辑器命令名</param>
      <param name="text">文本</param>
      <param name="iconBase64String">图标</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.CreateContextMenuItem(System.String,System.String,System.String,System.String,System.EventHandler)">
      <summary>
            创建快键菜单项目
            </summary>
      <param name="name">菜单项目名称</param>
      <param name="commandName">编辑器命令名</param>
      <param name="text">文本</param>
      <param name="iconBase64String">图标</param>
      <param name="clickHandler">菜单点击事件处理委托</param>
      <returns>生成的菜单项目对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.SetMenu(System.Type,System.Windows.Forms.ContextMenuStrip)">
      <summary>
            设置快捷菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <param name="menu">菜单对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.GetMenu(System.Type)">
      <summary>
            获得指定文档元素类型使用的快捷菜单
            </summary>
      <param name="elementType">文档元素类型</param>
      <returns>获得的快捷菜单</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.Build(System.String[])">
      <summary>
            创建快捷菜单
            </summary>
      <param name="commandNamesTexts">命令文本数组，偶数为命令名称，奇数为菜单文本</param>
      <returns>创建的快捷菜单对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IContextMenuStripManager.GetCurrentContextMenu">
      <summary>
            根据控件状态返回当前快捷菜单
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.Count">
      <summary>
            内部的保存的菜单个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.DefaultMenu">
      <summary>
            默认菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.TableCellMenu">
      <summary>
            单元格菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.InputFieldMenu">
      <summary>
            输入域菜单
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IContextMenuStripManager.ImageMenu">
      <summary>
            图片菜单
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IControlHostManager">
      <summary>
            编辑器承载的控件的管理器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.InvalidateLayout(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            声明控件的布局状态发生改变，需要更新对应的控件的位置
            </summary>
      <param name="element">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateInvalidateLayout">
      <summary>
            更新所有布局状态发生改变的元素对应的控件的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateHostWindowsControlPosition">
      <summary>
            更新文档中承载的控件的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateHostWindowsControlPositionAsynic">
      <summary>
            更新文档中承载的控件的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateHostWindowsControlPositionAsynic(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            异步的更新文档中承载的控件的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateHostWindowsControlPosition(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            更新文档中承载的控件的位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.ResetHostControl(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            重置承载的控件
            </summary>
      <param name="element">元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.ReloadControl(DCSoft.Writer.Dom.XTextControlHostElement,System.Boolean,System.Boolean)">
      <summary>
            为指定的文档元素加载控件
            </summary>
      <param name="element">文档元素对象</param>
      <param name="checkDelayLoad">检查延迟加载标记</param>
      <returns>控件对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.RemoveControl(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            删除指定元素对应的控件
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.GetControl(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            获得指定文档元素对应的控件
            </summary>
      <param name="element">文档元素对象</param>
      <returns>控件对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.UpdateControlContentVersion(DCSoft.Writer.Dom.XTextControlHostElement)">
      <summary>
            更新控件内容版本号
            </summary>
      <param name="element">文档元素对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.TrySetControlSize(DCSoft.Writer.Dom.XTextControlHostElement,System.Single,System.Single)">
      <summary>
            试图设置控件大小
            </summary>
      <param name="element">文档元素对象</param>
      <param name="viewWidth">视图宽度</param>
      <param name="viewHeight">视图高度</param>
      <returns>操作后的大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.RemoveDeletedHostControl">
      <summary>
            删除被删除的元素对应的控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.ReloadControls">
      <summary>
            重新加载编辑器承载的控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.DeleteUnkownControls">
      <summary>
            删除未知的无主控件
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.IControlHostManager.ClearControls">
      <summary>
            删除所有的控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IControlHostManager.ViewControl">
      <summary>
            编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.IControlHostManager.Enable">
      <summary>
            是否允许承载控件
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.DragOperationState">
      <summary>
            OLE拖拽操作状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DragOperationState.None">
      <summary>
            没有执行拖拽操作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DragOperationState.DragingSelection">
      <summary>
            正在执行内部拖拽被选择区域的操作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DragOperationState.Drag">
      <summary>
            正在接受来自外界的拖拽操作 
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.DragOperationState.DragDropInOwnerWriterControl">
      <summary>
            在本编辑器内部执行拖拽内容操作。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.FunctionControlVisibility">
      <summary>
            功能性控件可见性设置
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.FunctionControlVisibility.Auto">
      <summary>
            自动设置可见性
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.FunctionControlVisibility.Visible">
      <summary>
            一直显示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.FunctionControlVisibility.Hide">
      <summary>
            一直隐藏
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.FormatListItemsEventHandler">
      <summary>
            获得列表项目显示的文本的事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.QueryListItemsEventHandler">
      <summary>
            查询列表项目事件委托类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.StatusTextChangedEventHandler">
      <summary>
            状态文本发生改变事件委托
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlState">
      <summary>
            编辑器控件状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlState.#ctor(DCSoft.Writer.Controls.WriterControl)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WriterControlState.Restore">
      <summary>
            恢复编辑器控件状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.QueryKBEntriesEventHandler">
      <summary>
            查询知识库列表使用的事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.WPFHelper">
      <summary>
            WPF相关代码
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.GetWPFType(System.String)">
      <summary>
            获得指定名称的WPF元素对象类型
            </summary>
      <param name="name">类型名称</param>
      <returns>获得的类型对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.IsWPFUIElementType(System.Type)">
      <summary>
            判断是否是WPF元素类型
            </summary>
      <param name="t">对象类型</param>
      <returns>是否是WPF元素类型</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.IsWPFUIElement(System.Object)">
      <summary>
            判断对象是否是WPF元素对象实例
            </summary>
      <param name="wpfElement">对象实例</param>
      <returns>是否是WPF元素对象实例</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.CreateWPFHostControl(System.Object)">
      <summary>
            创建承载WPF元素的控件对象
            </summary>
      <param name="wpfElement">WPF元素对象</param>
      <returns>创建的控件对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.ClearHostedWPFElement(System.Windows.Forms.Control)">
      <summary>
            清空被承载的WPF元素。
            </summary>
      <param name="hostControl">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.GetHostedUIElement(System.Windows.Forms.Control)">
      <summary>
            获得控件中承载的WPF元素对象
            </summary>
      <param name="ctl">控件</param>
      <returns>承载的WPF元素对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.GetWPFElementRenderSize(System.Object)">
      <summary>
            获得WPF元素的呈现大小
            </summary>
      <param name="wpfElement">WPF元素对象</param>
      <returns>呈现大小</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.WPFHelper.WPFElementToImage(System.Object,System.Int32,System.Int32)">
      <summary>
            将WPF元素转换为图片
            </summary>
      <param name="wpfElement">WPF元素</param>
      <param name="width">宽度</param>
      <param name="height">高度</param>
      <returns>生成的图片</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.WPFHelper.UIElementType">
      <summary>
            WPF UIElement类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.WPFHelper.ElementHostType">
      <summary>
            承载WPF元素的WinForm控件的对象类型
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.WriterControlCommandID">
      <summary>
            编辑器控件命令编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlCommandID.Nod">
      <summary>
            空白命令
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.WriterControlCommandID.ExecuteCommand">
      <summary>
            执行命令
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.CommandErrorEventHandler">
      <summary>
            命令执行错误处理委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementValueEditResult">
      <summary>
            元素值编辑操作结果
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditResult.None">
      <summary>
            没执行任何编辑操作.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditResult.UserCancel">
      <summary>
            试图执行编辑器操作，但用户取消了。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditResult.UserAccept">
      <summary>
            成功执行了编辑器操作.
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ElementValueEditResult.OpeingUI">
      <summary>
            正在加载用户界面
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.FormViewMode">
      <summary>
            表单视图模式类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Controls.FormViewMode.Disable">
      <summary>
            不处于表单视图模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.FormViewMode.Normal">
      <summary>
            普通表单视图模式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.FormViewMode.Strict">
      <summary>
            严格的表单视图模式
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.IKBInserter">
      <summary>
            向编辑器插入知识点的操作对象 
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Controls.IKBInserter.BeginInsertKB(System.String)">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.IKBInserter.BeginInsertKB">
      <summary>
            显示插入知识库的弹出式列表
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.dlgAbout">
      <summary>
            关于对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout.PublishDateTime">
      <summary>
            发布日期
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.dlgAbout.components">
      <summary>
            必需的设计器变量。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyTitle">
      <summary>
            程序标题
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyVersion">
      <summary>
            程序版本
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyDescription">
      <summary>
            程序说明
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyProduct">
      <summary>
            产品信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyCopyright">
      <summary>
            版权信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.AssemblyCompany">
      <summary>
            公司信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.Dispose(System.Boolean)">
      <summary>
            清理所有正在使用的资源。
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.dlgAbout.InitializeComponent">
      <summary>
            设计器支持所需的方法 - 不要
            使用代码编辑器修改此方法的内容。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementValueEditor">
      <summary>
            文档元素内容编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementValueEditor.EditValue(DCSoft.Writer.Controls.TextWindowsFormsEditorHost,DCSoft.Writer.Controls.ElementValueEditContext)">
      <summary>
            编辑元素数值
            </summary>
      <param name="host">编辑器宿主对象</param>
      <param name="context">上下文对象</param>
      <returns>编辑结果</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementValueEditor.GetEditStyle(DCSoft.Writer.Controls.TextWindowsFormsEditorHost,DCSoft.Writer.Controls.ElementValueEditContext)">
      <summary>
            获得编辑元素的方式
            </summary>
      <param name="host">编辑器宿主</param>
      <param name="context">编辑上下文对象</param>
      <returns>编辑的方式</returns>
    </member>
    <member name="T:DCSoft.Writer.Controls.KeyState">
      <summary>
            按键状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.KeyState.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.KeyState.#ctor(System.Windows.Forms.Keys)">
      <summary>
            初始化对象
            </summary>
      <param name="key">按键值</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.KeyState.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.KeyState.Control">
      <summary>
            Control键是否按下
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.KeyState.Alt">
      <summary>
            是否按下Alt键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.KeyState.Shift">
      <summary>
            是否按下Shift键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.KeyState.Key">
      <summary>
            按键值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementToolTip">
      <summary>
            元素提示文本信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTip.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTip.#ctor(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="element">文档元素对象</param>
      <param name="text">文本</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTip.EqualsValue(DCSoft.Writer.Controls.ElementToolTip)">
      <summary>
            比较对象数据是否一致
            </summary>
      <param name="tip">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.Element">
      <summary>
            元素
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.Style">
      <summary>
            样式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.Level">
      <summary>
            等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.ContentType">
      <summary>
            内容类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTip.DisplayOnce">
      <summary>
            一次性的提示文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ElementToolTipContainer">
      <summary>
            提示文本信息容器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTipContainer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTipContainer.Clear">
      <summary>
            清除所有数据
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTipContainer.IncreateVersion">
      <summary>
            增加版本号
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTipContainer.Add(DCSoft.Writer.Dom.XTextElement,System.String)">
      <summary>
            添加项目
            </summary>
      <param name="element">文档元素</param>
      <param name="text">提示文本内容</param>
    </member>
    <member name="M:DCSoft.Writer.Controls.ElementToolTipContainer.Add(DCSoft.Writer.Dom.XTextElement,System.String,DCSoft.Writer.Controls.ToolTipStyle,DCSoft.Writer.Controls.ToolTipLevel)">
      <summary>
            添加项目
            </summary>
      <param name="element">文档元素</param>
      <param name="text">提示文本内容</param>
      <param name="style">样式</param>
      <param name="level">等级</param>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTipContainer.Item(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            获得指定元素的项目
            </summary>
      <param name="element">文档元素对象</param>
      <returns>获得的项目</returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.ElementToolTipContainer.Version">
      <summary>
            列表的内容版本号，对列表内容的所有的修改都增加该版本号
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ToolTipStyle">
      <summary>
            提示文本样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipStyle.ToolTip">
      <summary>
            普通提示文本，当鼠标移动到元素上就显示提示
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipStyle.Static">
      <summary>
            静态提示文本，一直显示在用户界面上
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipStyle.RightSide">
      <summary>
            右边提示文本，一直显示在用户界面的右侧
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ToolTipContentType">
      <summary>
            提示文本内容样式
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipContentType.Unknow">
      <summary>
            未知类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipContentType.UserTrack">
      <summary>
            用户痕迹信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipContentType.ElementToolTip">
      <summary>
            元素配置的提示信息
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipContentType.ValidateResult">
      <summary>
            校验结果提示信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.ToolTipLevel">
      <summary>
            提示文本等级
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipLevel.Normal">
      <summary>
            普通提示文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipLevel.Warring">
      <summary>
            警告提示文本
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.ToolTipLevel.Error">
      <summary>
            错误提示文本
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Controls.TextPageViewControl">
      <summary>
            支持文本编辑的分页视图控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl._AcceptsTab">
      <summary>
            获取或设置一个值，该值指示在控件中按 TAB 键时，是否在控件中键入一个 TAB 字符，而不是按选项卡的顺序将焦点移动到下一个控件。
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl._ForceShowCaret">
      <summary>
            是否强制显示光标而不管控件是否获得输入焦点
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl._MoveCaretWithScroll">
      <summary>
            移动光标时是否自动滚动到光标区域
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl._InsertMode">
      <summary>
            当前是否处于插入模式,若处于插入模式,则光标比较细,否则处于改写模式,光标比较粗
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl.DefaultCaretWidth">
      <summary>
            默认光标宽度
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl.DefaultBroadCaretWidth">
      <summary>
            默认的宽光标的宽度,应用于修改模式中的文本编辑器
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Controls.TextPageViewControl._CaretBounds">
      <summary>
            当前光标位置
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.IsInputKey(System.Windows.Forms.Keys)">
      <summary>
            重写键盘字符处理函数,保证控件能处理一些功能键
            </summary>
      <param name="keyData">按键数据</param>
      <returns>控件是否能处理按键数据</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.ShowCaret">
      <summary>
            显示插入点光标
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.OnLostFocus(System.EventArgs)">
      <summary>
            已重载:失去焦点,隐藏光标
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.MoveCaretTo(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            移动光标到新的光标区域
            </summary>
      <param name="vLeft">在视图中光标区域的左端位置</param>
      <param name="vTop">在视图中光标区域的顶端位置</param>
      <param name="vWidth">光标区域宽度</param>
      <param name="vHeight">光标区域高度</param>
      <param name="contentWidth">内容区域宽度</param>
      <returns>移动光标是否造成滚动</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.MoveTextCaretTo(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            针对文本编辑器的移动光标到指定位置
            </summary>
      <param name="vLeft">光标的左端区域</param>
      <param name="vBottom">光标的底端区域</param>
      <param name="vHeight">光标的高度</param>
      <param name="contentWidth">内容宽度</param>
      <returns>移动光标是否造成滚动</returns>
    </member>
    <member name="M:DCSoft.Writer.Controls.TextPageViewControl.HideOwnerCaret">
      <summary>
            隐藏光标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.AcceptsTab">
      <summary>
            获取或设置一个值，该值指示在控件中按 TAB 键时，是否在控件中键入一个 TAB 字符，而不是按选项卡的顺序将焦点移动到下一个控件。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.ForceShowCaret">
      <summary>
            是否强制显示光标而不管控件是否获得输入焦点
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.MoveCaretWithScroll">
      <summary>
            移动光标时是否自动滚动到光标区域
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.InsertMode">
      <summary>
            当前是否处于插入模式,若处于插入模式,则光标比较细,否则处于改写模式,光标比较粗
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.CaretCreated">
      <summary>
            光标已经创建标志
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.ImmProvider">
      <summary>
            创建输入法控制器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Controls.TextPageViewControl.Caret">
      <summary>
            光标控制对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.SearchReplaceCommandArgs">
      <summary>
            查找和替换命令参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.SearchReplaceCommandArgs.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.SearchReplaceCommandArgs.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.SearchString">
      <summary>
            要查找的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.EnableReplaceString">
      <summary>
            是否启用替换模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.ReplaceString">
      <summary>
            要替换的字符串
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.Backward">
      <summary>
            True:向后查找；False:向前查找。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.IgnoreCase">
      <summary>
            不区分大小写
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.SearchID">
      <summary>
            搜索文档元素编号模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.Result">
      <summary>
            替换的次数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.MatchedIndexs">
      <summary>
            搜索到的文本元素在文档内容中的序号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.MatchedCount">
      <summary>
            搜索到的字符串的个数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.ExcludeBackgroundText">
      <summary>
            忽略掉背景文字
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.SearchReplaceCommandArgs.LogUndo">
      <summary>
            记录撤销操作信息
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandEventArgs">
      <summary>
            编辑器命令事件参数
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandEventArgs.#ctor(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Commands.WriterCommandEventMode,DCSoft.Writer.Commands.WriterCommandControler)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">编辑器控件</param>
      <param name="document">文档对象</param>
      <param name="mode">命令模式</param>
      <param name="cmdCtl">控制器对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandEventArgs.UIShowDialog(System.Windows.Forms.Form,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            显示对话框
            </summary>
      <param name="dlg">对话框对象</param>
      <param name="element">关联的文档元素</param>
      <returns>对话框返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandEventArgs.UIShowDialog(System.Windows.Forms.CommonDialog,DCSoft.Writer.Dom.XTextElement)">
      <summary>
            显示对话框
            </summary>
      <param name="dlg">对话框对象</param>
      <param name="element">关联的文档元素</param>
      <returns>对话框返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandEventArgs.UIStartEditContent">
      <summary>
            编辑器控件的开始启用UI层编辑内容
            </summary>
      <returns>启动是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandEventArgs.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.CommandControler">
      <summary>
            命令控制器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.RaiseFromUI">
      <summary>
            由于用户界面菜单按钮操作而触发命令
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Name">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Host">
      <summary>
            编辑器宿主对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.DocumentControler">
      <summary>
            文档内容控制器
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.EditorControl">
      <summary>
            编辑器控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Session">
      <summary>
            命令回话容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Mode">
      <summary>
            参数模式
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.AltKey">
      <summary>
            用户是否按下了 Alt 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.CtlKey">
      <summary>
            用户是否按下的 Ctl 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.ShiftKey">
      <summary>
            用户是否按下了 Shift 键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.KeyCode">
      <summary>
            键盘按键值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.KeyCodeValue">
      <summary>
            KeyCode的COM接口
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.KeyChar">
      <summary>
            键盘字符值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.SourceElement">
      <summary>
            执行动作相关的元素对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.EnableSetUITextAsParamter">
      <summary>
            能否将用户界面元素的文本当做命令参数
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.SetParameterToUIText">
      <summary>
            是否将命令参数设置到UI界面元素的文本值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Parameter">
      <summary>
            相关参数对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.ShowUI">
      <summary>
            允许显示图形化用户界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.UIElement">
      <summary>
            触发动作的用户界面控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.UIEventArgs">
      <summary>
            触发动作时的用户界面事件参数对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Enabled">
      <summary>
            动作是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Visible">
      <summary>
            对象是否可见
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Checked">
      <summary>
            动作是否处于选择状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Actived">
      <summary>
            动作是否处于激活状态
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Cancel">
      <summary>
            取消操作
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.Result">
      <summary>
            命令返回值
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandEventArgs.RefreshLevel">
      <summary>
            用户界面命令控件刷新等级
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.CommandBindingInfo.Control">
      <summary>
            控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.CommandBindingInfo.CommandName">
      <summary>
            绑定的命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.CommandBindingInfo.EventName">
      <summary>
            绑定的事件名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.CommandBindingInfo.InvalidateState">
      <summary>
            状态无效标记，需要重新更新。
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.CommandBindingInfo.CustomHandler">
      <summary>
            自定义使用的委托对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.IContentSearchReplacer">
      <summary>
            文档内容查找和替换操作器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.IContentSearchReplacer.ReplaceAll(DCSoft.Writer.Commands.SearchReplaceCommandArgs)">
      <summary>
            全局替换
            </summary>
      <param name="args">参数</param>
      <returns>替换的次数</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.IContentSearchReplacer.Replace(DCSoft.Writer.Commands.SearchReplaceCommandArgs)">
      <summary>
            替换
            </summary>
      <param name="args">参数</param>
      <returns>操作的元素在文档中的序号,-1表示没找打，-2表示找到了但内容只读没法替换</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.IContentSearchReplacer.SearchAllText(DCSoft.Writer.Commands.SearchReplaceCommandArgs)">
      <summary>
            执行查找
            </summary>
      <param name="args">参数</param>
      <returns>找到的元素在文档中的序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.IContentSearchReplacer.Search(DCSoft.Writer.Commands.SearchReplaceCommandArgs,System.Boolean,System.Int32)">
      <summary>
            执行查找
            </summary>
      <param name="args">参数</param>
      <param name="setSelection">找到后是否设置文档选择状态</param>
      <param name="startIndex">开始序号</param>
      <returns>找到的元素在文档中的序号</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.IContentSearchReplacer.Search(DCSoft.Writer.Commands.SearchReplaceCommandArgs,DCSoft.Writer.Dom.XTextElementList,System.Boolean,System.Int32)">
      <summary>
            执行查找
            </summary>
      <param name="args">参数</param>
      <param name="elements">文档元素对象列表</param>
      <param name="setSelection">找到后是否设置文档选择状态</param>
      <param name="startIndex">开始序号</param>
      <returns>找到的元素在文档中的序号</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.IContentSearchReplacer.ShowUI">
      <summary>
            是否允许显示用户界面
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.IContentSearchReplacer.OwnerForm">
      <summary>
            所属窗体对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.IContentSearchReplacer.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.IContentSearchReplacer.Content">
      <summary>
            文档内容对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.HostComponentTypeInfoLoader">
      <summary>
            编辑器可承载的组件类型信息加载器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.HostComponentTypeInfoLoader.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.HostComponentTypeInfoLoader.Load(System.Reflection.Assembly)">
      <summary>
            从指定的程序集中加载组件类型信息
            </summary>
      <param name="asm">程序集对象</param>
      <returns>获得的组件类型信息数组</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.HostComponentTypeInfoLoader.SupportWinFormControl">
      <summary>
            指定WinForm控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.HostComponentTypeInfoLoader.SupportDocumentImage">
      <summary>
            指定文档图形对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.HostComponentTypeInfoLoader.SupportWPF">
      <summary>
            指定WPF对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.CRDebug(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            简体和繁体相互转换
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.SimplifiedSwapTraditional(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            简体和繁体相互转换
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.SimplifiedToTraditional(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            简体转换为繁体
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.TraditionalToSimplified(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            繁体转换为简体
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.ConvertSimplifiedAndTraditionalCommand(DCSoft.Writer.Commands.WriterCommandEventArgs,System.Int32)">
      <summary>
            进行简体和繁体相关的转换
            </summary>
      <param name="args">
      </param>
      <param name="type">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleCore.Register(System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            注册
            </summary>
      <param name="eventSender">
      </param>
      <param name="args">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandExecuterBase">
      <summary>
            命令控制对象
            </summary>
      <remarks>本控件用于将用户界面控件的事件转换为对系统命令的调用，并提供设计时的支持。
            本对象支持的用户界面控件有Button、TextBox、ComboBox、Menu、ToolStripItem、ToolStripButton、
            ToolStripTextBox、ToolStripComboBox、ToolSTripMenuItem等等
            编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.DesignMode">
      <summary>
            是否处于设计模式 
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.Close">
      <summary>
            关闭对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.BindingEvent(System.Object,DCSoft.Writer.Commands.CommandBindingInfo)">
      <summary>
            绑定用户界面控件事件
            </summary>
      <param name="ctl">控件对象</param>
      <param name="info">绑定信息</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.UnBindingEvent(System.Object,DCSoft.Writer.Commands.CommandBindingInfo)">
      <summary>
            取消绑定用户界面控件事件
            </summary>
      <param name="ctl">控件对象</param>
      <param name="info">绑定信息</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.SetCustomControlEventHandler(System.String,System.Delegate)">
      <summary>
            设置自定义的控件事件处理委托对象,本方法一定要在Start()方法前调用。
            </summary>
      <param name="eventName">事件名称</param>
      <param name="handler">委托对象</param>
      <remarks>
            比如
            DevExpress.XtraBars.ItemClickEventHandler handler = delegate(
            object sender2, 
               DevExpress.XtraBars.ItemClickEventArgs args2) 
               {
                   writerCommandControler1.HandleControlEvent(sender2, args2);
               };
            writerCommandControler1.SetCustomControlEventHandler("ItemClick" , handler );
            writerCommandControler1.Start();
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.SetCommandUIVisible(System.String,System.Boolean)">
      <summary>
            设置命令相关的UI元素可见性
            </summary>
      <param name="commandName">命令名</param>
      <param name="visible">可见性</param>
      <returns>操作修改了UI元素的个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.IsCommandSupported(System.String)">
      <summary>
            判断是否支持指定名称的功能命令
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>是否支持功能命令</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.IsCommandEnabled(System.String)">
      <summary>
            判断指定名称的命令是否可用
            </summary>
      <param name="commandName">命令名称</param>
      <returns>该命令是否可用</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.IsCommandChecked(System.String)">
      <summary>
            判断指定名称的命令的状态是否处于选中状态
            </summary>
      <param name="commandName">命令名称</param>
      <returns>该命令是否处于选中状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.InnerExecuteCommand(System.String,System.Boolean,System.Object)">
      <summary>
            DCWriter内部使用。执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <returns>执行操作后的返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.ExecuteCommandSpecifyRaiseFromUI(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <param name="raiseFromUI">命令是普通用户界面操作而触发的</param>
      <returns>执行操作后的返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.Start">
      <summary>
            启动对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.UpdateInvalidatedCommandState">
      <summary>
            更新所有状态无效的命令的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.UpdateBindingControlStatus(System.Object)">
      <summary>
            更新控件状态
            </summary>
      <param name="control">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.UpdateBindingControlStatus(System.String)">
      <summary>
            更新绑定的控件的状态
            </summary>
      <param name="specifyCommandName">指定的编辑器命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.UpdateBindingControlStatusSpecifyCommandNames(System.Collections.Generic.List{System.String})">
      <summary>
            更新绑定的控件的状态
            </summary>
      <param name="specifyCommandNames">指定的编辑器命令名称列表</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.InvalidateCommandState">
      <summary>
            声明所有的命令的状态无效，需要更新
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.InvalidateCommandState(System.String)">
      <summary>
            声明指定名称的命令状态无效，需要更新
            </summary>
      <param name="commandName">命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandExecuterBase.HasInvalidateCommandState">
      <summary>
            是否存在状态无效的命令，需要更新。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandExecuterBase.Controler">
      <summary>
            命令控制器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandExecuterBase.BindingInfos">
      <summary>
            UI控件事件绑定信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandExecuterBase.InjectHandlers">
      <summary>
            注入的编辑器命令中的委托对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.InjectCommandHandlerList">
      <summary>
            注入到命令系统的处理委托对象列表
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.AddBefore(System.String,DCSoft.Writer.Commands.WriterCommandEventHandler)">
      <summary>
            添加执行前运行的委托对象
            </summary>
      <param name="commandName">命令名称</param>
      <param name="handler">委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.AddAfter(System.String,DCSoft.Writer.Commands.WriterCommandEventHandler)">
      <summary>
            添加执行后运行的委托对象
            </summary>
      <param name="commandName">命令名称</param>
      <param name="handler">委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.ExecuteBefore(System.String,System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行前置注入的委托
            </summary>
      <param name="commandName">命令名称</param>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.ExecuteAfter(System.String,System.Object,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行后置注入的委托
            </summary>
      <param name="commandName">命令名称</param>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.GetBeforeHandler(System.String)">
      <summary>
            获得执行命令前运行的委托对象
            </summary>
      <param name="commandName">命令名称</param>
      <returns>获得的委托对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.GetAfterHandler(System.String)">
      <summary>
            获得执行命令后运行的委托对象
            </summary>
      <param name="commandName">命令名称</param>
      <returns>获得的委托对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.Clear">
      <summary>
            删除所有注入的委托对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerList.GetInfo(System.String,System.Boolean)">
      <summary>
            获得指定命令名称的信息对象，命令名称不区分大小写
            </summary>
      <param name="commandName">命令名称</param>
      <param name="create">若未找到是否创建对象</param>
      <returns>找到的对象</returns>
    </member>
    <member name="T:DCSoft.Writer.Commands.InjectCommandHandlerInfo">
      <summary>
            注入到命令系统的委托信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.InjectCommandHandlerInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.InjectCommandHandlerInfo.CommandName">
      <summary>
            编辑器命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.InjectCommandHandlerInfo.BeforeExecuteHandler">
      <summary>
            在执行命令之前运行的委托
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.InjectCommandHandlerInfo.AfterExecuteHandler">
      <summary>
            在执行命令之后运行的委托
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandModuleDescriptor">
      <summary>
            编辑器命令模块描述信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Create(System.Type,System.Boolean)">
      <summary>
            使用特定对象来初始化对象
            </summary>
      <param name="moduleType">
      </param>
      <param name="throwException">是否抛出异常</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Instances">
      <summary>
            对象静态实例列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Name">
      <summary>
            模块名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.ImageResource">
      <summary>
            图标来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Image">
      <summary>
            图标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.ModuleType">
      <summary>
            模块对象类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModuleDescriptor.Commands">
      <summary>
            命令列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandModuleDescriptorList">
      <summary>
            编辑器命令模块描述特性对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.CommandUtils">
      <summary>
            命令相关的通用例程
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.XTextElementProperties">
      <summary>
            文档元素属性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.XTextElementProperties.CreateElement(DCSoft.Writer.Dom.XTextDocument)">
      <summary>
            根据内容设置创建元素
            </summary>
      <param name="document">文档对象</param>
      <returns>创建的元素</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.XTextElementProperties.PromptNewElement(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            为新增元素而显示用户界面来编辑对象数据
            </summary>
      <param name="args">参数</param>
      <returns>用户操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.XTextElementProperties.PromptEditProperties(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            为修改已有的元素的属性而显示用户界面
            </summary>
      <param name="args">参数</param>
      <returns>用户操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.XTextElementProperties.ReadProperties(DCSoft.Writer.Dom.XTextElement)">
      <summary>
            读取元素的属性值到本对象中
            </summary>
      <param name="element">文档元素对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.XTextElementProperties.ApplyToElement(DCSoft.Writer.Dom.XTextDocument,DCSoft.Writer.Dom.XTextElement,System.Boolean)">
      <summary>
            根据对象数据设置文档元素
            </summary>
      <param name="document">文档对象</param>
      <param name="element">要处理的文档元素对象</param>
      <param name="logUndo">是否记录撤销操作信息</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.XTextElementProperties.Document">
      <summary>
            文档对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandContainer">
      <summary>
            编辑器命令容器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.#ctor">
      <summary>
            命令容器对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.Commands">
      <summary>
            动作列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.AllCommands">
      <summary>
            容器中所有的命令组成的列表，该列表是动态生成的对象实例.
            </summary>
      <remarks>
            该列表是动态生成的对象实例，也就是说即使是调用两次本属性获得的值其引用是不一样的。
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.GetCommandRaw(System.String)">
      <summary>
            获得指定名称的动作对象
            </summary>
      <param name="commandName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.GetCommand(System.String)">
      <summary>
            获得指定名称的动作对象
            </summary>
      <param name="commandName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandContainer.Active(DCSoft.Writer.Controls.WriterControl,DCSoft.Writer.Dom.XTextDocument,System.Windows.Forms.KeyEventArgs)">
      <summary>
            根据键盘事件来获得被激活的动作对象
            </summary>
      <param name="editControl">
      </param>
      <param name="document">
      </param>
      <param name="args">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandContainer.Modules">
      <summary>
            模块列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandDescriptor">
      <summary>
            编辑器命令描述信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.FunctionID">
      <summary>
            授权相关的功能编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.CommandName">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.ModuleName">
      <summary>
            模块名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.ShortcutKey">
      <summary>
            快捷键
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.Priority">
      <summary>
            优先级，值越低则越优先
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.Description">
      <summary>
            命令说明
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.Image">
      <summary>
            图标对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.ContainerType">
      <summary>
            容器对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.ReturnValueType">
      <summary>
            返回值数据类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDescriptor.Method">
      <summary>
            对应的方法对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptor.Create(System.Type,System.Reflection.MethodInfo,System.Boolean)">
      <summary>
            根据指定的模块类型和方法创建命令描述对象
            </summary>
      <param name="moduleType">模块类型</param>
      <param name="method">方法对象</param>
      <param name="throwException">若操作失败是否抛出异常</param>
      <returns>命令描述对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptor.Create(System.Type,System.Boolean)">
      <summary>
            根据指定的命令对象类型创建命令描述对象
            </summary>
      <param name="commandType">命令类型</param>
      <param name="throwException">若操作失败是否抛出异常</param>
      <returns>创建的命令描述对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptor.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptor.DefaultResultValue">
      <summary>
            默认的结果返回值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandEventHandler">
      <summary>
            编辑器命令事件委托类型
            </summary>
      <param name="eventSender">参数</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Commands.UIStateRefreshLevel">
      <summary>
            用户界面命令控件刷新等级
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.UIStateRefreshLevel.None">
      <summary>
            不刷新
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.UIStateRefreshLevel.Current">
      <summary>
            只刷新当前命令绑定的用户界面控件的状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.UIStateRefreshLevel.All">
      <summary>
            刷新所有的用户界面控件的状态
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.XBooleanValue">
      <summary>
            布尔值
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.XBooleanValue.True">
      <summary>
            真
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.XBooleanValue.False">
      <summary>
            假
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.XBooleanValue.Default">
      <summary>
            默认值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandEventMode">
      <summary>
            执行动作参数类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.InitalizeUIElement">
      <summary>
            初始化用户界面控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.UpdateUIElement">
      <summary>
            更新用户界面控件
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.QueryState">
      <summary>
            查询参数状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.QueryActive">
      <summary>
            查询命令激活状态
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.BeforeExecute">
      <summary>
            开始执行动作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.Invoke">
      <summary>
            执行动作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.AfterExecute">
      <summary>
            结束执行动作
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandEventMode.InnerNop">
      <summary>
            无任何操作，只是内部使用。
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute">
      <summary>
            动作方法声明特性
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="name">动作名称</param>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.FunctionID">
      <summary>
            功能编号
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.Name">
      <summary>
            动作名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.Priority">
      <summary>
            优先级，值越低则越优先
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.CanModifyContent">
      <summary>
            本命令能否可以导致文档内容修改
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.ShortcutKey">
      <summary>
            快捷键
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.ImageResource">
      <summary>
            动作图标来源
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.Description">
      <summary>
            动作说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.ReturnValueType">
      <summary>
            返回值的数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandDescriptionAttribute.DefaultResultValue">
      <summary>
            默认的结果返回值
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandModule">
      <summary>
            功能模块对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.Start(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            启动模块
            </summary>
      <param name="args">事件参数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.Commands">
      <summary>
            本模块包含的动作对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.Close(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            关闭模块
            </summary>
      <param name="args">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.CreateCommands">
      <summary>
            创建编辑器命令列表
            </summary>
      <returns>创建的列表</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandModule.ApplyElementPropertiesResult(DCSoft.Writer.ElementPropertiesEditEventArgs,DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            对文档元素的修改应用到编辑器中
            </summary>
      <param name="eargs">文档元素属性修改事件参数</param>
      <param name="cmdArgs">编辑器命令事件参数</param>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModule.Name">
      <summary>
            模块名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandModule.Enabled">
      <summary>
            模块是否可用
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterActionModuleList">
      <summary>
            功能模块列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterActionModuleList.AddModule(DCSoft.Writer.Commands.WriterCommandModule)">
      <summary>
            添加编辑器命令模块
            </summary>
      <param name="mdl">模块对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterActionModuleList.GetCommandIgnorecase(System.String)">
      <summary>
            不区分大小写的获得指定名称的命令对象
            </summary>
      <param name="commandName">命令名称</param>
      <returns>获得的命令对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterActionModuleList.Default">
      <summary>
            默认列表对象
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandDelegate">
      <summary>
            基于委托的动态命令对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandDelegate.Handler">
      <summary>
            编辑器命令执行委托对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDelegate.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDelegate.#ctor(System.String,DCSoft.Writer.Commands.WriterCommandEventHandler)">
      <summary>
            初始化对象
            </summary>
      <param name="name">动作名称</param>
      <param name="handler">执行动作的委托对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandDelegate.Execute(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行编辑器命令
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandControler">
      <summary>
            命令控制对象
            </summary>
      <remarks>本控件用于将用户界面控件的事件转换为对系统命令的调用，并提供设计时的支持。
            本对象支持的用户界面控件有Button、TextBox、ComboBox、Menu、ToolStripItem、ToolStripButton、ToolStripTextBox、ToolStripComboBox、ToolSTripMenuItem等等
            编写 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommandControler._BindingInfos">
      <summary>
            绑定的信息对象列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.#ctor(System.ComponentModel.IContainer)">
      <summary>
            初始化对象
            </summary>
      <param name="c">组件容器对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.CanExtend(System.Object)">
      <summary>
            判断对象能否被添加扩展属性
            </summary>
      <param name="extendee">要处理的对象</param>
      <returns>能否添加扩展属性</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.GetCommand(System.String)">
      <summary>
            获得指定名称的命令对象
            </summary>
      <param name="name">命令名称</param>
      <returns>获得的对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.GetEventName(System.Object)">
      <summary>
            获得绑定的动作名称
            </summary>
      <param name="ctl">控件对象</param>
      <returns>获得的动作名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.SetEventName(System.Object,System.String)">
      <summary>
            设置绑定的动作名称
            </summary>
      <param name="ctl">控件对象</param>
      <param name="eventName">动作名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.GetCommandName(System.Object)">
      <summary>
            获得绑定的动作名称
            </summary>
      <param name="ctl">控件对象</param>
      <returns>获得的动作名称</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.SetCommandName(System.Object,System.String)">
      <summary>
            设置绑定的动作名称
            </summary>
      <param name="ctl">控件对象</param>
      <param name="commandName">动作名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.SetCommandNameAndBindgEvent(System.Object,System.String)">
      <summary>
            设置绑定的动作名称并绑定事件
            </summary>
      <param name="ctl">控件对象</param>
      <param name="commandName">动作名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.SetCommandUIVisible(System.String,System.Boolean)">
      <summary>
            设置命令相关的UI元素可见性
            </summary>
      <param name="commandName">命令名</param>
      <param name="visible">可见性</param>
      <returns>操作修改了UI元素的个数</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.Dispose(System.Boolean)">
      <summary>
            销毁对象
            </summary>
      <param name="disposing">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.BindingEvent(System.Object,DCSoft.Writer.Commands.CommandBindingInfo)">
      <summary>
            绑定用户界面控件事件
            </summary>
      <param name="specifyEventName">指定的事件名称</param>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UnBindingEvent(System.Object,DCSoft.Writer.Commands.CommandBindingInfo)">
      <summary>
            取消绑定用户界面控件事件
            </summary>
      <param name="ctl">控件对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.SetCustomControlEventHandler(System.String,System.Delegate)">
      <summary>
            设置自定义的控件事件处理委托对象,本方法一定要在Start()方法前调用。
            </summary>
      <param name="eventName">事件名称</param>
      <param name="handler">委托对象</param>
      <remarks>
            比如
            DevExpress.XtraBars.ItemClickEventHandler handler = delegate(
            object sender2, 
               DevExpress.XtraBars.ItemClickEventArgs args2) 
               {
                   writerCommandControler1.HandleControlEvent(sender2, args2);
               };
            writerCommandControler1.SetCustomControlEventHandler("ItemClick" , handler );
            writerCommandControler1.Start();
            </remarks>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.IsCommandSupported(System.String)">
      <summary>
            判断是否支持指定名称的功能命令
            </summary>
      <param name="commandName">功能命令名称</param>
      <returns>是否支持功能命令</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.IsCommandEnabled(System.String)">
      <summary>
            判断指定名称的命令是否可用
            </summary>
      <param name="commandName">命令名称</param>
      <returns>该命令是否可用</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.IsCommandChecked(System.String)">
      <summary>
            判断指定名称的命令的状态是否处于选中状态
            </summary>
      <param name="commandName">命令名称</param>
      <returns>该命令是否处于选中状态</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.ExecuteCommand(System.String,System.Boolean,System.Object)">
      <summary>
            DCWriter内部使用。执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <returns>执行操作后的返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.ExecuteCommandSpecifyRaiseFromUI(System.String,System.Boolean,System.Object,System.Boolean)">
      <summary>
            执行命令
            </summary>
      <param name="commandName">命令文本</param>
      <param name="showUI">是否允许显示用户界面</param>
      <param name="parameter">用户参数</param>
      <param name="raiseFromUI">命令是普通用户界面操作而触发的</param>
      <returns>执行操作后的返回值</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.HasStarted">
      <summary>
            是否启动了对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.Start">
      <summary>
            启动对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UpdateBindingControlStatus">
      <summary>
            更新绑定的控件的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UpdateBindingControlStatus(System.String)">
      <summary>
            更新绑定的控件的状态
            </summary>
      <param name="specifyCommandName">指定的编辑器命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UpdateBindingControlStatus(System.Object)">
      <summary>
            更新控件状态
            </summary>
      <param name="control">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UpdateBindingControlStatusSpecifyCommandNames(System.Collections.Generic.List{System.String})">
      <summary>
            更新绑定的控件的状态
            </summary>
      <param name="specifyCommandNames">指定的编辑器命令名称列表</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.InvalidateCommandState(System.String)">
      <summary>
            声明指定名称的命令状态无效，需要更新
            </summary>
      <param name="commandName">命令名称</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.InvalidateCommandState">
      <summary>
            声明所有的命令的状态无效，需要更新
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.UpdateInvalidatedCommandState">
      <summary>
            更新所有状态无效的命令的状态
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.BeginInit">
      <summary>
            开始初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandControler.EndInit">
      <summary>
            结束初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.EditControl">
      <summary>
            文本编辑器控件
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.Document">
      <summary>
            正在处理的文档对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.CommandContainer">
      <summary>
            命令容器对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.BindingInfos">
      <summary>
            UI控件事件绑定信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.IsDisposed">
      <summary>
            对象已经被销毁掉了
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.BindingEventNames">
      <summary>
            绑定的事件名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandControler.InjectHandlers">
      <summary>
            注入的编辑器命令中的委托对象列表
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommand">
      <summary>
            编辑器动作基础类型
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.FunctionID">
      <summary>
            授权相关的功能编号
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Name">
      <summary>
            动作名称
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.EnableHotKey">
      <summary>
            是否启用快键键
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Enable">
      <summary>
            动作对象是否可用
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Priority">
      <summary>
            优先级，值越低则越优先
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.ShortcutKey">
      <summary>
            快捷键
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Description">
      <summary>
            动作说明
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Descriptor">
      <summary>
            动作命令描述信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand.Module">
      <summary>
            命令所属的模块对象
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.WriterCommand._ToolbarImage">
      <summary>
            动作对象在工具条上的图标图片对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommand.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommand.Execute(DCSoft.Writer.Commands.WriterCommandEventArgs)">
      <summary>
            执行命令
            </summary>
      <param name="args">参数</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommand.ToolbarImage">
      <summary>
            动作对象在工具条上的图标图片对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommand.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="T:DCSoft.Writer.Commands.WriterCommandList">
      <summary>
            文本编辑器动作列表
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandList.AddCommand(DCSoft.Writer.Commands.WriterCommand)">
      <summary>
            添加动作,添加前会删除列表中相同名称的动作
            </summary>
      <param name="a">动作对象</param>
      <returns>动作在列表中的需要</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.WriterCommandList.Active(DCSoft.Writer.Dom.DocumentEventArgs)">
      <summary>
            激活动作
            </summary>
      <param name="args">文档事件参数</param>
      <returns>激活的动作对象</returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.WriterCommandList.Item(System.String)">
      <summary>
            获得指定名称的动作对象,名称比较不区分大小写
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.Design.dlgCommandNameEditor">
      <summary>
            编辑器命令选择对话框
            </summary>
    </member>
    <member name="F:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.OnLoad(System.EventArgs)">
      <summary>
            窗体加载事件处理
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.FillTreeView(System.Windows.Forms.TreeView,System.Collections.Generic.List{DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo})">
      <summary>
            填充树状列表控件
            </summary>
      <param name="tvw">控件</param>
      <param name="descriptors">说明信息列表</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.CommandInfos">
      <summary>
            功能模块信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.dlgCommandNameEditor.InputCommandName">
      <summary>
            编辑器名称名称
            </summary>
    </member>
    <member name="T:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor">
      <summary>
            编辑器命令名称编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            编辑模式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetCommandSimpleInfo(System.ComponentModel.ITypeDescriptorContext,System.String)">
      <summary>
            获得编辑器命令描述信息
            </summary>
      <param name="context">参数</param>
      <param name="name">命令名称</param>
      <returns>获得的信息对象</returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetAllCommandInfo">
      <summary>
            获得所有可用的编辑器命令信息列表
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetCommandSimpleInfos(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            获得编辑器命令描述信息
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetCommandSimpleInfosByTypes(System.Type[])">
      <summary>
            获得指定类型的编辑器命令描述信息
            </summary>
      <param name="types">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            支持属性
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandNameDlgEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)">
      <summary>
            自定义绘制数据
            </summary>
      <param name="e">
      </param>
    </member>
    <member name="T:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo">
      <summary>
            编辑器命令简单的说明信息
            </summary>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.#ctor(DCSoft.Writer.Commands.WriterCommandDescriptor)">
      <summary>
            初始化对象
            </summary>
      <param name="cmdDesc">名称说明信息对象</param>
    </member>
    <member name="M:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.CompareTo(DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo)">
      <summary>
            比较名称
            </summary>
      <param name="other">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.Name">
      <summary>
            命令名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.ModuleName">
      <summary>
            模块名称
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.Image">
      <summary>
            图标
            </summary>
    </member>
    <member name="P:DCSoft.Writer.Commands.Design.WriterCommandSimpleInfo.ImageIndex">
      <summary>
            图标编号
            </summary>
    </member>
    <member name="T:DCSoft.Common.AttributeString">
      <summary>
            属性字符串列表
            </summary>
      <remarks>编写 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.AttributeString.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.AttributeString.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="listStr">字符串值</param>
    </member>
    <member name="M:DCSoft.Common.AttributeString.GetValue(System.String)">
      <summary>
            获得指定名称的项目值
            </summary>
      <param name="name">名称</param>
      <returns>值</returns>
    </member>
    <member name="M:DCSoft.Common.AttributeString.SetValue(System.String,System.String)">
      <summary>
            设置项目值
            </summary>
      <param name="name">名称</param>
      <param name="Value">值</param>
    </member>
    <member name="M:DCSoft.Common.AttributeString.Parse(System.String)">
      <summary>
            解析字符串，获得其中的数据
            </summary>
      <param name="text">
      </param>
    </member>
    <member name="M:DCSoft.Common.AttributeString.ToString">
      <summary>
            返回表示对象内容的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.AttributeString.ApplyToInstance(System.Object,System.Boolean)">
      <summary>
            将对象数据设置到
            </summary>
      <param name="instance">
      </param>
      <param name="throwException">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Common.AttributeStringItem">
      <summary>
            属性项目
            </summary>
    </member>
    <member name="M:DCSoft.Common.AttributeStringItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.AttributeStringItem.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.AttributeStringItem.Name">
      <summary>
            属性名
            </summary>
    </member>
    <member name="P:DCSoft.Common.AttributeStringItem.Value">
      <summary>
            属性值
            </summary>
    </member>
    <member name="T:DCSoft.Common.AttributeStringBuilder">
      <summary>
            样式类型的字符串创建器
            </summary>
    </member>
    <member name="T:DCSoft.Common.BackgroundTaskManager">
      <summary>
            后台任务管理器
            </summary>
      <remarks>袁永福到此一游</remarks>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.Pause">
      <summary>
            暂停操作。当前任务取消，后续任务挂起，此时仍然可以添加任务。
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.Clear">
      <summary>
            清空列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.AddTask(DCSoft.Common.BackgroundTask)">
      <summary>
            添加任务
            </summary>
      <param name="task">任务对象</param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.RemoveTask(DCSoft.Common.BackgroundTask)">
      <summary>
            删除任务
            </summary>
      <param name="task">
      </param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.RemoveTaskByTaskID(System.String)">
      <summary>
            根据任务编号删除任务
            </summary>
      <param name="taskID">任务编号</param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.Run">
      <summary>
            开始执行任务。
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager._Worker_DoWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
      <summary>
            执行后台任务
            </summary>
      <param name="sender">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.RunOnTask(DCSoft.Common.BackgroundTask)">
      <summary>
            执行一个任务
            </summary>
      <param name="task">任务对象</param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.IsControlDisposed(System.Object)">
      <summary>
            判断是否已经销毁的控件
            </summary>
      <param name="ctl">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.RemoveByControl(System.Object)">
      <summary>
            删除和指定控件相关的后台任务
            </summary>
      <param name="control">控件对象</param>
      <returns>删除的任务个数</returns>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.BrintToFront(System.String)">
      <summary>
            将指定编号的任务前置
            </summary>
      <param name="id">任务编号</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.GetTask(System.String)">
      <summary>
            获得指定编号的任务
            </summary>
      <param name="id">任务编号</param>
      <returns>获得的任务对象</returns>
    </member>
    <member name="M:DCSoft.Common.BackgroundTaskManager.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTaskManager.Owner">
      <summary>
            对象所属父对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTaskManager.MaxTaskCount">
      <summary>
            最大任务个数
            </summary>
    </member>
    <member name="T:DCSoft.Common.BackgroundTask">
      <summary>
            后台任务对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.BackgroundTask.EventWork">
      <summary>
            执行任务内容的事件
            </summary>
    </member>
    <member name="F:DCSoft.Common.BackgroundTask.EventCompleted">
      <summary>
            任务完成后事件
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTask.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTask.WaitForStartTime">
      <summary>
            判断是否满足启动时刻的条件
            </summary>
      <returns>是否满足条件</returns>
    </member>
    <member name="M:DCSoft.Common.BackgroundTask.DoWorkUseThread">
      <summary>
            使用另外一个线程来单独的执行任务内容
            </summary>
    </member>
    <member name="M:DCSoft.Common.BackgroundTask.OnEventWork(System.Object,System.EventArgs)">
      <summary>
            执行任务
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="M:DCSoft.Common.BackgroundTask.OnEventCompleted(System.Object,System.EventArgs)">
      <summary>
            任务完成后的执行的工作
            </summary>
      <param name="eventSender">事件发起者</param>
      <param name="args">事件参数</param>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.Worker">
      <summary>
            系统内置的后台任务执行器
             </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.Manager">
      <summary>
            任务管理器
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.CancellationPending">
      <summary>
            用户是否取消了任务
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.ID">
      <summary>
            编号
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.Control">
      <summary>
            任务关联的控件对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.StartTime">
      <summary>
            启动时刻
            </summary>
    </member>
    <member name="P:DCSoft.Common.BackgroundTask.UserValue">
      <summary>
            用户状态数据
            </summary>
    </member>
    <member name="T:DCSoft.Common.BinaryHelper">
      <summary>
            二进制数据处理的例程
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.GetMD5(System.Byte[])">
      <summary>
            获得指定数据的MD5编码
            </summary>
      <param name="bs">字节数组</param>
      <returns>获得的MD5编码</returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.GetMD5(System.Byte[],System.Int32,System.Int32)">
      <summary>
            获得指定数据的MD5编码
            </summary>
      <param name="bs">字节数组</param>
      <param name="StartIndex">开始区域的序号</param>
      <param name="Length">区域的长度</param>
      <returns>获得的MD5编码</returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.ByteRound(System.Byte[],System.Int32)">
      <summary>
            对字节数组整体进行循环移位操作
            </summary>
      <param name="bs">字节数组</param>
      <param name="Step">移位量</param>
      <returns>处理后的数据值</returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.XORBytes(System.Byte[],System.Byte)">
      <summary>
            对字节数组进行异或操作
            </summary>
      <param name="bs">字节数组</param>
      <param name="Key">异或操作键值</param>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.Equals(System.Byte[],System.Byte[])">
      <summary>
            比较两个字节数组内容是否一致
            </summary>
      <param name="bs1">字节数组1</param>
      <param name="bs2">字节数组2</param>
      <returns>两个字节数组内容是否一致</returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.Concat(System.Byte[],System.Byte[])">
      <summary>
            合并两个字节数组为一个字节数组
            </summary>
      <param name="bs1">字节数组1</param>
      <param name="bs2">字节数组2</param>
      <returns>合并后的字节数组</returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.IndexOf(System.Byte[],System.Byte[])">
      <summary>
            搜索子字节数组
            </summary>
      <param name="bigArray">
      </param>
      <param name="smallArray">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.BinaryHelper.memcmp(System.Byte[],System.Byte[],System.IntPtr)">
      <summary>
            memcmp API
            </summary>
      <param name="b1">字节数组1</param>
      <param name="b2">字节数组2</param>
      <returns>如果两个数组相同，返回0；如果数组1小于数组2，返回小于0的值；如果数组1大于数组2，返回大于0的值。</returns>
    </member>
    <member name="T:DCSoft.Common.ByteBuilder">
      <summary>
            字节数据创建器
            </summary>
    </member>
    <member name="P:DCSoft.Common.ByteBuilder.Length">
      <summary>
            内容长度
            </summary>
    </member>
    <member name="T:DCSoft.Common.CellIndex">
      <summary>
            单元格序号对象
            </summary>
      <remarks>本对象用于管理类似Excel单元格序号的信息,
            位置字符串前面是一个以上连续的字母,后面是一个以上连续的数字字符,
            字母部分表示列号,而数字部分表示行号,比如字符串"B1"表示第1行第2列,
            本对象的行号和列号都是从1开始计数的。
            编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.CellIndex.#ctor">
      <summary>
            无作为的初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.CellIndex.#ctor(System.Int32,System.Int32)">
      <summary>
            初始化对象并设置行号和列号
            </summary>
      <param name="vRowIndex">行号</param>
      <param name="vColIndex">列号</param>
    </member>
    <member name="M:DCSoft.Common.CellIndex.#ctor(System.String)">
      <summary>
            初始化对象并设置位置字符串
            </summary>
      <param name="vCellIndex">位置字符串</param>
    </member>
    <member name="M:DCSoft.Common.CellIndex.Contains(System.Int32,System.Int32)">
      <summary>
            判断指定的位置是否包含在本对象定义的区域中
            </summary>
      <param name="row">行号</param>
      <param name="col">列号</param>
      <returns>是否在本对象定义的区域中</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.ToString">
      <summary>
            已重载:返回位置字符串
            </summary>
      <returns>位置字符串</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.CompareTo(System.Object)">
      <summary>
            进行对象比较
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.IsCellIndex(System.String)">
      <summary>
            判断一个字符串是否是合法的表示区间的位置字符串，比如“A1”、“A1:C12”就符合这种格式。
            </summary>
      <param name="cellIndex">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.GetCellIndex(System.Int32,System.Int32)">
      <summary>
            根据从1开始计算的行号和列号获得位置字符串,行列号从1开始
            </summary>
      <param name="RowIndex">从1开始计算的行号</param>
      <param name="ColIndex">从1开始计算的列号</param>
      <returns>位置字符串</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.IsSimpleCellIndex(System.String)">
      <summary>
            判断一个字符串是否是合法的位置字符串，比如“B12”就符合这种格式。
            </summary>
      <remarks>合法的字符串只能包含字母和数字,分为两个部分,前部分为连续的字母,
            后部分为连续的数字,字母字符个数不得超过3个</remarks>
      <param name="CellIndex">字符串</param>
      <returns>若字符串为合法的位置字符串则返回true,否则返回false</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.GetColWord(System.Int32)">
      <summary>
            将从1开始计算的列号转换为列字符串
            </summary>
      <param name="ColIndex">列号</param>
      <returns>列字符串</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.GetRowIndex(System.String)">
      <summary>
            获得位置字符串表示的从1开始计算的行号
            </summary>
      <param name="CellIndex">位置字符串</param>
      <returns>行号</returns>
    </member>
    <member name="M:DCSoft.Common.CellIndex.GetColIndex(System.String)">
      <summary>
            获得位置字符串表示的从1开始计算的列号
            </summary>
      <param name="CellIndex">位置字符串</param>
      <returns>列号</returns>
    </member>
    <member name="P:DCSoft.Common.CellIndex.TargetTableName">
      <summary>
            目标表格名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.RowIndex">
      <summary>
            从1开始的行号
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.ColIndex">
      <summary>
            从1开始的列号
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.Width">
      <summary>
            区间宽度
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.Height">
      <summary>
            区间高度
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.CellIndexString">
      <summary>
            位置字符串，比如“A12”或“A12:B16”。
            </summary>
    </member>
    <member name="P:DCSoft.Common.CellIndex.RangeStyle">
      <summary>
            是否是区间样式得单元格坐标方式。
            </summary>
      <remarks>
            比如以“A12”初始化对象或设置CellIndexString属性值时本属性为false，
            以“A12:B18”初始化对象或设置CellIndexString属性值时本属性为true,
            注意以“A12:A12”初始化对象或设置CellIndexStrings属性值时虽然对象的
            Width和Height属性值为0，只包括一个单元格，但本属性值仍然为true。
            </remarks>
    </member>
    <member name="T:DCSoft.Common.ClientReportInfoNew">
      <summary>
            客户端报告信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.ClientReportInfoNew.Attributes">
      <summary>
            属性列表
            </summary>
    </member>
    <member name="F:DCSoft.Common.ClientReportInfoNew.Licenses">
      <summary>
            授权信息列表
            </summary>
    </member>
    <member name="F:DCSoft.Common.ClientReportInfoNew.Assemblies">
      <summary>
            程序集信息
            </summary>
    </member>
    <member name="M:DCSoft.Common.ClientReportInfoNew.CurrentUICultureInfo">
      <summary>
            获得当前UI线程的区域信息对象
            </summary>
      <returns>区域信息对象</returns>
    </member>
    <member name="M:DCSoft.Common.ClientReportInfoNew.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.ClientReportInfoNew.AddAttribute(System.String,System.String)">
      <summary>
            添加自定义属性
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Common.ClientReportInfoNew.SendCrossThread(System.String)">
      <summary>
            跨线程的发送数据
            </summary>
      <param name="serverAddress">服务器地址</param>
    </member>
    <member name="M:DCSoft.Common.ClientReportInfoNew.Send(System.String)">
      <summary>
            发送数据
            </summary>
      <param name="serverAddress">服务器地址</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Common.ValueValidateStyle">
      <summary>
            文本验证样式对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.ValueValidateStyle.NullDateTime">
      <summary>
            表示为空的日期数值
            </summary>
    </member>
    <member name="M:DCSoft.Common.ValueValidateStyle.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.ValueValidateStyle.ToString">
      <summary>
            返回表示对象的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="M:DCSoft.Common.ValueValidateStyle.ToStyleString">
      <summary>
            返回style样式的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="M:DCSoft.Common.ValueValidateStyle.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Common.ValueValidateStyle.DCWriteString">
      <summary>
            对象转换为一个包含数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.Level">
      <summary>
            校验等级
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.ValueName">
      <summary>
            数据的名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.Required">
      <summary>
            必填数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.ValueType">
      <summary>
            数值类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.BinaryLength">
      <summary>
            进行的是二进制长度判断
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.MaxLength">
      <summary>
            最大文本长度
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.MinLength">
      <summary>
            最小文本长度
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.CheckMaxValue">
      <summary>
            检查数值或者日期值的最大值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.CheckMinValue">
      <summary>
            检查数值或者日期值的最小值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.MaxValue">
      <summary>
            数值最大值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.MinValue">
      <summary>
            数值最小值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.CheckDecimalDigits">
      <summary>
            是否需要判断小数位数
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.MaxDecimalDigits">
      <summary>
            小数最大位数
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.DateTimeMaxValue">
      <summary>
            最大时间日期值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.DateTimeMinValue">
      <summary>
            最小时间日期值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.Range">
      <summary>
            数据取值范围
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.RegExpression">
      <summary>
            正则表达式文字
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.IncludeKeywords">
      <summary>
            允许包含的关键字，各个关键字之间用英文逗号分开。
            </summary>
      <remarks>
            如果内容为某个允许包含的关键字，则无需做其他验证项而验证通过。
            </remarks>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.ExcludeKeywords">
      <summary>
            排除关键字
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.CustomMessage">
      <summary>
            自定义提示信息
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.ContentVersion">
      <summary>
            进行数据校验时的相关的内容版本号
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.IsEmpty">
      <summary>
            对象没有任何有效设置
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.Message">
      <summary>
            验证结果
            </summary>
    </member>
    <member name="P:DCSoft.Common.ValueValidateStyle.RequiredInvalidateFlag">
      <summary>
            由于必填项而导致的数据校验无效的标记
            </summary>
    </member>
    <member name="T:DCSoft.Common.IValueValidateStyle">
      <summary>ValueValidateStyle 的COM接口</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.BinaryLength">
      <summary>属性BinaryLength</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.CheckDecimalDigits">
      <summary>属性CheckDecimalDigits</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.CheckMaxValue">
      <summary>属性CheckMaxValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.CheckMinValue">
      <summary>属性CheckMinValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.ContentVersion">
      <summary>属性ContentVersion</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.CustomMessage">
      <summary>属性CustomMessage</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.DateTimeMaxValue">
      <summary>属性DateTimeMaxValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.DateTimeMinValue">
      <summary>属性DateTimeMinValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.ExcludeKeywords">
      <summary>属性ExcludeKeywords</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.IncludeKeywords">
      <summary>属性IncludeKeywords</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.Level">
      <summary>属性Level</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.MaxDecimalDigits">
      <summary>属性MaxDecimalDigits</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.MaxLength">
      <summary>属性MaxLength</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.MaxValue">
      <summary>属性MaxValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.Message">
      <summary>属性Message</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.MinLength">
      <summary>属性MinLength</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.MinValue">
      <summary>属性MinValue</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.Range">
      <summary>属性Range</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.RegExpression">
      <summary>属性RegExpression</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.Required">
      <summary>属性Required</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.ValueName">
      <summary>属性ValueName</summary>
    </member>
    <member name="P:DCSoft.Common.IValueValidateStyle.ValueType">
      <summary>属性ValueType</summary>
    </member>
    <member name="T:DCSoft.Common.CustomProperty">
      <summary>
      </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.CustomProperty.GetUIString">
      <summary>
            获得UI字符串值。
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.CustomProperty.EditorTypeName">
      <summary>
            属性值编辑器类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.CustomPropertyCollection.Tag">
      <summary>
            附加数据
            </summary>
    </member>
    <member name="T:DCSoft.Common.DateTimeSynchro">
      <summary>
            日期时间同步器
            </summary>
      <remarks>
            本对象用于同步时间而不修改本地计算机时钟
            </remarks>
    </member>
    <member name="M:DCSoft.Common.DateTimeSynchro.Synch(System.DateTime)">
      <summary>
            同步时间
            </summary>
      <param name="serverTime">服务器提供的当前基准时间</param>
    </member>
    <member name="M:DCSoft.Common.DateTimeSynchro.GetNow">
      <summary>
            获得当前时刻
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.DateTimeSynchro.SynchroFlag">
      <summary>
            时间已经同步标记
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCAEventArgs">
      <summary>
            签名事件参数
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCAEventArgs._Attributes">
      <summary>
            自定义属性列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCAEventArgs.#ctor(System.Byte[],System.Windows.Forms.Control,DCSoft.Common.DCNameValueList)">
      <summary>
            初始化对象
            </summary>
      <param name="inputContent">要签名的内容</param>
      <param name="input">签名输入信息</param>
      <param name="info">签名信息对象</param>
      <param name="parent">弹出对话框使用的父窗体</param>
      <param name="attributes">属性</param>
    </member>
    <member name="M:DCSoft.Common.DCCAEventArgs.TryFromBase64String(System.String)">
      <summary>
            将BASE64字符串试图转换为字节数组，若转换失败则返回空。
            </summary>
      <param name="base64">BASE64字符串</param>
      <returns>转换后的字节数组</returns>
    </member>
    <member name="M:DCSoft.Common.DCCAEventArgs.GetAttribute(System.String)">
      <summary>
            获得属性值
            </summary>
      <param name="name">属性名</param>
      <returns>属性值</returns>
    </member>
    <member name="M:DCSoft.Common.DCCAEventArgs.SetAttribute(System.String,System.String)">
      <summary>
            设置属性值
            </summary>
      <param name="name">属性名</param>
      <param name="Value">属性值</param>
    </member>
    <member name="M:DCSoft.Common.DCCAEventArgs.CloneInputContent">
      <summary>
            复制要签名的数据内容
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.PupupForm">
      <summary>
            显示弹出窗口
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.SignMode">
      <summary>
            签名模式
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ProviderName">
      <summary>
            签名提供者名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.Parent">
      <summary>
            显示用户界面时的父窗体对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ServerIP">
      <summary>
            服务器IP地址
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ServerPort">
      <summary>
            服务器端口号
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.InputContent">
      <summary>
            要签名的数据内容
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.OutputContent">
      <summary>
            签名输出的数据内容
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.UserID">
      <summary>
            用户ID
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.UserName">
      <summary>
            签名的用户名
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ResultTime">
      <summary>
            签名时间
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ClientName">
      <summary>
            签名的客户端名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ResultTooltip">
      <summary>
            输出的提示文本
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAEventArgs.ErrorMessage">
      <summary>
            相关的错误信息
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCAProvider">
      <summary>
            CA功能提供者对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.SetDefaultProvider(DCSoft.Common.DCCAProvider)">
      <summary>
            设置默认的CA功能提供者对象
            </summary>
      <param name="p">对象</param>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.Register(DCSoft.Common.DCCAProvider)">
      <summary>
            注册CA功能提供者对象
            </summary>
      <param name="provider">提供者对象</param>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.SupoortAsyncValidate">
      <summary>
            判断是否支持异步验证
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.Validate(DCSoft.Common.DCCAEventArgs)">
      <summary>
            检查签名是否有效
            </summary>
      <param name="args">参数对象</param>
      <returns>签名是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.Sign(DCSoft.Common.DCCAEventArgs)">
      <summary>
            执行签名操作
            </summary>
      <param name="args">参数对象</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.DCCAProvider.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAProvider.DefaultProvider">
      <summary>
            默认CA功能提供者
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCAProvider.Name">
      <summary>
            提供者名称
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCASignMode">
      <summary>
            CA签名模式
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCASignMode.Default">
      <summary>
            默认签名模式
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCASignMode.Normal">
      <summary>
            普通K宝签名模式
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCASignMode.SignHand">
      <summary>
            手写签名模式
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCStringCompareResultList">
      <summary>
            字符串精确比较结果
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCStringCompareResultList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCStringCompareResultList.CompareString(System.String,System.String)">
      <summary>
            比较字符串
            </summary>
      <param name="txt1">字符串1</param>
      <param name="txt2">字符串2</param>
    </member>
    <member name="M:DCSoft.Common.DCStringCompareResultList.ConsoleDebugWrite">
      <summary>
            输出调试文本
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCStringCompareResultList.Text1">
      <summary>
            比较文本1
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCStringCompareResultList.Text2">
      <summary>
            比较文本2
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCompareResultType">
      <summary>
            对比结果类型
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCompareResultType.New">
      <summary>
            新增区域
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCompareResultType.Deleted">
      <summary>
            删除的区域
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCompareResultType.Same">
      <summary>
            未变区域
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCompareResult">
      <summary>
            对比结果信息
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCompareResult.#ctor(System.Int32,System.Int32,DCSoft.Common.DCCompareResultType)">
      <summary>
            初始化对象
            </summary>
      <param name="startIndex">开始位置</param>
      <param name="length">长度</param>
      <param name="type">类型</param>
    </member>
    <member name="M:DCSoft.Common.DCCompareResult.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="T:DCSoft.Common.DCCompareResultList`1">
      <summary>
            对比信息列表
            </summary>
      <typeparam name="T">要对比的对象类型</typeparam>
    </member>
    <member name="T:DCSoft.Common.DCCompareResultList`1.SameZoneInfo">
      <summary>
            相同区域信息对象
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCCompareResultList`1.SameZoneInfoList">
      <summary>
            相同区域信息列表
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCCompareResultList`1._SameZones">
      <summary>
            内容相同的区域信息列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.ClearData">
      <summary>
            清空数据
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.AddPreserveZone(System.Int32,System.Int32)">
      <summary>
            添加保留区域
            </summary>
      <param name="startIndex">
      </param>
      <param name="len">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.GetValueHashCode">
      <summary>
            获得对比信息的哈希值
            </summary>
      <returns>哈希值</returns>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.Compare(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`0})">
      <summary>
            执行精确对比
            </summary>
      <param name="oldList">数组1</param>
      <param name="newList">数组2</param>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.IsTooManyPieces(System.Collections.Generic.IList{`0},System.Collections.Generic.IList{`0})">
      <summary>
            判断比较结果是否太过碎片化了。
            </summary>
      <param name="oldList">
      </param>
      <param name="newList">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.AddNewPart(System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
      <summary>
            添加新增区域信息
            </summary>
      <param name="newList">
      </param>
      <param name="startIndex">
      </param>
      <param name="length">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.AddDeletePart(System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
      <summary>
            添加删除区域信息
            </summary>
      <param name="oldList">
      </param>
      <param name="startIndex">
      </param>
      <param name="length">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCCompareResultList`1.AddSamePart(System.Collections.Generic.IList{`0},System.Int32,System.Collections.Generic.IList{`0},System.Int32,System.Int32)">
      <summary>
            添加相同的区域
            </summary>
      <param name="oldList">旧元素列表</param>
      <param name="oldStartIndex">旧元素列表中的序号</param>
      <param name="newList">新元素列表</param>
      <param name="newStartIndex">新元素列表中的序号</param>
      <param name="length">长度</param>
      <returns>添加的信息对象</returns>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.NumToFixSameRate">
      <summary>
            计算相同比率时的修正值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.TotalValues">
      <summary>
            总的对象列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.TotalDifferenceCount">
      <summary>
            总的不同之处的个数
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.PreserveSameZones">
      <summary>
            是否保留内容相同的区域信息列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.LastTickSpan">
      <summary>
            最后一次对比操作消耗的毫秒数
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.Handled">
      <summary>
            是否执行了处理了。
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCCompareResultList`1.WholeCompare">
      <summary>
            整体进行比较
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCDescriptionHelper">
      <summary>
            类型成员描述信息帮助类型
            </summary>
      <remarks>袁永福到此一游</remarks>
    </member>
    <member name="F:DCSoft.Common.DCDescriptionHelper.DescriptionEndFix">
      <summary>
            说明后缀
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionHelper.GetDescription(System.Type,System.String)">
      <summary>
            获得成员说明
            </summary>
      <param name="type">类型</param>
      <param name="memberName">成员名称</param>
      <returns>获得的成员说明</returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionHelper.GetDisplayName(System.Type,System.String)">
      <summary>
            获得成员说明
            </summary>
      <param name="type">类型</param>
      <param name="memberName">成员名称</param>
      <returns>获得的成员说明</returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionHelper.FixName(System.String)">
      <summary>
            修正名称
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionHelper.LoadResource(System.Reflection.Assembly,System.String)">
      <summary>
            加载资源
            </summary>
      <param name="asm">
      </param>
      <param name="resourceName">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionHelper.LoadFromAssembly(System.Reflection.Assembly)">
      <summary>
            收集说明属性使用的字符串名称
            </summary>
      <param name="asm">程序集对象</param>
      <returns>字符串名称列表</returns>
    </member>
    <member name="T:DCSoft.Common.DCDisplayNameAttribute">
      <summary>
            显示名称特性
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCDisplayNameAttribute.#ctor(System.Type,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="type">类型</param>
      <param name="memberName">成员名称</param>
    </member>
    <member name="P:DCSoft.Common.DCDisplayNameAttribute.ResourceItemName">
      <summary>
            内部的名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDisplayNameAttribute.DisplayName">
      <summary>
            获得的显示名称
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCDescriptionAttribute">
      <summary>
            成员说明特性
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionAttribute.#ctor(System.Type,System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="type">类型</param>
      <param name="memberName">成员名称</param>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionAttribute.ShowMemberName">
      <summary>
            显示成员名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionAttribute.CheckMemberExist">
      <summary>
            检查类型成员是否存在
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionAttribute.ResourceItemName">
      <summary>
            内部的名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionAttribute.Description">
      <summary>
            说明文字
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCDescriptionPropoertyDescriptor">
      <summary>
            支持资源的属性描述对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.#ctor(System.ComponentModel.PropertyDescriptor)">
      <summary>
            初始化对象
            </summary>
      <param name="member">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.AddValueChanged(System.Object,System.EventHandler)">
      <summary>
            添加ValueChanged事件句柄
            </summary>
      <param name="component">
      </param>
      <param name="handler">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.CanResetValue(System.Object)">
      <summary>
            能否重置数值
            </summary>
      <param name="component">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.GetChildProperties(System.Object,System.Attribute[])">
      <summary>
            获得子属性
            </summary>
      <param name="instance">
      </param>
      <param name="filter">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.GetEditor(System.Type)">
      <summary>
            获得数值编辑器
            </summary>
      <param name="editorBaseType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.GetValue(System.Object)">
      <summary>
            获得属性值
            </summary>
      <param name="component">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.OnValueChanged(System.Object,System.EventArgs)">
      <summary>
            触发ValueChanged事件
            </summary>
      <param name="component">
      </param>
      <param name="e">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.RemoveValueChanged(System.Object,System.EventHandler)">
      <summary>
            去除删除数值事件句柄
            </summary>
      <param name="component">
      </param>
      <param name="handler">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.ResetValue(System.Object)">
      <summary>
            重置属性值
            </summary>
      <param name="component">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.SetValue(System.Object,System.Object)">
      <summary>
            设置属性值
            </summary>
      <param name="component">
      </param>
      <param name="value">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCDescriptionPropoertyDescriptor.ShouldSerializeValue(System.Object)">
      <summary>
            是否序列化数值
            </summary>
      <param name="component">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.ShowLocalizationDisplayName">
      <summary>
            是否显示本地化名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.Attributes">
      <summary>
            属性
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.Category">
      <summary>
            分组
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.ComponentType">
      <summary>
            组件类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.Converter">
      <summary>
            属性值转换器
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.DesignTimeOnly">
      <summary>
            运行时属性
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.DisplayName">
      <summary>
            显示的名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.IsBrowsable">
      <summary>
            是否显示
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.IsLocalizable">
      <summary>
            是否本地化
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.IsReadOnly">
      <summary>
            是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCDescriptionPropoertyDescriptor.PropertyType">
      <summary>
            属性值数据类型
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCEnumTypeInfo">
      <summary>
            枚举类型信息对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCEnumTypeInfo._FastValues">
      <summary>
            用于快速定位项目的数组
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCEnumTypeInfo._Values">
      <summary>
            所有项目的数组
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCEnumTypeInfo.GetInstance(System.Type)">
      <summary>
            获得对象实例
            </summary>
      <param name="t">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCEnumTypeInfo.GetName(System.Object)">
      <summary>
            获得枚举值名称
            </summary>
      <param name="v">数值</param>
      <returns>名称</returns>
    </member>
    <member name="P:DCSoft.Common.DCEnumTypeInfo.IsFlag">
      <summary>
            是否为可重叠的标记性的枚举类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCEnumTypeInfo.Description">
      <summary>
            附加的说明
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCEnumItemInfo">
      <summary>
            枚举类型项目信息
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCEnumItemInfo.IntValue">
      <summary>
            整数数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCEnumItemInfo.Value">
      <summary>
            数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCEnumItemInfo.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCInternalAttribute">
      <summary>
            表示内部使用的功能模块的特性。第三方开发者不应该使用该特性附加的功能模块。
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCLocalSettings">
      <summary>
            本地系统设置对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCLocalSettings.GetValue(System.String)">
      <summary>
            获得数值
            </summary>
      <param name="name">名称</param>
      <returns>值</returns>
    </member>
    <member name="M:DCSoft.Common.DCLocalSettings.SetValue(System.String,System.String)">
      <summary>
            设置数值
            </summary>
      <param name="name">名称</param>
      <param name="newValue">值</param>
    </member>
    <member name="M:DCSoft.Common.DCLocalSettings.SetValue(System.String,System.String,System.Int32)">
      <summary>
            设置数值
            </summary>
      <param name="name">名称</param>
      <param name="newValue">值</param>
      <param name="timeOut">超时时间,单位分钟。</param>
    </member>
    <member name="M:DCSoft.Common.DCLocalSettings.Save">
      <summary>
            保存数据 
            </summary>
      <returns>是否完成保存操作</returns>
    </member>
    <member name="T:DCSoft.Common.DCNameValueList">
      <summary>
            名称-值数据列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCNameValueList.GetValue(System.String)">
      <summary>
            获得数值
            </summary>
      <param name="name">数据名称</param>
      <returns>数据内容</returns>
    </member>
    <member name="M:DCSoft.Common.DCNameValueList.SetValue(System.String,System.String)">
      <summary>
            设置数值
            </summary>
      <param name="name">数据名称</param>
      <param name="Value">数值</param>
    </member>
    <member name="M:DCSoft.Common.DCNameValueList.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="T:DCSoft.Common.DCNameValueItem">
      <summary>
            名称-值项目
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCNameValueItem.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="P:DCSoft.Common.DCNameValueItem.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCNameValueItem.Value">
      <summary>
            值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCPropertyValueInfo">
      <summary>
            对象属性值操作信息对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCPropertyValueInfo.GetInfo(System.Type,System.String)">
      <summary>
            获得类型属性访问器。名称不区分大小写。
            </summary>
      <param name="t">类型</param>
      <param name="name">属性名，不区分大小写</param>
      <returns>获得的访问器对象</returns>
    </member>
    <member name="M:DCSoft.Common.DCPropertyValueInfo.GetValue(System.Object)">
      <summary>
            获得属性值
            </summary>
      <param name="instance">对象实例</param>
      <returns>获得的数值</returns>
    </member>
    <member name="T:DCSoft.Common.DCPublishAPIAttribute">
      <summary>
            表示可以对第三方公开的编程接口。南京都昌公司对外的技术支持只负责添加该特性的编程接口，
            没添加该特性的不推荐客户使用。
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCPublishAPIAttribute.#ctor">
      <summary>
            出生对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCPublishAPIAttribute.ApplyToMembers">
      <summary>
            是否应用到类型成员
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCPublishDateAttribute">
      <summary>
            表示发布日期的特性
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="year">年</param>
      <param name="month">月</param>
      <param name="day">日</param>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute.ToString">
      <summary>
            返回日期字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute.Value">
      <summary>
            日期数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute.ValueForCurrentDomain">
      <summary>
            当前程序域中所有加载的程序集中的发布日期数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCPublishDateAttribute迷惑敌人">
      <summary>
            表示发布日期的特性
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute迷惑敌人.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="year">年</param>
      <param name="month">月</param>
      <param name="day">日</param>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute迷惑敌人.ToString">
      <summary>
            返回日期字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute迷惑敌人.Value">
      <summary>
            日期数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute迷惑敌人.ValueForCurrentDomain">
      <summary>
            当前程序域中所有加载的程序集中的发布日期数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCPublishDateAttribute迷惑敌人2">
      <summary>
            表示发布日期的特性
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute迷惑敌人2.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
            初始化对象
            </summary>
      <param name="year">年</param>
      <param name="month">月</param>
      <param name="day">日</param>
    </member>
    <member name="M:DCSoft.Common.DCPublishDateAttribute迷惑敌人2.ToString">
      <summary>
            返回日期字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute迷惑敌人2.Value">
      <summary>
            日期数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCPublishDateAttribute迷惑敌人2.ValueForCurrentDomain">
      <summary>
            当前程序域中所有加载的程序集中的发布日期数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCReflectionHelper">
      <summary>
            反射相关操作
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCReflectionHelper.CompareMethodCompatibility(System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Boolean)">
      <summary>
            比较两个方法的调用是否兼容
            </summary>
      <param name="m1">方法1</param>
      <param name="m2">方法2</param>
      <param name="allowTypeConvert">允许执行类型转换</param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Common.DCResourceManager">
      <summary>
            对字符串资源的一个包装
            </summary>
      <remarks>
            袁永福到此一游 2016-2-25
            </remarks>
    </member>
    <member name="M:DCSoft.Common.DCResourceManager.AddProtectedResourceName(System.String)">
      <summary>
            添加受保护的资源名称
            </summary>
      <param name="name">
      </param>
    </member>
    <member name="M:DCSoft.Common.DCResourceManager.IsProtectedResourceName(System.String)">
      <summary>
            判断是否为受保护的资源名称 
            </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DCResourceManager.SetCustomStringValue(System.String,System.String)">
      <summary>
            设置自定义的字符串资源值
            </summary>
      <param name="name">名称</param>
      <param name="text">值</param>
    </member>
    <member name="M:DCSoft.Common.DCResourceManager.ChangeSourceManager(System.Type)">
      <summary>
            修改字符串资源容器类型
            </summary>
      <param name="resourceContainerType">资源类型</param>
    </member>
    <member name="T:DCSoft.Common.DCRestorer">
      <summary>
            可恢复状态的操作对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCRestorer.SaveState">
      <summary>
            保存状态
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCRestorer.RestoreSate">
      <summary>
            恢复状态
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCRestorer.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCRestorer.Values">
      <summary>
            存储的数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCRestorer.Value">
      <summary>
            数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCSoftAppSettings">
      <summary>
            DCSoft配置文件读取器
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCSoftAppSettings.ThrowException">
      <summary>
            是否抛出异常
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCUserFlagAttribute">
      <summary>
            用户标记的额外数据对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCUserFlagAttribute.#ctor(System.String)">
      <summary>
             初始化对象
            </summary>
      <param name="v">数值</param>
    </member>
    <member name="M:DCSoft.Common.DCUserFlagAttribute.ToString">
      <summary>
            对象数据
            </summary>
      <returns>对象数据</returns>
    </member>
    <member name="P:DCSoft.Common.DCUserFlagAttribute.Value">
      <summary>
            数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCXSDAttribute">
      <summary>
            自定义XSD标记
            </summary>
    </member>
    <member name="M:DCSoft.Common.DCXSDAttribute.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCXSDAttribute.Name">
      <summary>
            名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCXSDAttribute.OutputType">
      <summary>
            输出类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCXSDAttribute.ArrayElementType">
      <summary>
            数组元素类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.DCXSDAttribute.SpecifyType">
      <summary>
            指定数据类型
            </summary>
    </member>
    <member name="T:DCSoft.Common.DCXSDOutputType">
      <summary>
            输出类型
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.Default">
      <summary>
            默认
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.Element">
      <summary>
            元素
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.Attribute">
      <summary>
            属性
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.ID">
      <summary>
            对象唯一编号
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="F:DCSoft.Common.DCXSDOutputType.Ignore">
      <summary>
            忽略掉了，不输出。
            </summary>
    </member>
    <member name="T:DCSoft.Common.DebugHelper">
      <summary>
            调试相关的例程
            </summary>
    </member>
    <member name="M:DCSoft.Common.DebugHelper.DebugTrim(System.String)">
      <summary>
            为调试输出而裁剪字符串
            </summary>
      <param name="msg">字符串文本信息</param>
      <returns>裁剪后的信息</returns>
    </member>
    <member name="M:DCSoft.Common.DebugHelper.ToDebugMessage(System.Object)">
      <summary>
            将对象转换为调试信息
            </summary>
      <param name="instance">对象</param>
      <returns>调试信息</returns>
    </member>
    <member name="M:DCSoft.Common.DebugHelper.ToSingleDebugMessage(System.Object)">
      <summary>
            转换为简单的调试信息
            </summary>
      <param name="v">数值</param>
      <returns>调试信息</returns>
    </member>
    <member name="M:DCSoft.Common.DebugHelper.ListToDebugMessage(System.Collections.IEnumerable,System.String)">
      <summary>
            列表转换为调试信息
            </summary>
      <param name="items">列表</param>
      <param name="propertyName">属性名</param>
      <returns>输出值</returns>
    </member>
    <member name="M:DCSoft.Common.DebugHelper.ListToDebugMessage(System.Collections.IEnumerable)">
      <summary>
            列表转换为调试信息
            </summary>
      <param name="values">列表数值</param>
      <returns>输出字符串</returns>
    </member>
    <member name="T:DCSoft.Common.DebugInstanceCounter">
      <summary>
            调试实例引用的计数器
            </summary>
    </member>
    <member name="P:DCSoft.Common.DebugInstanceCounter.DebugInstanceInfo.Index">
      <summary>
            序号
            </summary>
    </member>
    <member name="P:DCSoft.Common.DebugInstanceCounter.DebugInstanceInfo.CreationTime">
      <summary>
            创建时间
            </summary>
    </member>
    <member name="P:DCSoft.Common.DebugInstanceCounter.DebugInstanceInfo.CreationMessage">
      <summary>
            相关的消息
            </summary>
    </member>
    <member name="P:DCSoft.Common.DebugInstanceCounter.DebugInstanceInfo.CreationStack">
      <summary>
            创建对象的调用堆栈
            </summary>
    </member>
    <member name="M:DCSoft.Common.DebugInstanceCounter.LogCreation(System.Object,System.String)">
      <summary>
            记录对象的创建
            </summary>
      <param name="obj">
      </param>
      <param name="message">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.DebugInstanceCounter.LogFinalize(System.Type,System.Int32,System.String)">
      <summary>
            记录对象的销毁
            </summary>
      <param name="obj">
      </param>
      <param name="message">
      </param>
    </member>
    <member name="P:DCSoft.Common.DebugInstanceCounter.Enabled">
      <summary>
            对象功能是否可用
            </summary>
    </member>
    <member name="T:DCSoft.Common.DelayReference">
      <summary>
            延时引用，获得引用后一段时间后会消失
            </summary>
    </member>
    <member name="P:DCSoft.Common.DelayReference.Value">
      <summary>
            获得数值
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgDCNameValueList.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgDCNameValueList.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Common.dlgDCNameValueList.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:DCSoft.Common.dlgSimpleListBox">
      <summary>
            简单的列表对话框
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgSimpleListBox.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgSimpleListBox.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Common.dlgSimpleListBox.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:DCSoft.Common.dlgEnvironmentInfo">
      <summary>
            运行环境信息对话框
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgEnvironmentInfo.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgEnvironmentInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgEnvironmentInfo.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Common.dlgEnvironmentInfo.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:DCSoft.Common.dlgHyperlinkInfo">
      <summary>
            编辑超链接的对话框
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgHyperlinkInfo.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgHyperlinkInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgHyperlinkInfo.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Common.dlgHyperlinkInfo.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Common.dlgHyperlinkInfo.InputInfo">
      <summary>
            输入的超链接信息对象
            </summary>
    </member>
    <member name="T:DCSoft.Common.dlgSingleProgress">
      <summary>
            简单的后台任务等待对话框
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgSingleProgress.EventDoWork">
      <summary>
            执行任务的委托
            </summary>
    </member>
    <member name="F:DCSoft.Common.dlgSingleProgress.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgSingleProgress.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.dlgSingleProgress.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Common.dlgSingleProgress.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="P:DCSoft.Common.dlgSingleProgress.UserMessage">
      <summary>
            用户提示信息
            </summary>
    </member>
    <member name="P:DCSoft.Common.dlgSingleProgress.DoWorkEventSender">
      <summary>
            执行任务时的发起者
            </summary>
    </member>
    <member name="P:DCSoft.Common.dlgSingleProgress.DoWorkEventArgs">
      <summary>
            执行任务时的参数
            </summary>
    </member>
    <member name="T:DCSoft.Common.EnumHelper">
      <summary>
            枚举类型帮助方法
            </summary>
    </member>
    <member name="M:DCSoft.Common.EnumHelper.GetValueAndDispalyTexts(System.Type)">
      <summary>
            获得某个枚举项目的所有的数值及显示的文本
            </summary>
      <param name="enumType">枚举类型</param>
      <returns>数值和文本组成的数组</returns>
    </member>
    <member name="P:DCSoft.Common.BinaryContentBuffer.MaxSize">
      <summary>
            缓冲区最大字节数
            </summary>
    </member>
    <member name="T:DCSoft.Common.FormatUtils">
      <summary>
            内容格式化输出的函数集
            </summary>
    </member>
    <member name="T:DCSoft.Common.HyperlinkInfo">
      <summary>
            超链接信息
            </summary>
    </member>
    <member name="M:DCSoft.Common.HyperlinkInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.HyperlinkInfo.Clone">
      <summary>
            复制对象
            </summary>
      <returns>复制品</returns>
    </member>
    <member name="M:DCSoft.Common.HyperlinkInfo.ToString">
      <summary>
            返回表示对象的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Common.HyperlinkInfo.Reference">
      <summary>
            链接引用的地址
            </summary>
    </member>
    <member name="P:DCSoft.Common.HyperlinkInfo.Target">
      <summary>
            超链接地址目标。本属性不支持数据源和变量。
            </summary>
      <remarks>
            当报表元素设置了超连接，应用在WEB系统时，报表元素会输出HTML的A标签，此时该标签的href属性值为报表元素的Link属性值，
            而HTML标签的target属性值就是本属性的值。一般可以为"_blank","_media","_parent","_search" ,"_self","_top"。
            </remarks>
    </member>
    <member name="P:DCSoft.Common.HyperlinkInfo.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Common.HyperlinkInfo.IsEmpty">
      <summary>
            判断内容是否为空
            </summary>
    </member>
    <member name="T:DCSoft.Common.HyperlinkInfoTypeConverter">
      <summary>
            超链接的类型转换器
            </summary>
    </member>
    <member name="T:DCSoft.Common.HyperlinkInfoEditor">
      <summary>
            超链接信息编辑器
            </summary>
    </member>
    <member name="M:DCSoft.Common.HyperlinkInfoEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            获得编辑方式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.HyperlinkInfoEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数据
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Common.IHyperlinkInfo">
      <summary>HyperlinkInfo 的COM接口</summary>
    </member>
    <member name="P:DCSoft.Common.IHyperlinkInfo.IsEmpty">
      <summary>属性IsEmpty</summary>
    </member>
    <member name="P:DCSoft.Common.IHyperlinkInfo.Reference">
      <summary>属性Reference</summary>
    </member>
    <member name="P:DCSoft.Common.IHyperlinkInfo.Target">
      <summary>属性Target</summary>
    </member>
    <member name="P:DCSoft.Common.IHyperlinkInfo.Title">
      <summary>
            属性Title
            </summary>
    </member>
    <member name="T:DCSoft.Common.IDList">
      <summary>
            编号列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.IDList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.IDList.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="strIDList">编号列表，各个项目之间用逗号分开</param>
    </member>
    <member name="M:DCSoft.Common.IDList.#ctor(System.String,System.Char)">
      <summary>
            初始化对象
            </summary>
      <param name="strIDList">编号列表，各个项目之间用逗号分开</param>
      <param name="spliter">分割字符</param>
    </member>
    <member name="M:DCSoft.Common.IDList.IndexOf(System.String)">
      <summary>
            获得编号在列表中的序号
            </summary>
      <param name="id">编号值</param>
      <returns>序号</returns>
    </member>
    <member name="M:DCSoft.Common.IDList.Contains(System.String)">
      <summary>
            判断列表中是否包含指定的编号
            </summary>
      <param name="id">编号</param>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Common.IDList.Add(System.String)">
      <summary>
            添加编号
            </summary>
      <param name="id">编号</param>
      <returns>新编号在列表中的序号</returns>
    </member>
    <member name="M:DCSoft.Common.IDList.Remove(System.String)">
      <summary>
            删除编号
            </summary>
      <param name="id">要删除的编号</param>
    </member>
    <member name="M:DCSoft.Common.IDList.Parse(System.String,System.Char,System.Char,System.Char)">
      <summary>
            解析编号列表字符串
            </summary>
      <param name="Value">要解析的字符串</param>
      <param name="splitChar">拆分字符</param>
      <param name="prefixChar">编号前缀字符</param>
      <param name="endfixChar">编号后缀字符</param>
    </member>
    <member name="M:DCSoft.Common.IDList.ToString(System.Char)">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <param name="splitChar">分隔字符</param>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Common.IDList.ToString(System.Char,System.Char,System.Char)">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <param name="splitChar">分隔字符</param>
      <param name="prefixChar">编号前缀字符</param>
      <param name="endfixChar">编号后缀字符</param>
      <returns>字符串</returns>
    </member>
    <member name="M:DCSoft.Common.IDList.ToString">
      <summary>
            返回表示对象数据的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="P:DCSoft.Common.IDList.Values">
      <summary>
            数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.IDList.IgnoreCase">
      <summary>
            是否忽略大小写
            </summary>
    </member>
    <member name="P:DCSoft.Common.IDList.Count">
      <summary>
            编号个数
            </summary>
    </member>
    <member name="P:DCSoft.Common.IDList.Item(System.Int32)">
      <summary>
            获得指定序号处的编号值
            </summary>
      <param name="index">序号</param>
      <returns>编号值</returns>
    </member>
    <member name="T:DCSoft.Common.ImageHelper">
      <summary>
            图片对象帮助模块
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.GetJpegDataURLScheme(System.Drawing.Image)">
      <summary>
            获得JPEG格式的Data URL Scheme字符串
            </summary>
      <param name="img">图片对象</param>
      <returns>获得的字符串对象</returns>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.LoadImageFileUseBuffer(System.String)">
      <summary>
            使用缓存的加载图片文件
            </summary>
      <param name="fileName">文件名</param>
      <returns>图片对象</returns>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.GetContentType(System.String)">
      <summary>
            获得文档类型
            </summary>
      <param name="extensition">扩展名</param>
      <returns>文档类型</returns>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.GetFileExtersion(System.Drawing.Imaging.ImageFormat)">
      <summary>
            获得文件扩展名
            </summary>
      <param name="format">图片格式</param>
      <returns>文件扩展名</returns>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.GetFormatByFileName(System.String)">
      <summary>
            根据文件名获得图片格式
            </summary>
      <param name="fileName">文件名</param>
      <returns>图片格式</returns>
    </member>
    <member name="M:DCSoft.Common.ImageHelper.LoadImageBase64UseBuffer(System.String)">
      <summary>
            使用缓存的加载图片
            </summary>
      <param name="base64String">包含图片的BASE64字符串</param>
      <returns>加载的图片</returns>
    </member>
    <member name="T:DCSoft.Common.IDCStringSerializable">
      <summary>
            能将对象数据完整的转换为一个字符串
            </summary>
    </member>
    <member name="M:DCSoft.Common.IDCStringSerializable.DCWriteString">
      <summary>
            将对象序列化为字符串
            </summary>
      <returns>生成的字符串</returns>
    </member>
    <member name="M:DCSoft.Common.IDCStringSerializable.DCReadString(System.String)">
      <summary>
            从字符串反序列化对象数据
            </summary>
      <param name="text">字符串</param>
    </member>
    <member name="T:DCSoft.Common.InnerVoidEventHandler">
      <summary>
            内部的无参数委托。
            </summary>
    </member>
    <member name="T:DCSoft.Common.Int32Styles">
      <summary>
            使用一个整型数据保存多个样式的模块
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.Int32Styles.intStyle">
      <summary>
            保存参数的整数数值
            </summary>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.SetStyle(System.Int32,System.Int32,System.Boolean)">
      <summary>
            设置指定数值的样式
            </summary>
      <param name="intValue">原始数据</param>
      <param name="MaskFlag">掩码</param>
      <param name="bolSet">是否设置</param>
      <returns>处理后的数据</returns>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.GetStyle(System.Int32,System.Int32)">
      <summary>
            获得样式
            </summary>
      <param name="intValue">原始数据</param>
      <param name="MaskFlag">掩码</param>
      <returns>是否设置了样式</returns>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.#ctor">
      <summary>
            无作为的初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.#ctor(System.Int32)">
      <summary>
            设置数值的初始化对象
            </summary>
      <param name="vStyle">数值</param>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.SetStyle(System.Int32,System.Boolean)">
      <summary>
            设置指定的样式属性
            </summary>
      <param name="MaskFlag">样式掩码</param>
      <param name="bolSet">是否设置该样式属性</param>
    </member>
    <member name="M:DCSoft.Common.Int32Styles.GetStyle(System.Int32)">
      <summary>
            获得指定的样式属性
            </summary>
      <param name="MaskFlag">样式掩码</param>
      <returns>是否设置了该样式属性</returns>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Style">
      <summary>
            保存参数的整数数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Item(System.Int32)">
      <summary>
            获得或设置指定的样式
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag0">
      <summary>
            样式0
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag1">
      <summary>
            样式1
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag2">
      <summary>
            样式2
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag3">
      <summary>
            样式3
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag4">
      <summary>
            样式4
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag5">
      <summary>
            样式5
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag6">
      <summary>
            样式6
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag7">
      <summary>
            样式7
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag8">
      <summary>
            样式8
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag9">
      <summary>
            样式9
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag10">
      <summary>
            样式10
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag11">
      <summary>
            样式11
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag12">
      <summary>
            样式12
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag13">
      <summary>
            样式13
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag14">
      <summary>
            样式14
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag15">
      <summary>
            样式15
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag16">
      <summary>
            样式16
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag17">
      <summary>
            样式17
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag18">
      <summary>
            样式18
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag19">
      <summary>
            样式19
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag20">
      <summary>
            样式20
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag21">
      <summary>
            样式21
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag22">
      <summary>
            样式22
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag23">
      <summary>
            样式23
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag24">
      <summary>
            样式24
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag25">
      <summary>
            样式25
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag26">
      <summary>
            样式26
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag27">
      <summary>
            样式27
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag28">
      <summary>
            样式28
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag29">
      <summary>
            样式29
            </summary>
    </member>
    <member name="P:DCSoft.Common.Int32Styles.Flag30">
      <summary>
            样式30
            </summary>
    </member>
    <member name="T:DCSoft.Common.ListReverseEnumrable">
      <summary>
            列表的反向遍历器
            </summary>
    </member>
    <member name="T:DCSoft.Common.LocalDataBufferController">
      <summary>
            本地缓存数据控制器
            </summary>
    </member>
    <member name="M:DCSoft.Common.LocalDataBufferController.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.LocalDataBufferController.ReadFromBuffer(System.String,System.Type,System.Int32)">
      <summary>
            从缓存文件中读取对象数据
            </summary>
      <param name="name">缓存的名称</param>
      <param name="objectType">对象数据类型</param>
      <param name="version">最新版本号</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Common.LocalDataBufferController.SaveToBuffer(System.String,System.Object,System.Int32,System.Int32)">
      <summary>
            保存对象数据到缓存区中
            </summary>
      <param name="name">名称</param>
      <param name="instance">对象实例</param>
      <param name="version">版本号</param>
      <param name="timeoutDays">超时天数</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.LocalDataBufferController.ClearBuffer">
      <summary>
            清空缓存区
            </summary>
    </member>
    <member name="M:DCSoft.Common.LocalDataBufferController.ClearBufferItem(System.String)">
      <summary>
            删除指定的缓冲的信息
            </summary>
      <param name="name">名称</param>
      <returns>操作是否修改了缓冲区</returns>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferController.AppName">
      <summary>
            应用系统名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferController.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferController.DataDirectory">
      <summary>
            保存缓存文件的目录
            </summary>
    </member>
    <member name="T:DCSoft.Common.LocalDataBufferItem">
      <summary>
            本地缓存信息对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferItem.Name">
      <summary>
            数据名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferItem.FileName">
      <summary>
            文件名
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferItem.Version">
      <summary>
            数据版本号
            </summary>
    </member>
    <member name="P:DCSoft.Common.LocalDataBufferItem.TimeoutDays">
      <summary>
            超时天数
            </summary>
    </member>
    <member name="T:DCSoft.Common.MeasureConvert">
      <summary>
            DCWriter内部使用。度量转换模块,本对象不可实例化。
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.MeasureConvert.HundredthsInchToCentimeter(System.Double)">
      <summary>
            将百分之一英寸转换为厘米值
            </summary>
      <param name="vValue">百分之一英寸值</param>
      <returns>厘米值</returns>
    </member>
    <member name="M:DCSoft.Common.MeasureConvert.CentimeterToHundredthsInch(System.String,System.Double)">
      <summary>
            将毫米值转换为百分之一英寸值
            </summary>
      <param name="vValue">毫米值字符串</param>
      <param name="defaultValue">如果转换失败则返回的默认值</param>
      <returns>百分之一英寸值</returns>
    </member>
    <member name="T:DCSoft.Common.MHTFileBuilder">
      <summary>
            MHT文件生成器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.#ctor(System.IO.TextWriter)">
      <summary>
            初始化对象
            </summary>
      <param name="writer">文本书写器</param>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.Write">
      <summary>
            输出MHT文件
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtHeader(DCSoft.Common.MHTFileItem)">
      <summary> 
            appends the Mht header, which includes the root HTML 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.GetDateTimeString">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtFooter">
      <summary>
      </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtLine(System.String)">
      <summary> 
            append a single line, with trailing CRLF, to our MhtBuilder 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtLine">
      <summary>
      </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtBoundary">
      <summary> 
            appends a boundary marker to our MhtBuilder 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtFile(DCSoft.Common.MHTFileItem)">
      <summary> 
            Appends a downloaded external file to our MhtBuilder 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtTextFile(DCSoft.Common.MHTFileItem)">
      <summary> 
            Appends a downloaded external text file to our MhtBuilder using Quoted-Printable encoding 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.AppendMhtBinaryFile(DCSoft.Common.MHTFileItem)">
      <summary> 
            Appends a downloaded external binary file to our MhtBuilder using Base64 encoding 
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileBuilder.QuotedPrintableEncode(System.String,System.Text.Encoding)">
      <summary>
      </summary>
      <param name="s">
      </param>
      <param name="e">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.MHTFileBuilder.ContentEncoding">
      <summary>
            内容编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileBuilder.BaseUrl">
      <summary>
            HTML文件的基础路径
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileBuilder.Title">
      <summary>
            标题
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileBuilder.Files">
      <summary>
            附加的文件列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileBuilder.MainHtmlText">
      <summary>
            主文档的HTML代码
            </summary>
    </member>
    <member name="T:DCSoft.Common.MHTFileItem">
      <summary>
            MHT文件项目
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileItem.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.MHTFileItem.ToString">
      <summary>
            返回表示内容的字符串
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.Bytes">
      <summary>
            文件二进制内容
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.IsBinary">
      <summary>
            是否是二进制格式
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.ContentType">
      <summary>
            文件内容样式
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.Url">
      <summary>
            文件地址
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.WasAppended">
      <summary>
            是否已经被添加了
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.TextEncoding">
      <summary>
            编码格式
            </summary>
    </member>
    <member name="P:DCSoft.Common.MHTFileItem.HtmlTitle">
      <summary>
            文件标题
            </summary>
    </member>
    <member name="T:DCSoft.Common.PropertyAccesser">
      <summary>
            属性访问器
            </summary>
    </member>
    <member name="M:DCSoft.Common.PropertyAccesser.SetStaticFieldValue(System.Reflection.Assembly,System.String,System.Object)">
      <summary>
            设置类型的静态字段值
            </summary>
      <param name="asm">程序集</param>
      <param name="fullPath">字段全路径名</param>
      <param name="newValue">新数值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Common.ResourceStringsContainer">
      <summary>
            系统资源字符串选项
            </summary>
    </member>
    <member name="M:DCSoft.Common.ResourceStringsContainer.GenerateSourceCode(System.String,System.String,System.Type[],System.Boolean)">
      <summary>
            创建源代码
            </summary>
      <param name="nsName">命名空间</param>
      <param name="typeName">类型名称</param>
      <param name="stringsTypes">字符串资源对象</param>
      <param name="contentOnly">只输出内容源代码</param>
      <returns>生成的C#源代码</returns>
    </member>
    <member name="T:DCSoft.Common.SerializableArrayList">
      <summary>
            可以被稳定二进制序列化的数组对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.Snowslide">
      <summary>
            是否启用雪崩。
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.EmptyStringAsNull">
      <summary>
            将空字符串当作NULL来处理。
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.HeaderFlag">
      <summary>
            文件头标记
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.GZipCompress">
      <summary>
            是否采用GZIP压缩
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.XOREncrypt">
      <summary>
            采用XOR加密
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.SpecifyXORKey">
      <summary>
            用户指定的XOR键值
            </summary>
    </member>
    <member name="F:DCSoft.Common.SerializableArrayList.SpecifyRoundStep">
      <summary>
            用户指定的循环位移量
            </summary>
    </member>
    <member name="M:DCSoft.Common.SerializableArrayList.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.SerializableArrayList.#ctor(System.Byte[])">
      <summary>
            初始化对象
            </summary>
      <param name="bs">反序列化用的字节数组</param>
    </member>
    <member name="M:DCSoft.Common.SerializableArrayList.SerializeToBinary">
      <summary>
            序列化数组，本函数和DeserializeArray()搭配使用。
            </summary>
      <returns>获得的二进制数据</returns>
    </member>
    <member name="T:DCSoft.Common.SingleStringCollection">
      <summary>
            字符串集合,该集合不会包含相同的字符串值和空引用
            </summary>
      <remarks>编制 袁永福 2006-1-9</remarks>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.Contains(System.String)">
      <summary>
            集合是否包含指定的字符串
            </summary>
      <param name="strValue">字符串值</param>
      <returns>是否包含</returns>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.Add(System.String)">
      <summary>
            添加字符串值,若已经存在该值则返回-1否则返回新增的元素的序号
            </summary>
      <param name="strValue">字符串值</param>
      <returns>新增元素的序号</returns>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.RemoveBlankString">
      <summary>
            删除所有的空白字符串
            </summary>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.CheckReadonly">
      <summary>
            检查对象的只读状态
            </summary>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.CheckValue(System.String)">
      <summary>
            检查数据是否可以添加到集合中
            </summary>
      <param name="strValue">字符串数据</param>
      <returns>可否添加到集合中</returns>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.ToArray">
      <summary>
            返回字符串数组
            </summary>
      <returns>字符串数组</returns>
    </member>
    <member name="M:DCSoft.Common.SingleStringCollection.ToString">
      <summary>
            返回该集合中所有的字符串组成的字符串
            </summary>
      <returns>字符串</returns>
    </member>
    <member name="T:DCSoft.Common.StringAnalyseHelper">
      <summary>
            字符串解析通用模块
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.StringAnalyseHelper.GetLines(System.String,System.Boolean)">
      <summary>
            将一个多行文本转换为字符串数组，每行文本为一个数组元素
            </summary>
      <param name="strText">多行文本</param>
      <param name="RemoveBlankLine">是否删除空白行</param>
      <returns>获得的字符串数组</returns>
    </member>
    <member name="T:DCSoft.Common.StringCommon">
      <summary>
            通用的字符串处理静态对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.StringCommon.HasContentChar(System.Text.StringBuilder)">
      <summary>
            判断是否存在非空白=字符
            </summary>
      <param name="str">字符串容器</param>
      <returns>是否存在</returns>
    </member>
    <member name="M:DCSoft.Common.StringCommon.CompressWhiteSpace(System.String)">
      <summary>
            压缩空白字符。将连续的空白字符压缩成一个空格。
            </summary>
      <param name="txt">要处理的字符串</param>
      <returns>处理后的字符串</returns>
    </member>
    <member name="T:DCSoft.Common.StringFormatHelper">
      <summary>
            DCWriter内部使用。字符串格式处理类
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.StringFormatHelper.FormatExt(System.String,System.Object[])">
      <summary>
            增强型的格式化输出，支持按照名称输出属性值
            </summary>
      <param name="format">格式化字符串</param>
      <param name="instances">对象数值</param>
      <returns>输出的文本</returns>
    </member>
    <member name="M:DCSoft.Common.StringFormatHelper.GetLines(System.String)">
      <summary>
            将一个多行字符转化为单行字符组成的字符串
            </summary>
      <param name="strText">多行文本</param>
      <returns>字符串数组</returns>
    </member>
    <member name="M:DCSoft.Common.StringFormatHelper.IsEnglishLetter(System.Char)">
      <summary>
            判断是否是英文字母
            </summary>
      <param name="c">字符</param>
      <returns>是否为英文字母</returns>
    </member>
    <member name="M:DCSoft.Common.StringFormatHelper.GroupFormatString(System.String,System.Int32,System.Int32)">
      <summary>
            格式化字符串，进行分组处理
            </summary>
      <param name="strData">连续的字符串</param>
      <param name="GroupSize">一组编码的字符个数</param>
      <param name="LineGroupCount">每行文本的编码组个数</param>
      <returns>格式化后的字符串</returns>
    </member>
    <member name="T:DCSoft.Common.SubStringReader">
      <summary>
            读取子字符串的对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.SubStringReader.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="vText">要读取的字符串</param>
    </member>
    <member name="M:DCSoft.Common.SubStringReader.ReadWhitespace">
      <summary>
            读取连续的空白字符
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.SubStringReader.ReadToEnd">
      <summary>
            读取所有剩余的文本
            </summary>
      <returns>读取到的文本</returns>
    </member>
    <member name="M:DCSoft.Common.SubStringReader.ReadTo(System.Char)">
      <summary>
            读取指定字符前的子字符串
            </summary>
      <param name="vChar">指定的字符</param>
      <returns>读取到的子字符串</returns>
    </member>
    <member name="T:DCSoft.Common.IVariableProvider">
      <summary>
            字符串变量提供者接口
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.IVariableProvider.Exists(System.String)">
      <summary>
            判断是否存在指定名称的变量
            </summary>
      <param name="Name">变量名称</param>
      <returns>是否存在指定名称的变量</returns>
    </member>
    <member name="M:DCSoft.Common.IVariableProvider.Get(System.String)">
      <summary>
            获得指定名称的变量值
            </summary>
      <param name="Name">变量名称</param>
      <returns>变量值</returns>
    </member>
    <member name="M:DCSoft.Common.IVariableProvider.Set(System.String,System.String)">
      <summary>
            设置指定名称的变量值
            </summary>
      <param name="Name">变量名称</param>
      <param name="Value">变量值</param>
    </member>
    <member name="P:DCSoft.Common.IVariableProvider.AllNames">
      <summary>
            获得所有变量的名称
            </summary>
    </member>
    <member name="T:DCSoft.Common.HashTableVariableProvider">
      <summary>
            使用一个哈希列表来实现的字符串变量提供者对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.HashTableVariableProvider.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.HashTableVariableProvider.#ctor(System.Collections.Hashtable)">
      <summary>
            初始化对象
            </summary>
      <param name="vars">哈希列表对象</param>
    </member>
    <member name="M:DCSoft.Common.HashTableVariableProvider.Set(System.String,System.String)">
      <summary>
            设置变量值
            </summary>
      <param name="Name">变量名称</param>
      <param name="Value">变量值</param>
    </member>
    <member name="M:DCSoft.Common.HashTableVariableProvider.Exists(System.String)">
      <summary>
            判断是否存在指定名称的变量
            </summary>
      <param name="Name">变量名称</param>
      <returns>是否存在指定名称的变量</returns>
    </member>
    <member name="M:DCSoft.Common.HashTableVariableProvider.Get(System.String)">
      <summary>
            获得指定名称的变量值
            </summary>
      <param name="Name">变量名称</param>
      <returns>变量值</returns>
    </member>
    <member name="P:DCSoft.Common.HashTableVariableProvider.Values">
      <summary>
            保存数据的哈希列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.HashTableVariableProvider.AllNames">
      <summary>
            获得所有变量的名称
            </summary>
    </member>
    <member name="T:DCSoft.Common.VariableString">
      <summary>
            内部可嵌入变量域的字符串处理对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.VariableString.#ctor(System.String)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">字符串数据</param>
    </member>
    <member name="M:DCSoft.Common.VariableString.SetVariable(System.String,System.String)">
      <summary>
            设置变量
            </summary>
      <param name="strName">变量名称</param>
      <param name="strValue">变量值</param>
    </member>
    <member name="M:DCSoft.Common.VariableString.GetVariableNames">
      <summary>
            获得字符串中包含的变量名称
            </summary>
      <returns>变量名称组成的字符串数组</returns>
    </member>
    <member name="M:DCSoft.Common.VariableString.Execute">
      <summary>
            执行变量
            </summary>
      <returns>处理后的字符串</returns>
    </member>
    <member name="M:DCSoft.Common.VariableString.Execute(System.Collections.ArrayList)">
      <summary>
            进行变量替换
            </summary>
      <param name="ParameterValues">变量值</param>
      <returns>替换后的结果</returns>
    </member>
    <member name="M:DCSoft.Common.VariableString.Execute(System.String,System.Collections.ArrayList)">
      <summary>
            执行变量
            </summary>
      <param name="txt">原始字符串</param>
      <param name="ParameterValues">保存参数的列表</param>
      <returns>处理后的字符串</returns>
    </member>
    <member name="M:DCSoft.Common.VariableString.AnalyseVariableString(System.String,System.String,System.String)">
      <summary>
            分析一个字符串,根据开始字符串和结束字符串进行分割,并返回分割生成的字符串数组
            这些字符串数组的偶数号元素为开始字符串和结束字符串间的部分
            例如分析字符串"aaa[bbb]ccc"产生字符串数组"aaa","bbb","ccc"
            </summary>
      <param name="strText">供分析的字符串</param>
      <param name="strHead">开始字符串</param>
      <param name="strEnd">结束字符串</param>
      <returns>生成的字符串数组</returns>
    </member>
    <member name="M:DCSoft.Common.VariableString.AnalyseVariableString(System.String,System.String,System.String,System.Boolean)">
      <summary>
            分析一个字符串,根据开始字符串和结束字符串进行分割,并返回分割生成的字符串数组
            这些字符串数组的偶数号元素为开始字符串和结束字符串间的部分
            例如分析字符串"aaa[bbb]ccc"产生字符串数组"aaa","bbb","ccc"
            </summary>
      <param name="strText">供分析的字符串</param>
      <param name="strHead">开始字符串</param>
      <param name="strEnd">结束字符串</param>
      <param name="EnableEmptyItem">允许出现空白项目</param>
      <returns>生成的字符串数组</returns>
    </member>
    <member name="P:DCSoft.Common.VariableString.NamedParameter">
      <summary>
            命名方式的使用参数
            </summary>
    </member>
    <member name="P:DCSoft.Common.VariableString.ParameterNamePrefix">
      <summary>
            参数名称前缀
            </summary>
    </member>
    <member name="P:DCSoft.Common.VariableString.VariablePrefix">
      <summary>
            变量域前缀
            </summary>
    </member>
    <member name="P:DCSoft.Common.VariableString.VariableEndfix">
      <summary>
            变量域后缀
            </summary>
    </member>
    <member name="P:DCSoft.Common.VariableString.Variables">
      <summary>
            变量提供者,默认为一个 HashTableVariableProvider 类型的对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.VariableString.Text">
      <summary>
            字符串数据
            </summary>
    </member>
    <member name="T:DCSoft.Common.WinTaskBarProgressInfo">
      <summary>
            设置WINDOWS任务栏进度的信息对象。
            </summary>
      <remarks>本功能只在windows7及更高版本的windows操作系统中才有效。windows版本号大于等于6.1</remarks>
    </member>
    <member name="F:DCSoft.Common.WinTaskBarProgressInfo._SupportFlag">
      <summary>
            操作系统是否支持本功能标记
            </summary>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.#ctor(System.Windows.Forms.Control,System.Boolean)">
      <summary>
            初始化对象
            </summary>
      <param name="ctl">相关的控件对象</param>
      <param name="supportCrossUIThread">是否支持跨UI线程的操作</param>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.#ctor(System.IntPtr)">
      <summary>
            初始化对象
            </summary>
      <param name="handle">控件句柄</param>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.CheckState">
      <summary>
            检查状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.SetNoProgress">
      <summary>
            设置不忙碌的状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.StartProgress">
      <summary>
            设置为忙碌状态
            </summary>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.SetProgressValue(System.Int32,System.Int32)">
      <summary>
            设置进度值
            </summary>
      <param name="Value">当前数值</param>
      <param name="maximum">最大值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.EndProgress">
      <summary>
            结束忙碌状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.SetError">
      <summary>
            设置为错误状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.SetIndeterminate">
      <summary>
            设置忙碌状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.WinTaskBarProgressInfo.SetPause">
      <summary>
            设置为阻塞状态
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Common.WinTaskBarProgressInfo.Enabled">
      <summary>
            本对象的功能是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Common.WinTaskBarProgressInfo.RuntimeEnabled">
      <summary>
            运行时的是否有效
            </summary>
    </member>
    <member name="T:DCSoft.Common.TestValueGenerator">
      <summary>
            测试数据生成器
            </summary>
    </member>
    <member name="M:DCSoft.Common.TestValueGenerator.GenerateName(System.Boolean)">
      <summary>
            自动生成姓名
            </summary>
      <param name="forMan">生成男性姓名</param>
      <returns>生成的姓名</returns>
    </member>
    <member name="M:DCSoft.Common.TestValueGenerator.Generate(System.String,System.Double,System.Double)">
      <summary>
            生成测试数据
            </summary>
      <param name="name">名称</param>
      <param name="minValue">最大值</param>
      <param name="maxValue">最小值</param>
      <returns>生成的数值</returns>
    </member>
    <member name="P:DCSoft.Common.TestValueGenerator.NoiseRate">
      <summary>
            噪音比率
            </summary>
    </member>
    <member name="P:DCSoft.Common.TestValueGenerator.JumpRate">
      <summary>
            每次跳跃的比率
            </summary>
    </member>
    <member name="T:DCSoft.Common.TextBoxTraceListener">
      <summary>
            基于TextBox的系统调试输出显示器
            </summary>
      <remarks>编制袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.TextBoxTraceListener.#ctor(System.Windows.Forms.TextBox)">
      <summary>
            初始化对象
            </summary>
      <param name="txt">文本框控件</param>
    </member>
    <member name="M:DCSoft.Common.TextBoxTraceListener.Write(System.String)">
      <summary>
            输出一段文本
            </summary>
      <param name="message">
      </param>
    </member>
    <member name="M:DCSoft.Common.TextBoxTraceListener.WriteLine(System.String)">
      <summary>
            输出一段文本加换行
            </summary>
      <param name="message">
      </param>
    </member>
    <member name="P:DCSoft.Common.TextBoxTraceListener.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="P:DCSoft.Common.TextBoxTraceListener.AutoDisable">
      <summary>
            自动根据需要设置为禁止
            </summary>
    </member>
    <member name="P:DCSoft.Common.TextBoxTraceListener.AddTimeStamp">
      <summary>
            是否添加时间戳
            </summary>
    </member>
    <member name="P:DCSoft.Common.TextBoxTraceListener.TimeStampFormat">
      <summary>
            时间戳格式化字符串
            </summary>
    </member>
    <member name="T:DCSoft.Common.TreeNodeEnumerable">
      <summary>
            树状节点枚举器
            </summary>
      <remarks>
            本类型遍历树状结构的所有的节点，能使用foreach()结构来遍历树状结构节点。
            袁永福到此一游
            </remarks>
    </member>
    <member name="T:DCSoft.Common.TreeNodeEnumerable.MyTreeNodeEnumerator">
      <summary>
            树状结构遍历器
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.MyTreeNodeEnumerator.Reset">
      <summary>
            重置状态
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.MyTreeNodeEnumerator.MoveNext">
      <summary>
            移动到下一个对象
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.MyTreeNodeEnumerator.CancelChild">
      <summary>
            忽略当前节点的子节点列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.TreeNodeEnumerable.MyTreeNodeEnumerator.Current">
      <summary>
            获得当前对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.TreeNodeEnumerable._StartNode">
      <summary>
            枚举开始的节点对象
            </summary>
    </member>
    <member name="F:DCSoft.Common.TreeNodeEnumerable._StartNodes">
      <summary>
            枚举开始的当前节点列表
            </summary>
    </member>
    <member name="F:DCSoft.Common.TreeNodeEnumerable._RootNodes">
      <summary>
            根节点列表
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.#ctor(System.Object,System.Boolean)">
      <summary>
            初始化对象,参数为根节点列表和子节点属性名
            </summary>
      <param name="rootNode">根节点</param>
      <param name="setStartNode">是否设置起始节点</param>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.#ctor(System.Collections.IList,System.Boolean)">
      <summary>
            初始化对象,参数为根节点列表和子节点属性名
            </summary>
      <param name="rootNodes">根节点列表</param>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.Clear">
      <summary>
            清空所有的数据。准备销毁对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.GetChildNodes(System.Object)">
      <summary>
            获得子节点列表
            </summary>
      <param name="instance">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.IsParent(System.Object,System.Object)">
      <summary>
            判断对象是否存在父子关系
            </summary>
      <param name="parent">父节点对象</param>
      <param name="child">子节点对象</param>
      <returns>是否存在父子关系</returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.AppendChild(System.Object,System.Object)">
      <summary>
            添加子节点
            </summary>
      <param name="parent">父节点</param>
      <param name="child">子节点</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.BuildTree(System.Collections.IList)">
      <summary>
            构造树状结构。需要实现本类型的IsParent()和AppendChild()方法。
            </summary>
      <param name="resultList">
      </param>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.GetParent(System.Object)">
      <summary>
            获得父节点
            </summary>
      <param name="childNode">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.IsPublish(System.Object)">
      <summary>
            判断是否是对外发布的节点对象
            </summary>
      <param name="instance">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.CancelChild">
      <summary>
            忽略掉当前子节点，立即退出当前层次的循环。
            </summary>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.GetEnumerator">
      <summary>
            获得枚举器
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TreeNodeEnumerable.Dispose">
      <summary>
            销毁对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.TreeNodeEnumerable.CloneListMode">
      <summary>
            复制列表模式。
            </summary>
      <remarks>
            当循环遍历子元素时会修改子元素列表，导致遍历失败，此时使用复制列表模式可以避免这种情况。
            但会降低遍历速度。
            </remarks>
    </member>
    <member name="P:DCSoft.Common.TreeNodeEnumerable.LastPosition">
      <summary>
            最后一次的移动到的位置
            </summary>
    </member>
    <member name="P:DCSoft.Common.TreeNodeEnumerable.CurrentParent">
      <summary>
            当前对象的父节点对象
            </summary>
    </member>
    <member name="T:DCSoft.Common.TypeConverterSupportProperties">
      <summary>
            支持展现属性的类型转换器
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.TypeConverterSupportProperties.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            支持获得属性
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.TypeConverterSupportProperties.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])">
      <summary>
            获得属性
            </summary>
      <param name="context">
      </param>
      <param name="value">
      </param>
      <param name="attributes">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Common.DataObjectHelper">
      <summary>
            数据对象的帮助模块
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.DataObjectHelper.Format_FileNameW">
      <summary>
            文件名格式名
            </summary>
    </member>
    <member name="M:DCSoft.Common.DataObjectHelper.#ctor(System.Windows.Forms.IDataObject)">
      <summary>
            初始化对象
            </summary>
      <param name="obj">数据对象</param>
    </member>
    <member name="M:DCSoft.Common.DataObjectHelper.#ctor(System.Windows.Forms.DragEventArgs)">
      <summary>
            初始化对象
            </summary>
      <param name="args">拖拽事件参数对象</param>
    </member>
    <member name="M:DCSoft.Common.DataObjectHelper.HasSpecifyFormat(System.String)">
      <summary>
            判断是否存在指定的数据类型
            </summary>
      <param name="format">数据类型</param>
      <returns>是否存在数据</returns>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.HasImage">
      <summary>
            判断是否有图片数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.Image">
      <summary>
            设置/返回位图数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.HasText">
      <summary>
            判断是否有纯文本数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.Text">
      <summary>
            设置/返回纯文本数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.HasHtml">
      <summary>
            判断是否有Html数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.Html">
      <summary>
            设置/返回HTML数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.HasRtf">
      <summary>
            判断是否有RTF数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.Rtf">
      <summary>
            设置/返回RTF数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.HasFileNames">
      <summary>
            判断是否存在文件名清单
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.FileNames">
      <summary>
            获得文件名清单
            </summary>
    </member>
    <member name="P:DCSoft.Common.DataObjectHelper.FirstFileName">
      <summary>
            获得文件名清单中的第一个文件名
            </summary>
    </member>
    <member name="T:DCSoft.Common.DefaultServiceContainer">
      <summary>
            默认的服务器容器对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.GetService(System.Type)">
      <summary>
            添加获得指定类型的服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <returns>获得的对象</returns>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback,System.Boolean)">
      <summary>
            添加服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <param name="callback">获得对象的回调委托</param>
      <param name="promote">
      </param>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.AddService(System.Type,System.ComponentModel.Design.ServiceCreatorCallback)">
      <summary>
            添加服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <param name="callback">获得对象的回调委托</param>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.AddService(System.Type,System.Object,System.Boolean)">
      <summary>
            添加服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <param name="serviceInstance">对象实例</param>
      <param name="promote">
      </param>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.AddService(System.Type,System.Object)">
      <summary>
            添加服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <param name="serviceInstance">对象实例</param>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.RemoveService(System.Type,System.Boolean)">
      <summary>
            删除指定类型的服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
      <param name="promote">
      </param>
    </member>
    <member name="M:DCSoft.Common.DefaultServiceContainer.RemoveService(System.Type)">
      <summary>
            删除指定类型的服务器对象
            </summary>
      <param name="serviceType">服务器对象类型</param>
    </member>
    <member name="T:DCSoft.Common.FileHeaderHelper">
      <summary>
            文件头判断 编写袁永福
            </summary>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasCABHeader(System.Byte[])">
      <summary>
            判断数据块是否具有CAB文件头
            </summary>
      <param name="bs">数据块</param>
      <returns>是否具有CAB文件头</returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasZIPHeader(System.Byte[])">
      <summary>
            判断数据块是否具有ZIP文件头
            </summary>
      <param name="bs">数据块</param>
      <returns>是否具有ZIP文件头</returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasPNGHeader(System.Byte[])">
      <summary>
            判断数据块是否具有PNG图片文件标记头
            </summary>
      <param name="bs">数据块</param>
      <returns>是否具有PNG图片文件标记头</returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasGIFHeader(System.Byte[])">
      <summary>
            判断数据块是否具有GIF图像文件标记头
            </summary>
      <param name="bs">数据块</param>
      <returns>是否具有GIF图像文件标记头</returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasBMPHeader(System.Byte[])">
      <summary>
            判断数据块是否具有BMP标记头
            </summary>
      <param name="bs">数据块</param>
      <returns>是否具有BMP标记头</returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasJpegHeader(System.Byte[])">
      <summary>
            判断二进制数据是否具有JPEG格式的标记头
            </summary>
      <param name="bs">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.FileHeaderHelper.HasJpegHeader(System.Byte[],System.Boolean)">
      <summary>
            判断二进制数据是否具有JPEG格式的标记头
            </summary>
      <param name="bs">二进制数据</param>
      <param name="strict">是否进行严格的判断</param>
      <returns>是否有JPEG标记头</returns>
    </member>
    <member name="T:DCSoft.Common.FileHelper">
      <summary>
            文件处理类,DCWriter内部使用。
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.FileHelper.FixFileName(System.String,System.Char)">
      <summary>
            修整文件名
            </summary>
      <param name="strFileName">原始文件名</param>
      <param name="InvalidReplaceChar">替换掉错误字符的字符</param>
      <returns>修整后的文件名</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.LoadBinaryStream(System.IO.Stream)">
      <summary>
            读取指定流中所有的数据，返回一个字节数组
            </summary>
      <param name="stream">流对象</param>
      <returns>返回的字节数组</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.FormatByteSize(System.Int64)">
      <summary>
            格式化输出字节大小数据
            </summary>
      <param name="ByteSize">字节数</param>
      <returns>输出的字符串</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.FromGZipCompressedBinary(System.Byte[])">
      <summary>
            将压缩的二进制数据转换为对象
            </summary>
      <param name="bs">字节数组</param>
      <returns>转换的对象</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.GetFileMD5Base64String(System.String)">
      <summary>
            获得指定文件内容的BASE64格式的MD5编码值
            </summary>
      <param name="fileName">文件名</param>
      <returns>获得的编码文本</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.DESEncrypt(System.Byte[],System.Byte[],System.Byte[])">
      <summary>
            使用 DES 算法进行加密
            </summary>
      <param name="bs">原始数据</param>
      <param name="Key">键值</param>
      <param name="IV">初始化向量</param>
      <returns>加密后的值</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.DESDecrypt(System.Byte[],System.Byte[],System.Byte[],System.Boolean)">
      <summary>
            使用 DES 算法进行解密
            </summary>
      <param name="bs">原始数据</param>
      <param name="Key">键值</param>
      <param name="IV">初始化向量</param>
      <param name="throwException">遇到错误是否抛出异常</param>
      <returns>加密后的值</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.SearchFile(System.String,System.String,System.Boolean)">
      <summary>
            搜索文件
            </summary>
      <param name="rootPath">根目录</param>
      <param name="fileName">文件名</param>
      <param name="deeply">是否搜索下级目录</param>
      <returns>获得的文件全名</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.LoadResourceBinary(System.Type,System.String)">
      <summary>
            加载资源文件中的文本
            </summary>
      <param name="t">资源所在程序集中的类型</param>
      <param name="resourceName">资源名称</param>
      <returns>加载的文本</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.LoadResourceString(System.Type,System.String,System.Text.Encoding)">
      <summary>
            加载资源文件中的文本
            </summary>
      <param name="t">资源所在程序集中的类型</param>
      <param name="resourceName">资源名称</param>
      <param name="encoding">指定的文本编码格式</param>
      <returns>加载的文本</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.ToGZipCompressedBinary(System.Object)">
      <summary>
            将对象二进制序列化为压缩字节数组
            </summary>
      <param name="instance">对象</param>
      <returns>字节数组</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.CopyFolder(System.String,System.String,System.Boolean)">
      <summary>
            目录复制
            </summary>
      <param name="direcSource">源目录</param>
      <param name="direcTarget">目标目录</param>
      <param name="resetFileAttributes">是否重置复制的文件属性</param>
    </member>
    <member name="M:DCSoft.Common.FileHelper.SaveStreamToFile(System.IO.Stream,System.String)">
      <summary>
            保存流中的数据到一个文件中
            </summary>
      <param name="InputStream">流对象</param>
      <param name="strFileName">保存数据的文件名</param>
      <returns>保存的字节数</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.ReadFileHeader(System.String,System.Int32)">
      <summary>
            读取文件头
            </summary>
      <param name="fileName">文件名</param>
      <param name="maxByteLen">读取的最大的字节数</param>
      <returns>读取的数据</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.LoadBinaryFile(System.String,System.Boolean)">
      <summary>
            从指定文件读取二进制数据,返回获得的字节数组,若文件不存在或读取失败则返回空引用
            </summary>
      <param name="strFile">文件名</param>
      <param name="throwException">发生错误是否抛出异常</param>
      <returns>获得字节数组,若读取失败则返回空引用</returns>
    </member>
    <member name="M:DCSoft.Common.FileHelper.CopyStream(System.IO.Stream,System.IO.Stream)">
      <summary>
            将一个流中的所有的数据输出到另一个流中
            </summary>
      <param name="stream1">输出流</param>
      <param name="stream2">输入流</param>
      <returns>操作的字节数</returns>
    </member>
    <member name="T:DCSoft.Common.ListDebugView">
      <summary>
            IDE调试模式下查看列表类型数据的视图对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.ListDebugView.#ctor(System.Object)">
      <summary>
            initialize instance
            </summary>
      <param name="instance">
      </param>
    </member>
    <member name="P:DCSoft.Common.ListDebugView.Items">
      <summary>
            output debug item at design time
            </summary>
    </member>
    <member name="T:DCSoft.Common.ListDictionary`2">
      <summary>
            基于列表方式的字典类型
            </summary>
      <remarks>本字典内部采用列表方式来实现，速度慢，但能保持关键字的添加顺序。
            编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.ListDictionary`2.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.ListDictionary`2.Clear">
      <summary>
            清空字典
            </summary>
    </member>
    <member name="M:DCSoft.Common.ListDictionary`2.Remove(`0)">
      <summary>
            删除指定的键值
            </summary>
      <param name="keyValue">
      </param>
    </member>
    <member name="M:DCSoft.Common.ListDictionary`2.ContainsKey(`0)">
      <summary>
            判断是否存在指定的键值
            </summary>
      <param name="keyValue">键值</param>
      <returns>是否存在指定的键值</returns>
    </member>
    <member name="P:DCSoft.Common.ListDictionary`2.Count">
      <summary>
            字典中项目的个数
            </summary>
    </member>
    <member name="P:DCSoft.Common.ListDictionary`2.Values">
      <summary>
            获得所有的数值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ListDictionary`2.Keys">
      <summary>
            获得所有的键值
            </summary>
    </member>
    <member name="P:DCSoft.Common.ListDictionary`2.Item(`0)">
      <summary>
            设置/获得指定的键值对应的数值
            </summary>
      <param name="keyValue">键值</param>
      <returns>数值</returns>
    </member>
    <member name="T:DCSoft.Common.StackTraceHelper">
      <summary>
            应用程序调用堆栈信息帮助类
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.StackTraceHelper.CheckRecursion">
      <summary>
            检查调用本方法的方法是否发生了递归
            </summary>
      <remarks>本函数是利用应用程序调用堆栈来判断是否存在递归</remarks>
      <returns>若发生了递归则返回true,否则返回false</returns>
    </member>
    <member name="M:DCSoft.Common.StackTraceHelper.GetStackTraceExtString(System.Int32)">
      <summary>
            增强型的获得调用堆栈文本
            </summary>
    </member>
    <member name="P:DCSoft.Common.StackTraceHelper.StackTraceExtString">
      <summary>
            增强型的获得调用堆栈文本
            </summary>
    </member>
    <member name="T:DCSoft.Common.StringConvertHelper">
      <summary>
            DCWriter内部使用。将字符串转换为各种类型数值的通用例程
            </summary>
      <remarks>本模块不依赖其他代码文件。编制袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.StringConvertHelper.strChineseFirstPY">
      <summary>
            汉字拼音首字母列表 本列表包含了20902个汉字,用于配合 ToChineseSpell 函数使用,本表收录的字符的Unicode编码范围为19968至40869
            </summary>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.Split(System.String,System.String)">
      <summary>
             字符串拆分
             </summary>
      <param name="txt">字符串</param>
      <param name="spliter">拆分用的分割字符串</param>
      <returns>拆分结果</returns>
      <example>
             测试代码
             string[] items = Split(this.textBox1.Text, this.textBox2.Text);
            if (items == null)
            {
                MessageBox.Show("[NULL]");
            }
            else
            {
                StringBuilder str = new StringBuilder();
                foreach (string item in items)
                {
                    str.AppendLine(item);
                }
                MessageBox.Show(str.ToString());
            }
             </example>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.ParseCStyleEscapedString(System.String)">
      <summary>
            解析C语言样式的转义字符串
            </summary>
      <param name="txt">要解析的字符串</param>
      <returns>解析的结果</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.GetRomanNumber(System.Int32)">
      <summary>
            将数字转换为大写的罗马数字文本
            </summary>
      <param name="n">数字</param>
      <returns>转换后的罗马数字文本</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.IsIntegerString(System.String)">
      <summary>
            判断一个字符串是否全部由数字字符组成
            </summary>
      <param name="strData">要测试的字符串</param>
      <returns>若全部由数字字符组成则返回true 否则返回false ，字符串对象为空时也返回false</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.ToDBDateTime(System.String,System.DateTime)">
      <summary>
            将yyyyMMddHHmmss 格式的字符串转化为时间数据
            </summary>
      <param name="strData">原始字符串</param>
      <param name="DefaultValue">默认值</param>
      <returns>转换后的时间数据</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.ToInt32Values(System.String)">
      <summary>
            处理指定的字符串，将其中包含的所有的整数数值提取出来组成一个整数数组
            </summary>
      <param name="strText">要处理的字符串</param>
      <returns>整数数组</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.ToChineseSpell(System.String)">
      <summary>
            获得一个字符串的汉语拼音码
            </summary>
      <param name="strText">字符串</param>
      <returns>汉语拼音码,该字符串只包含大写的英文字母</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.IsChineseCharacter(System.Char)">
      <summary>
            判断是否是中文字符
            </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.SimplifiedToTraditional(System.Char)">
      <summary>
            简体汉字符转换为繁体汉字符
            </summary>
      <param name="c">要处理的字符</param>
      <returns>处理后的字符</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.TraditionalToSimplified(System.Char)">
      <summary>
            繁体汉字符转换为简体汉字符
            </summary>
      <param name="c">要处理的字符</param>
      <returns>处理后的字符</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.SimplifiedToTraditional(System.String)">
      <summary>
            简体汉字转换为繁体汉字
            </summary>
      <param name="text">要处理的文本</param>
      <returns>处理后的文本</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.SimplifiedSwapTraditional(System.Char)">
      <summary>
            简体和繁体相互转换
            </summary>
      <param name="c">要处理的字符</param>
      <returns>处理后的字符</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.SimplifiedSwapTraditional(System.String)">
      <summary>
            简体和繁体相互转换
            </summary>
      <param name="text">要处理的字符串</param>
      <returns>处理后的字符串</returns>
    </member>
    <member name="M:DCSoft.Common.StringConvertHelper.TraditionalToSimplified(System.String)">
      <summary>
            繁体汉字转换为简体汉字
            </summary>
      <param name="text">要处理的文本</param>
      <returns>处理后的文本</returns>
    </member>
    <member name="T:DCSoft.Common.URLHelper">
      <summary>
            操作URL字符串的一些例程
            </summary>
    </member>
    <member name="M:DCSoft.Common.URLHelper.CombinUrl(System.String,System.String)">
      <summary>
            合并路径
            </summary>
      <param name="baseUrl">基础URL</param>
      <param name="url">后续URL</param>
      <returns>合并后的URL</returns>
    </member>
    <member name="M:DCSoft.Common.URLHelper.GetBaseURL(System.String)">
      <summary>
            获得指定URL的基础路径
            </summary>
      <param name="url">URL字符串</param>
      <returns>基础路径</returns>
    </member>
    <member name="T:DCSoft.Common.ValueTypeHelper">
      <summary>
            数值,类型转换相关帮助类
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.CallMethodByName(System.Object,System.String,System.Object[],System.Boolean)">
      <summary>
            按照名称调用对象成员方法
            </summary>
      <param name="instance">对象实例</param>
      <param name="methodName">方法名称，不区分大小写</param>
      <param name="parameters">参数值数组</param>
      <param name="throwException">是否抛出异常</param>
      <returns>方法返回值</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
      <summary>
            设置对象的属性值
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名称</param>
      <param name="Value">属性值</param>
      <param name="throwException">是否抛出异常</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.GetPropertyValue(System.Object,System.String,System.Boolean)">
      <summary>
            获得对象属性值
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名</param>
      <param name="throwException">是否抛出异常</param>
      <returns>获得的属性值</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.GetPropertyDefaultValue(System.Reflection.PropertyInfo)">
      <summary>
            获得指定属性的默认值
            </summary>
      <param name="p">属性对象</param>
      <returns>默认值</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.GetDefaultValue(System.Type)">
      <summary>
            获得指定类型的默认值
            </summary>
      <param name="ValueType">数据类型</param>
      <returns>默认值</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.TryConvertTo(System.Object,System.Type,System.Object@)">
      <summary>
            试图进行数据类型转换
            </summary>
      <param name="Value">数值</param>
      <param name="NewType">新数据类型</param>
      <param name="Result">转换结果</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.ConvertTo(System.Object,System.Type,System.Object)">
      <summary>
            数据类型转换
            </summary>
      <param name="Value">要转换的数据</param>
      <param name="NewType">新数据类型</param>
      <param name="DefaultValue">默认值</param>
      <returns>转换结果</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.ConvertTo(System.Object,System.Type)">
      <summary>
            数据类型转换
            </summary>
      <param name="Value">旧数据</param>
      <param name="NewType">新数据类型</param>
      <returns>转换结果</returns>
    </member>
    <member name="M:DCSoft.Common.ValueTypeHelper.TryParseBoolean(System.String,System.Boolean@)">
      <summary>
            试图将字符串解释成布尔类型值
            </summary>
      <param name="Value">字符串值</param>
      <param name="Result">获得布尔类型值</param>
      <returns>操作是否成功</returns>
    </member>
    <member name="T:DCSoft.Common.ValueValidateLevel">
      <summary>
            数据校验无效等级
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueValidateLevel.Error">
      <summary>
            错误
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueValidateLevel.Warring">
      <summary>
            警告
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueValidateLevel.Info">
      <summary>
            只是提醒
            </summary>
    </member>
    <member name="T:DCSoft.Common.ValueTypeStyle">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.Text">
      <summary>
            文本
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.Integer">
      <summary>
            整数
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.Numeric">
      <summary>
            数值
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.Date">
      <summary>
            日期
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.Time">
      <summary>
            时间
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.DateTime">
      <summary>
            日期时间
            </summary>
    </member>
    <member name="F:DCSoft.Common.ValueTypeStyle.RegExpress">
      <summary>
            正则表达式
            </summary>
    </member>
    <member name="T:DCSoft.Common.VoidEventHandler">
      <summary>
            没有任何参数和返回值的事件委托类型
            </summary>
    </member>
    <member name="T:DCSoft.Common.XDependencyObject">
      <summary>
            具有附加属性系统的对象类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.XDependencyObject._InnerValues">
      <summary>
            内置的数据字典
            </summary>
    </member>
    <member name="F:DCSoft.Common.XDependencyObject.ValueModified">
      <summary>
            对象数据是否改变标记
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.RemoveDefaultValues(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyObject)">
      <summary>
            删除默认的属性值
            </summary>
      <param name="instance">要处理的对象</param>
      <param name="defaultValues">默认值</param>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.ApplyDefaultValuePropertyNames(DCSoft.Common.XDependencyObject,System.String,DCSoft.Common.XDependencyObject)">
      <summary>
            应用默认属性值
            </summary>
      <param name="instance">对象</param>
      <param name="names">属性名列表</param>
      <param name="defaultValue">默认值</param>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.GetStyleString(DCSoft.Common.XDependencyObject)">
      <summary>
            获得style样式的文本
            </summary>
      <param name="instance">对象实例</param>
      <returns>获得的文本</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.HasPropertyValue(DCSoft.Common.XDependencyObject,System.String)">
      <summary>
            判断对象是否存在指定名称的属性值，名称不区分大小写
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名</param>
      <returns>是否存在指定名称的属性值</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.CopyValueFast(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyObject)">
      <summary>
            快速复制对象数据，不进行默认值的判断
            </summary>
      <param name="source">数据来源</param>
      <param name="destination">复制目标</param>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.CopyValueFast(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyObject,System.Boolean)">
      <summary>
            快速复制对象数据，不进行默认值的判断
            </summary>
      <param name="source">数据来源</param>
      <param name="destination">复制目标</param>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.MergeValues(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyObject,System.Boolean)">
      <summary>
            合并数据
            </summary>
      <param name="source">数据源</param>
      <param name="destination">数据目标对象</param>
      <param name="overWrite">源数据是否覆盖目标数据</param>
      <returns>修改了目标对象的属性个数</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.RemoveProperty(DCSoft.Common.XDependencyObject,System.String)">
      <summary>
            删除指定名称的属性，属性名不区分大小写
            </summary>
      <param name="instance">对象实例</param>
      <param name="propertyName">属性名</param>
      <returns>操作是否修改了数据</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.EqualsValue(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyObject)">
      <summary>
            比较对象数据是否相同
            </summary>
      <param name="instance1">对象1</param>
      <param name="instance2">对象2</param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.ClearWithDispose">
      <summary>
            带Dispose的清空对象数值
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.GetValue(DCSoft.Common.XDependencyProperty)">
      <summary>
            获得对象数据
            </summary>
      <param name="property">属性对象</param>
      <returns>获得的数据</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyObject.SetValue(DCSoft.Common.XDependencyProperty,System.Object)">
      <summary>
            设置对象数据
            </summary>
      <param name="property">属性</param>
      <param name="Value">属性值</param>
    </member>
    <member name="P:DCSoft.Common.XDependencyObject.InnerValues">
      <summary>
            内部的数据列表
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObject.ValueLocked">
      <summary>
            是否锁定数据
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObject.DisableDefaultValue">
      <summary>
            禁止默认值规则
            </summary>
    </member>
    <member name="E:DCSoft.Common.XDependencyObject.ValueChanging">
      <summary>
            对象数据发生改变时的处理，此时可以取消操作或者修改要设置的新的数值
            </summary>
    </member>
    <member name="E:DCSoft.Common.XDependencyObject.ValueChanged">
      <summary>
            对象数据发生改变后的处理，此时仅仅通知操作，不能取消和修改新数值
            </summary>
    </member>
    <member name="T:DCSoft.Common.IXDependencyPropertyLoggable">
      <summary>
            能被记录属性值改变记录的对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.IXDependencyPropertyLoggable.PropertyLogger">
      <summary>
            获得属性值更改记录对象
            </summary>
    </member>
    <member name="T:DCSoft.Common.IXDependencyPropertyLogger">
      <summary>
            记录属性值改变过程的日志对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.IXDependencyPropertyLogger.Log(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyProperty,System.Object,System.Object)">
      <summary>
            做出记录
            </summary>
      <param name="instance">对象实例</param>
      <param name="property">属性</param>
      <param name="oldValue">旧数据</param>
      <param name="newValue">新数据</param>
    </member>
    <member name="P:DCSoft.Common.IXDependencyPropertyLogger.Enabled">
      <summary>
            对象是否可用
            </summary>
    </member>
    <member name="T:DCSoft.Common.XDependencyPropertyObjectValues">
      <summary>
            数值字典
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyPropertyObjectValues.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyPropertyObjectValues.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
            为反二进制序列化而定义的构造函数
            </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
      <remarks>由于XDependencyProperty类型不能进行二进制序列化，因此在此进行自定义二进制序列化</remarks>
    </member>
    <member name="T:DCSoft.Common.XDependencyObjectEventHandler">
      <summary>
            对象事件
            </summary>
      <param name="sender">发起者</param>
      <param name="args">参数</param>
    </member>
    <member name="T:DCSoft.Common.XDependencyObjectEventArgs">
      <summary>
            对象事件参数类型
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Common.XDependencyObjectEventArgs.#ctor(DCSoft.Common.XDependencyObject,DCSoft.Common.XDependencyProperty,System.Object,System.Object)">
      <summary>
            初始化对象
            </summary>
      <param name="instance">对象实例</param>
      <param name="property">属性</param>
      <param name="Value">数值</param>
      <param name="newValue">新数值</param>
    </member>
    <member name="P:DCSoft.Common.XDependencyObjectEventArgs.Instance">
      <summary>
            对象实例
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObjectEventArgs.Property">
      <summary>
            操作的属性
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObjectEventArgs.Value">
      <summary>
            属性值
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObjectEventArgs.NewValue">
      <summary>
            新属性值
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyObjectEventArgs.Cancel">
      <summary>
            是否取消操作
            </summary>
    </member>
    <member name="T:DCSoft.Common.XDependencyProperty">
      <summary>
      </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.XDependencyProperty.NullDefaultValue">
      <summary>
            表示没有默认值的数值
            </summary>
    </member>
    <member name="M:DCSoft.Common.XDependencyProperty.GetProperty(System.Type,System.String)">
      <summary>
            获得属性对象
            </summary>
      <param name="ownerType">对象类型</param>
      <param name="name">名称</param>
      <returns>获得的属性</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyProperty.GetProperties(System.Type,System.Boolean)">
      <summary>
            获得属性信息
            </summary>
      <param name="ownerType">对象类型</param>
      <param name="declearTypeOnly">仅获得本对象类型声明的属性</param>
      <returns>属性信息数组</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyProperty.EqualsDefaultValue(System.Object)">
      <summary>
            判断数据是否等于默认值
            </summary>
      <param name="Value">数值</param>
      <returns>是否等于默认值</returns>
    </member>
    <member name="M:DCSoft.Common.XDependencyProperty.ToString">
      <summary>
            返回表示对象的文本
            </summary>
      <returns>文本</returns>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.OwnerType">
      <summary>
            对象所属的类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.Name">
      <summary>
            对象名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.PropertyType">
      <summary>
            数据类型
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.DefaultValue">
      <summary>
            属性默认值
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.TypeConverter">
      <summary>
            配套的数据类型转换器
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.Editor">
      <summary>
            配套的编辑器对象
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.IsReadOnly">
      <summary>
            是否只读
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.Category">
      <summary>
            分类
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.Description">
      <summary>
            说明
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.DesignTimeOnly">
      <summary>
            是否在设计时才有效
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.DisplayName">
      <summary>
            显示名称
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.IsBrowsable">
      <summary>
            是否可浏览
            </summary>
    </member>
    <member name="P:DCSoft.Common.XDependencyProperty.IsLocalizable">
      <summary>
            能否本地化
            </summary>
    </member>
    <member name="T:DCSoft.Common.XMLHelper">
      <summary>
            处理XML文档的通用模块
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="F:DCSoft.Common.XMLHelper.XslNamespaceURI">
      <summary>
            XSL前缀元素名称空间字符串
            </summary>
    </member>
    <member name="F:DCSoft.Common.XMLHelper._NativeXmlName">
      <summary>
            要序列化的对象的原始名称
            </summary>
    </member>
    <member name="F:DCSoft.Common.XMLHelper._SerializeInfos">
      <summary>
            要序列化的对象属性信息字典
            </summary>
    </member>
    <member name="M:DCSoft.Common.XMLHelper.CleanupXMLHeader(System.String)">
      <summary>
            清除XML的头文本
            </summary>
      <param name="xmlText">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Common.XMLHelper.SaveObjectToIndentXMLString(System.Object)">
      <summary>
            保存对象到一个带缩进的XML字符串中
            </summary>
      <param name="instance">对象</param>
      <returns>XML字符串</returns>
    </member>
    <member name="M:DCSoft.Common.XMLHelper.CreateXMLNodeByPath(System.Xml.XmlNode,System.String,System.Int32,System.Xml.XmlNamespaceManager)">
      <summary>
            根据路径字符串创建XML节点
            </summary>
      <param name="RootNode">根节点</param>
      <param name="strPath">路径字符串</param>
      <param name="Create">
            创建节点的模式 0:若未找到节点则退出函数 , 
            1:若未找到节点则创建节点 2:不查找节点,立即创建节点</param>
      <param name="nsm">名称空间管理对象</param>
      <returns>找到或创建的XML节点</returns>
    </member>
    <member name="M:DCSoft.Common.XMLHelper.SaveObjectToIndentXMLStringFreedom(System.Object)">
      <summary>
            自由的保存对象到一个带缩进的XML字符串中
            </summary>
      <param name="instance">对象</param>
      <returns>XML字符串</returns>
    </member>
    <member name="M:DCSoft.Common.XMLSerializeHelper.GetSerializableProperties(System.Type,System.Boolean)">
      <summary>
            获得可以参与XML序列化的属性列表
            </summary>
      <param name="t">类型</param>
      <param name="declaredOnly">是否只获得类型内部定义的属性</param>
      <returns>属性信息列表</returns>
    </member>
    <member name="M:DCSoft.Common.XMLSerializeHelper.HasXmlIgnoreAttribute(System.Reflection.PropertyInfo)">
      <summary>
            判断属性是否标记了XmlIgnoreAttribute特性
            </summary>
      <param name="p">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Common.XmlStringWriter">
      <summary>
            XML字符串书写器
            </summary>
    </member>
    <member name="T:DCSoft.Common.XWebBrowsersStyle">
      <summary>
      </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.AutoDetect">
      <summary>
            自动检测
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.Standard">
      <summary>
            标准浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.FireFox">
      <summary>
            FirFox2.0及其以上版本
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.AppleMAC_Safari">
      <summary>
            苹果MAC的Safari浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.Chrome">
      <summary>
            谷歌Chrome浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.InternetExplorer">
      <summary>
            微软IE浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.InternetExplorer7">
      <summary>
            微软IE7浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.InternetExplorer8">
      <summary>
            微软IE8或更高级版本浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.Edge">
      <summary>
            WINDOWS10 EDGE浏览器。
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.NetscapeNavigator">
      <summary>
            Netscape Navigator浏览器
            </summary>
    </member>
    <member name="F:DCSoft.Common.XWebBrowsersStyle.Opera">
      <summary>
            OPERA浏览器
            </summary>
    </member>
    <member name="T:DCSoft.Design.CodeHelpViewerResource">
      <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.ResourceManager">
      <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.Culture">
      <summary>
              重写当前线程的 CurrentUICulture 属性
              重写当前线程的 CurrentUICulture 属性。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource._namespace">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.classpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.constpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.delegatepublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.dll">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.emitresources">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.enumitem">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.enumpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.eventpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.face">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.fieldpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.Flag_ValueInvalidate">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.IconControl">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.IconForm">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.IconWPFElement">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.interfacepublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.methodpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.propertypublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="P:DCSoft.Design.CodeHelpViewerResource.structpublic">
      <summary>
              查找 System.Drawing.Bitmap 类型的本地化资源。
            </summary>
    </member>
    <member name="T:DCSoft.Design.DCMemberComparer">
      <summary>
            类型成员比较器
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCMemberComparer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCMemberComparer.Compare(System.Reflection.MemberInfo,System.Reflection.MemberInfo)">
      <summary>
            比较成员
            </summary>
      <param name="x">第一个成员</param>
      <param name="y">第二个成员</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Design.DCReflectionTreeViewHelper">
      <summary>
            显示反射结果的树状视图列表控件相关的例程
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCReflectionTreeViewHelper.FillTypeNodes(System.Windows.Forms.TreeNode,System.Collections.IEnumerable,System.Boolean)">
      <summary>
            填充类型节点
            </summary>
      <param name="rootNode">根节点</param>
      <param name="types">类型列表</param>
      <param name="showNamespace">是否显示命名空间</param>
      <returns>类型和节点字典表</returns>
    </member>
    <member name="M:DCSoft.Design.DCReflectionTreeViewHelper.CreateStdImageList">
      <summary>
            创建标准图标列表
            </summary>
      <returns>创建的图标列表</returns>
    </member>
    <member name="M:DCSoft.Design.DCReflectionTreeViewHelper.GetImageIndex(System.Object)">
      <summary>
            获得图标编号
            </summary>
      <param name="obj">对象</param>
      <returns>图标编号，返回-1表示无图标。</returns>
    </member>
    <member name="T:DCSoft.Design.ComponentTypeInfo">
      <summary>
            编辑器可引用的组件类型信息
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfo.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.Name">
      <summary>
            控件类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.Namespace">
      <summary>
            类型命名空间
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.FullName">
      <summary>
            全名
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.BaseType">
      <summary>
            命中的基础类型
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.BaseTypeFullName">
      <summary>
            指定的基础类型全名
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.AssemblyFullName">
      <summary>
            程序集名称
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfo.ToolboxImage">
      <summary>
            图标图片
            </summary>
    </member>
    <member name="T:DCSoft.Design.ComponentTypeInfoLoader">
      <summary>
            可用控件信息加载对象
            </summary>
      <remarks>编制 袁永福</remarks>
    </member>
    <member name="T:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser">
      <summary>
            对象不混淆
            </summary>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser.GetControlInfosCrossAppDomain(System.String)">
      <summary>
            跨程序域的读取控件类型
            </summary>
      <param name="strFileName">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser.ShowHideControlType">
      <summary>
            显示隐藏的控件类型
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser.SupportBaseTypeFullNames">
      <summary>
            支持的基础类型名称
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.AssemblyAnalyser.ExcludeBaseTypeFullNames">
      <summary>
            禁止的基础类型名称
            </summary>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfoLoader.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfoLoader.Load(System.Reflection.Assembly)">
      <summary>
            从指定的程序集中加载组件类型信息
            </summary>
      <param name="asm">程序集对象</param>
      <returns>获得的组件类型信息数组</returns>
    </member>
    <member name="M:DCSoft.Design.ComponentTypeInfoLoader.Load(System.String)">
      <summary>
            从指定名称的程序集文件中加载组件类型信息
            </summary>
      <param name="fileName">程序集文件名</param>
      <returns>获得的组件类型信息数组</returns>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.ShowHideControlType">
      <summary>
            显示隐藏的控件类型
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.SupportedBaseTypes">
      <summary>
            支持的基础类型
            </summary>
    </member>
    <member name="P:DCSoft.Design.ComponentTypeInfoLoader.ExcludeBaseTypes">
      <summary>
            不支持的基础类型
            </summary>
    </member>
    <member name="T:DCSoft.Design.DCTypeNameComparer">
      <summary>
            类型名比较器
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCTypeNameComparer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCTypeNameComparer.Compare(System.Type,System.Type)">
      <summary>
            执行比较操作
            </summary>
      <param name="x">第一个类型</param>
      <param name="y">第二个类型</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Design.DCTypeFullNameComparer">
      <summary>
            类型全名比较器
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCTypeFullNameComparer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCTypeFullNameComparer.Compare(System.Type,System.Type)">
      <summary>
            执行比较操作
            </summary>
      <param name="x">第一个类型</param>
      <param name="y">第二个类型</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Design.DCMethodNameComparer">
      <summary>
            方法名称比较器
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCMethodNameComparer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCMethodNameComparer.Compare(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
      <summary>
            执行比较操作
            </summary>
      <param name="x">第一个类型</param>
      <param name="y">第二个类型</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Design.DCAssemblyNameComparer">
      <summary>
            程序集名比较器
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCAssemblyNameComparer.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.DCAssemblyNameComparer.Compare(System.Reflection.Assembly,System.Reflection.Assembly)">
      <summary>
            执行比较操作
            </summary>
      <param name="x">第一个程序集</param>
      <param name="y">第二个程序集</param>
      <returns>比较结果</returns>
    </member>
    <member name="T:DCSoft.Design.DesignResources">
      <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignResources.ResourceManager">
      <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignResources.Culture">
      <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
    </member>
    <member name="T:DCSoft.Design.DesignStrings">
      <summary>
              一个强类型的资源类，用于查找本地化的字符串等。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.ResourceManager">
      <summary>
              返回此类使用的缓存的 ResourceManager 实例。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.Culture">
      <summary>
              使用此强类型资源类，为所有资源查找
              重写当前线程的 CurrentUICulture 属性。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.ASMXFileFilter">
      <summary>
              查找类似 Web服务页面文件(*.asmx)|*.asmx 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.ASMXURLPickerCaption">
      <summary>
              查找类似 选择Web服务页面 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.ASPXFileFilter">
      <summary>
              查找类似 ASP.NET页面文件(*.aspx)|*.aspx 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.ASPXURLPickerCaption">
      <summary>
              查找类似 选择ASP.NET页面 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.AssemblyContent_Types">
      <summary>
              查找类似 {0}个类型 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.AssemblyFilter">
      <summary>
              查找类似 .NET程序集文件(*.dll;*.exe)|*.dll;*.exe 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.DataBaseSchema">
      <summary>
              查找类似 数据库结构 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.Loading">
      <summary>
              查找类似 正在加载... 的本地化字符串。
            </summary>
    </member>
    <member name="P:DCSoft.Design.DesignStrings.Total_Tables_Fields">
      <summary>
              查找类似 [共{0}张表，{1}个字段] 的本地化字符串。
            </summary>
    </member>
    <member name="T:DCSoft.Design.DesignUtils">
      <summary>
            设计时相关的支持
            </summary>
    </member>
    <member name="F:DCSoft.Design.DesignUtils._NoneType">
      <summary>
            表示空类型
            </summary>
    </member>
    <member name="F:DCSoft.Design.DesignUtils.CSharpKeywords">
      <summary>
            C#编程语言关键字
            </summary>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.IsStdAssembly(System.Reflection.Assembly)">
      <summary>
            判断一个程序集是否是标准运行库中的程序集
            </summary>
      <param name="asm">程序集对象</param>
      <returns>判断结果</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetAssemblies(System.Boolean,System.Boolean)">
      <summary>
            获得当前加载的程序集
            </summary>
      <param name="inluceSystem">是否包含.NET框架的标准程序集</param>
      <param name="includeTempAssembly">是否包含临时生成的程序集</param>
      <returns>程序集信息数组</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetTypeFullName(System.Type)">
      <summary>
            获得类型的全名
            </summary>
      <param name="type">类型对象</param>
      <returns>全名</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetTypeByName(System.String)">
      <summary>
            获得控件类型
            </summary>
      <param name="typeName">类型名称</param>
      <param name="specifyBaseType">指定的基础类型</param>
      <returns>获得的控件类型</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetSDKDir">
      <summary>
            获得.NET SDK安装目录
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetTypeNameFromCSSourceCode(System.String)">
      <summary>
            从一段C#代码中解析中第一个类型的名称
            </summary>
      <param name="strSourceCode">C#源代码</param>
      <returns>类型名称</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.SplitCSSourceCodeSymbols(System.String)">
      <summary>
            将一行C#代码拆分成多个语言标识符。
            </summary>
      <param name="strSourceCode">代码文本</param>
      <returns>标识符数组</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetNamespaceAndClassNameFromCSharpSourceCode(System.String,System.String@,System.String@)">
      <summary>
            分析CS源代码，获得其中的命名空间和类型名称
            </summary>
      <param name="csSourceCode">
      </param>
      <param name="nsName">
      </param>
      <param name="clsName">
      </param>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.FixToCSIdentifier(System.String,System.Char)">
      <summary>
            将文本修正为C#标识符类型,但不能处理以数字打头的情况
            </summary>
      <param name="txt">文本</param>
      <param name="replaceChar">无效字符的替换字符</param>
      <returns>修正后的文本</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetNearestType(System.Collections.IEnumerable,System.Type)">
      <summary>
            获得和指定
            </summary>
      <param name="types">
      </param>
      <param name="targetType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.EditEnumValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object,System.Type)">
      <summary>
            以列表方式编辑枚举类型数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="oldValue">
      </param>
      <param name="enumType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.EditValueUseListBox(System.Windows.Forms.ListBox,System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider)">
      <summary>
            使用列表控件编辑数值
            </summary>
      <param name="lst">列表控件对象</param>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <returns>列表控件中选中的项目序号</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetVBTypeName(System.Type)">
      <summary>
            获得类型的C#语法名称
            </summary>
      <param name="t">类型</param>
      <returns>类型名称</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetCSharpTypeShortName(System.Type)">
      <summary>
            获得类型的C#语法不含命名空间的名称
            </summary>
      <param name="t">类型</param>
      <returns>类型名称</returns>
    </member>
    <member name="M:DCSoft.Design.DesignUtils.GetCSharpTypeName(System.Type)">
      <summary>
            获得类型的C#语法的包含命名空间的全名称
            </summary>
      <param name="t">类型</param>
      <returns>类型名称</returns>
    </member>
    <member name="F:DCSoft.Design.dlgBrowseType.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Design.dlgBrowseType.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Design.dlgBrowseType.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="T:DCSoft.Design.EnumEditorSupportDescription">
      <summary>
            支持项目说明的枚举值编辑器
            </summary>
      <remarks>袁永福到此一游</remarks>
    </member>
    <member name="M:DCSoft.Design.EnumEditorSupportDescription.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)">
      <summary>
            为下拉列表方式
            </summary>
      <param name="context">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:DCSoft.Design.EnumEditorSupportDescription.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
      <summary>
            编辑数值
            </summary>
      <param name="context">
      </param>
      <param name="provider">
      </param>
      <param name="value">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Design.EventNameUIEditor">
      <summary>
            事件名称编辑器
            </summary>
    </member>
    <member name="T:DCSoft.Design.frmDescriptionEditor">
      <summary>
            描述性字符串资源编辑器
            </summary>
    </member>
    <member name="F:DCSoft.Design.frmDescriptionEditor.components">
      <summary>
            Required designer variable.
            </summary>
    </member>
    <member name="M:DCSoft.Design.frmDescriptionEditor.#ctor">
      <summary>
            初始化对象
            </summary>
    </member>
    <member name="M:DCSoft.Design.frmDescriptionEditor.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="M:DCSoft.Design.frmDescriptionEditor.InitializeComponent">
      <summary>
            Required method for Designer support - do not modify
            the contents of this method with the code editor.
            </summary>
    </member>
    <member name="M:DCSoft.Design.SerializeCodeGen.IndentStringBuilder._CheckArgumentNullReference(System.String,System.Boolean)">
      <summary>
            添加对参数为空引用的判断
            </summary>
      <param name="argName">参数名</param>
    </member>
    <member name="M:DCSoft.Design.SerializeCodeGen.RemoveColorStringProperty(System.Collections.IList)">
      <summary>
            删除Color类型的属性配套的Value或String的字符串类型属性对象
            </summary>
      <param name="members">
      </param>
    </member>
    <member name="M:DCSoft.Design.SerializeCodeGen.GetSubClassTypes(System.Type)">
      <summary>
            获得派生类型，包括自己
            </summary>
      <param name="baseType">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:DCSoft.Design.Web.ASMXUrlEditor">
      <summary>
            编辑ASPX页面URL的属性编辑器
            </summary>
    </member>
    <member name="T:DCSoft.Design.Web.ASPXUrlEditor">
      <summary>
            编辑ASPX页面URL的属性编辑器
            </summary>
    </member>
  </members>
</doc>